{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HelpFormatter.java",
  "functionName": "renderWrappedTextBlock",
  "functionId": "renderWrappedTextBlock___sb-StringBuffer(modifiers-final)__width-int(modifiers-final)__nextLineTabStop-int(modifiers-final)__text-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
  "functionAnnotation": "",
  "functionDoc": "Render the specified text width a maximum width. This method differs from renderWrappedText by not removing leading\r\nspaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
  "functionStartLine": 797,
  "functionEndLine": 815,
  "numCommitsSeen": 77,
  "timeTaken": 337,
  "changeHistory": [
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "fadd0a3c19356ebd5a0ee5a365ff0b6666ff99a9",
    "10eeaf63d01a0c31c5af87438d83be7096cd343e",
    "39e1da969818b360858115ae5d852e22acd4329a",
    "483f811dfefdc6bee162481425f261d983f15e4a"
  ],
  "changeHistoryShort": {
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "fadd0a3c19356ebd5a0ee5a365ff0b6666ff99a9": "Ybodychange",
    "10eeaf63d01a0c31c5af87438d83be7096cd343e": "Yreturntypechange",
    "39e1da969818b360858115ae5d852e22acd4329a": "Yformatchange",
    "483f811dfefdc6bee162481425f261d983f15e4a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f": {
      "type": "Ybodychange",
      "commitMessage": "Update checkstyle and enforce.\n",
      "commitDate": "10/22/21 5:29 PM",
      "commitName": "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/22/21 5:24 PM",
      "commitNameOld": "82403d07579665a0c194a638425ac24e08581ac2",
      "commitAuthorOld": "Jakub Nowak",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private Appendable renderWrappedTextBlock(final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\r\n    try {\r\n        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (final IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 797,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs from renderWrappedText by not removing leading\r\nspaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "2/8/21 10:11 PM",
          "commitNameOld": "66cc7b4cb8b0f39edfe0ee37eead4ace04a7be4e",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 236.04,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private Appendable renderWrappedTextBlock(final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\r\n    try {\r\n        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (final IOException e) {\r\n    }\r\n    return sb;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 813,
          "functionName": "renderWrappedTextBlock",
          "functionAnnotation": "",
          "functionDoc": "Render the specified text width a maximum width. This method differs from renderWrappedText by not removing leading\r\nspaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
            "newValue": "Render the specified text width a maximum width. This method differs from renderWrappedText by not removing leading\r\nspaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "2/8/21 10:11 PM",
          "commitNameOld": "66cc7b4cb8b0f39edfe0ee37eead4ace04a7be4e",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 236.04,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "private Appendable renderWrappedTextBlock(final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\r\n    try {\r\n        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (final IOException e) {\r\n    }\r\n    return sb;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
          "functionStartLine": 813,
          "functionName": "renderWrappedTextBlock",
          "functionAnnotation": "",
          "functionDoc": "Render the specified text width a maximum width. This method differs from renderWrappedText by not removing leading\r\nspaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private Appendable renderWrappedTextBlock(final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\r\n    try {\r\n        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (final IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 942,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "@@ -1,17 +1,17 @@\n-private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n+private Appendable renderWrappedTextBlock(final StringBuffer sb, final int width, final int nextLineTabStop, final String text) {\r\n     try {\r\n         final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n         String line;\r\n         boolean firstLine \u003d true;\r\n         while ((line \u003d in.readLine()) !\u003d null) {\r\n             if (!firstLine) {\r\n                 sb.append(getNewLine());\r\n             } else {\r\n                 firstLine \u003d false;\r\n             }\r\n             renderWrappedText(sb, width, nextLineTabStop, line);\r\n         }\r\n     } catch (final IOException e) {\r\n     }\r\n     return sb;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[sb-StringBuffer, width-int, nextLineTabStop-int, text-String]",
        "newValue": "[sb-StringBuffer(modifiers-final), width-int(modifiers-final), nextLineTabStop-int(modifiers-final), text-String(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/3/15 5:31 PM",
      "commitNameOld": "3a730c03fcd3f2715c83db85331d1b5b8c95a1d5",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 764.09,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "actualSource": "private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n    try {\r\n        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (final IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 942,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "@@ -1,17 +1,17 @@\n private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n     try {\r\n-        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n+        final BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n         String line;\r\n         boolean firstLine \u003d true;\r\n         while ((line \u003d in.readLine()) !\u003d null) {\r\n             if (!firstLine) {\r\n                 sb.append(getNewLine());\r\n             } else {\r\n                 firstLine \u003d false;\r\n             }\r\n             renderWrappedText(sb, width, nextLineTabStop, line);\r\n         }\r\n-    } catch (IOException e) {\r\n+    } catch (final IOException e) {\r\n     }\r\n     return sb;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fadd0a3c19356ebd5a0ee5a365ff0b6666ff99a9": {
      "type": "Ybodychange",
      "commitMessage": "Ignore pmd warning, cannot happen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1444961 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/11/13 11:03 PM",
      "commitName": "fadd0a3c19356ebd5a0ee5a365ff0b6666ff99a9",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/6/13 8:12 PM",
      "commitNameOld": "08a1eb7875d24830e37a969e9963ccc365586ca1",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n    try {\r\n        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 938,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "10eeaf63d01a0c31c5af87438d83be7096cd343e": {
      "type": "Yreturntypechange",
      "commitMessage": "Replaced StringBuilder with StringBuffer wherever possible without breaking binary compatibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1214688 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/15/11 12:26 PM",
      "commitName": "10eeaf63d01a0c31c5af87438d83be7096cd343e",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "4/21/11 2:22 PM",
      "commitNameOld": "491340dc5e6c8d4233cc575571e15dd357f20b70",
      "commitAuthorOld": "Simone Tripodi",
      "daysBetweenCommits": 237.96,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n    try {\r\n        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 897,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "@@ -1,17 +1,17 @@\n-private StringBuffer renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n+private Appendable renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n     try {\r\n         BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n         String line;\r\n         boolean firstLine \u003d true;\r\n         while ((line \u003d in.readLine()) !\u003d null) {\r\n             if (!firstLine) {\r\n                 sb.append(getNewLine());\r\n             } else {\r\n                 firstLine \u003d false;\r\n             }\r\n             renderWrappedText(sb, width, nextLineTabStop, line);\r\n         }\r\n     } catch (IOException e) {\r\n     }\r\n     return sb;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "StringBuffer",
        "newValue": "Appendable"
      }
    },
    "39e1da969818b360858115ae5d852e22acd4329a": {
      "type": "Yformatchange",
      "commitMessage": "Checkstyles fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091550 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11 10:17 PM",
      "commitName": "39e1da969818b360858115ae5d852e22acd4329a",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "4/12/11 9:57 PM",
      "commitNameOld": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private StringBuffer renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n    try {\r\n        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 899,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "483f811dfefdc6bee162481425f261d983f15e4a": {
      "type": "Yintroduced",
      "commitMessage": "Indented lines in the header and footer are now preserved (CLI-207)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@966306 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/21/10 7:40 PM",
      "commitName": "483f811dfefdc6bee162481425f261d983f15e4a",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,17 @@\n+private StringBuffer renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n+    try {\r\n+        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n+        String line;\r\n+        boolean firstLine \u003d true;\r\n+        while ((line \u003d in.readLine()) !\u003d null) {\r\n+            if (!firstLine) {\r\n+                sb.append(getNewLine());\r\n+            } else {\r\n+                firstLine \u003d false;\r\n+            }\r\n+            renderWrappedText(sb, width, nextLineTabStop, line);\r\n+        }\r\n+    } catch (IOException e) {\r\n+    }\r\n+    return sb;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private StringBuffer renderWrappedTextBlock(StringBuffer sb, int width, int nextLineTabStop, String text) {\r\n    try {\r\n        BufferedReader in \u003d new BufferedReader(new StringReader(text));\r\n        String line;\r\n        boolean firstLine \u003d true;\r\n        while ((line \u003d in.readLine()) !\u003d null) {\r\n            if (!firstLine) {\r\n                sb.append(getNewLine());\r\n            } else {\r\n                firstLine \u003d false;\r\n            }\r\n            renderWrappedText(sb, width, nextLineTabStop, line);\r\n        }\r\n    } catch (IOException e) {\r\n    }\r\n    return sb;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/HelpFormatter.java",
      "functionStartLine": 900,
      "functionName": "renderWrappedTextBlock",
      "functionAnnotation": "",
      "functionDoc": "Render the specified text width a maximum width. This method differs\r\nfrom renderWrappedText by not removing leading spaces after a new line.\r\n\r\n@param sb The StringBuffer to place the rendered text into.\r\n@param width The number of characters to display per line\r\n@param nextLineTabStop The position on the next line for the first tab.\r\n@param text The text to be rendered.\r\n"
    }
  }
}