{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OptionTest.java",
  "functionName": "testBuilderMethods",
  "functionId": "testBuilderMethods",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/OptionTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 113,
  "functionEndLine": 142,
  "numCommitsSeen": 22,
  "timeTaken": 170,
  "changeHistory": [
    "34278395b6115752774c3d16a00292591da2dde3",
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
    "df52eee396b1e8ce24fd1ec34752e1049618255a"
  ],
  "changeHistoryShort": {
    "34278395b6115752774c3d16a00292591da2dde3": "Ybodychange",
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842": "Ybodychange",
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": "Ybodychange",
    "df52eee396b1e8ce24fd1ec34752e1049618255a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34278395b6115752774c3d16a00292591da2dde3": {
      "type": "Ybodychange",
      "commitMessage": "[CLI-317] NullPointerException thrown by CommandLineParser.parse()\n",
      "commitDate": "8/19/23 4:26 PM",
      "commitName": "34278395b6115752774c3d16a00292591da2dde3",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "7/7/23 11:41 PM",
      "commitNameOld": "68047bb8272d4483d360f742f51708fb53702602",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 42.7,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    final char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, 1, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n    checkOption(Option.builder().option(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 113,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n @Test\r\n public void testBuilderMethods() {\r\n     final char defaultSeparator \u003d (char) 0;\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, 1, null, false, true, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n     checkOption(Option.builder().option(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842": {
      "type": "Ybodychange",
      "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
      "commitDate": "10/20/21 3:11 PM",
      "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/20/21 3:03 PM",
      "commitNameOld": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
      "commitAuthorOld": "Waldemar Sojka",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    final char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n    checkOption(Option.builder().option(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 85,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n @Test\r\n public void testBuilderMethods() {\r\n     final char defaultSeparator \u003d (char) 0;\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n-    checkOption(Option.builder().opt(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n+    checkOption(Option.builder().option(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede": {
      "type": "Ybodychange",
      "commitMessage": "Added setter for Builder.option (#33)\n\n* added separate setter for Builder.opt\r\n\r\n* added setter for option name with validation\r\n\r\n* fixed checkstyle error",
      "commitDate": "10/20/21 3:03 PM",
      "commitName": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
      "commitAuthor": "Waldemar Sojka",
      "commitDateOld": "10/7/21 4:09 AM",
      "commitNameOld": "a1222147c2d3a99aa19776ee2dea30974d57571a",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 13.45,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    final char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n    checkOption(Option.builder().opt(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 85,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,19 @@\n @Test\r\n public void testBuilderMethods() {\r\n     final char defaultSeparator \u003d (char) 0;\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n+    checkOption(Option.builder().opt(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 653.98,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    final char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 151,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/25/17 9:32 PM",
      "commitNameOld": "269eae18a911f792895d0402f5dd4e7913410523",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 71.92,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    final char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 164,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n @Test\r\n public void testBuilderMethods() {\r\n-    char defaultSeparator \u003d (char) 0;\r\n+    final char defaultSeparator \u003d (char) 0;\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n     checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": {
      "type": "Ybodychange",
      "commitMessage": "[CLI-224] Add static builder methods to Option, check if at least one of opt/longOpt has been specified, update javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1447005 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/17/13 1:11 PM",
      "commitName": "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/11/13 12:14 PM",
      "commitNameOld": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 6.04,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    char defaultSeparator \u003d (char) 0;\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 152,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n @Test\r\n public void testBuilderMethods() {\r\n     char defaultSeparator \u003d (char) 0;\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n-    checkOption(new Option.Builder(\"a\", \"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n+    checkOption(Option.builder(\"a\").desc(\"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df52eee396b1e8ce24fd1ec34752e1049618255a": {
      "type": "Yintroduced",
      "commitMessage": "[CLI-224] Added new fluent builder API to Option, deprecating OptionBuilder, adapting the PatternOptionBuilder to use the new API, thanks to Duncan Jones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1444720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/11/13 12:14 PM",
      "commitName": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthor": "Thomas Neidhart",
      "diff": "@@ -0,0 +1,18 @@\n+@Test\r\n+public void testBuilderMethods() {\r\n+    char defaultSeparator \u003d (char) 0;\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n+    checkOption(new Option.Builder(\"a\", \"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Test\r\npublic void testBuilderMethods() {\r\n    char defaultSeparator \u003d (char) 0;\r\n    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").longOpt(\"aaa\").build(), \"a\", \"desc\", \"aaa\", Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").hasArg(true).build(), \"a\", \"desc\", null, 1, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").numberOfArgs(3).build(), \"a\", \"desc\", null, 3, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").required(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, true, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").required(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").argName(\"arg1\").build(), \"a\", \"desc\", null, Option.UNINITIALIZED, \"arg1\", false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(false).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").optionalArg(true).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, true, defaultSeparator, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").valueSeparator(\u0027:\u0027).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, \u0027:\u0027, String.class);\r\n    checkOption(new Option.Builder(\"a\", \"desc\").type(Integer.class).build(), \"a\", \"desc\", null, Option.UNINITIALIZED, null, false, false, defaultSeparator, Integer.class);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionTest.java",
      "functionStartLine": 152,
      "functionName": "testBuilderMethods",
      "functionAnnotation": "@Test",
      "functionDoc": ""
    }
  }
}