{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "option",
  "functionId": "$option___option-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5.0\r\n",
  "functionStartLine": 192,
  "functionEndLine": 195,
  "numCommitsSeen": 116,
  "timeTaken": 217,
  "changeHistory": [
    "62b510f93283fee7225b56c95b6d017b8546367f",
    "cc37692b8edbb78cdee140d5c487e0bb42ec3e05",
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede"
  ],
  "changeHistoryShort": {
    "62b510f93283fee7225b56c95b6d017b8546367f": "Yparametermetachange",
    "cc37692b8edbb78cdee140d5c487e0bb42ec3e05": "Ydocchange",
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede": "Yintroduced"
  },
  "changeHistoryDetails": {
    "62b510f93283fee7225b56c95b6d017b8546367f": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final.\n",
      "commitDate": "10/23/21 3:53 PM",
      "commitName": "62b510f93283fee7225b56c95b6d017b8546367f",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/23/21 3:40 PM",
      "commitNameOld": "cc37692b8edbb78cdee140d5c487e0bb42ec3e05",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder option(final String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 190,
      "functionName": "option",
      "functionAnnotation": "",
      "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5.0\r\n",
      "diff": "@@ -1,4 +1,4 @@\n-public Builder option(String option) throws IllegalArgumentException {\r\n+public Builder option(final String option) throws IllegalArgumentException {\r\n     this.option \u003d OptionValidator.validate(option);\r\n     return this;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[option-String]",
        "newValue": "[option-String(modifiers-final)]"
      }
    },
    "cc37692b8edbb78cdee140d5c487e0bb42ec3e05": {
      "type": "Ydocchange",
      "commitMessage": "Next version is 1.5.0.\n",
      "commitDate": "10/23/21 3:40 PM",
      "commitName": "cc37692b8edbb78cdee140d5c487e0bb42ec3e05",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/22/21 3:56 PM",
      "commitNameOld": "8dcf11911ab73ddb5455853a31149a00549261b5",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder option(String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 190,
      "functionName": "option",
      "functionAnnotation": "",
      "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5.0\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n",
        "newValue": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5.0\r\n"
      }
    },
    "591af95e0a51d067f69f0ddf1a0ac54ef5c04842": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
      "commitDate": "10/20/21 3:11 PM",
      "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
          "commitDate": "10/20/21 3:11 PM",
          "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/20/21 3:03 PM",
          "commitNameOld": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
          "commitAuthorOld": "Waldemar Sojka",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder option(String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 186,
          "functionName": "option",
          "functionAnnotation": "",
          "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder opt(String opt) throws IllegalArgumentException {\r\n-    this.option \u003d OptionValidator.validate(opt);\r\n+public Builder option(String option) throws IllegalArgumentException {\r\n+    this.option \u003d OptionValidator.validate(option);\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "opt",
            "newValue": "option"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
          "commitDate": "10/20/21 3:11 PM",
          "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/20/21 3:03 PM",
          "commitNameOld": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
          "commitAuthorOld": "Waldemar Sojka",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder option(String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 186,
          "functionName": "option",
          "functionAnnotation": "",
          "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder opt(String opt) throws IllegalArgumentException {\r\n-    this.option \u003d OptionValidator.validate(opt);\r\n+public Builder option(String option) throws IllegalArgumentException {\r\n+    this.option \u003d OptionValidator.validate(option);\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[opt-String]",
            "newValue": "[option-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
          "commitDate": "10/20/21 3:11 PM",
          "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/20/21 3:03 PM",
          "commitNameOld": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
          "commitAuthorOld": "Waldemar Sojka",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder option(String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 186,
          "functionName": "option",
          "functionAnnotation": "",
          "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder opt(String opt) throws IllegalArgumentException {\r\n-    this.option \u003d OptionValidator.validate(opt);\r\n+public Builder option(String option) throws IllegalArgumentException {\r\n+    this.option \u003d OptionValidator.validate(option);\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Added setter for Builder.option #33.\n\n- Rename new method\n- Add missing @since tag to new method.\n- Sort new members.\n",
          "commitDate": "10/20/21 3:11 PM",
          "commitName": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/20/21 3:03 PM",
          "commitNameOld": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
          "commitAuthorOld": "Waldemar Sojka",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder option(String option) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(option);\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 186,
          "functionName": "option",
          "functionAnnotation": "",
          "functionDoc": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder opt(String opt) throws IllegalArgumentException {\r\n-    this.option \u003d OptionValidator.validate(opt);\r\n+public Builder option(String option) throws IllegalArgumentException {\r\n+    this.option \u003d OptionValidator.validate(option);\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Sets the name of the Option.\r\n\r\n@param opt the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n",
            "newValue": "Sets the name of the Option.\r\n\r\n@param option the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n@since 1.5\r\n"
          }
        }
      ]
    },
    "c886434a34107af01ae3cf70645e8e7d8aaa9ede": {
      "type": "Yintroduced",
      "commitMessage": "Added setter for Builder.option (#33)\n\n* added separate setter for Builder.opt\r\n\r\n* added setter for option name with validation\r\n\r\n* fixed checkstyle error",
      "commitDate": "10/20/21 3:03 PM",
      "commitName": "c886434a34107af01ae3cf70645e8e7d8aaa9ede",
      "commitAuthor": "Waldemar Sojka",
      "diff": "@@ -0,0 +1,4 @@\n+public Builder opt(String opt) throws IllegalArgumentException {\r\n+    this.option \u003d OptionValidator.validate(opt);\r\n+    return this;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Builder opt(String opt) throws IllegalArgumentException {\r\n    this.option \u003d OptionValidator.validate(opt);\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 97,
      "functionName": "opt",
      "functionAnnotation": "",
      "functionDoc": "Sets the name of the Option.\r\n\r\n@param opt the name of the Option\r\n@return this builder, to allow method chaining\r\n@throws IllegalArgumentException if there are any non valid Option characters in {@code opt}\r\n"
    }
  }
}