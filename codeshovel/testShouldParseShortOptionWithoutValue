{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BugCLI265Test.java",
  "functionName": "testShouldParseShortOptionWithoutValue",
  "functionId": "testShouldParseShortOptionWithoutValue",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 69,
  "functionEndLine": 77,
  "numCommitsSeen": 15,
  "timeTaken": 117,
  "changeHistory": [
    "90c8341e0a10115b552a06c97c016e7a954557e9",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "1bf9e6c551b6a2e7d37291673a1ff77c338ce131"
  ],
  "changeHistoryShort": {
    "90c8341e0a10115b552a06c97c016e7a954557e9": "Yrename",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "1bf9e6c551b6a2e7d37291673a1ff77c338ce131": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90c8341e0a10115b552a06c97c016e7a954557e9": {
      "type": "Yrename",
      "commitMessage": "Normalize test method names\n",
      "commitDate": "11/3/23 4:21 PM",
      "commitName": "90c8341e0a10115b552a06c97c016e7a954557e9",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/3/21 2:32 AM",
      "commitNameOld": "b805e90dd082b4549ef4d565d13c6db8fdb96a5e",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 761.58,
      "commitsBetweenForRepo": 341,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testShouldParseShortOptionWithoutValue() throws Exception {\r\n    final String[] twoShortOptions \u003d { \"-t1\", \"-last\" };\r\n    final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n    assertTrue(commandLine.hasOption(\"t1\"));\r\n    assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n    assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
      "functionStartLine": 69,
      "functionName": "testShouldParseShortOptionWithoutValue",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Test\r\n-public void shouldParseShortOptionWithoutValue() throws Exception {\r\n+public void testShouldParseShortOptionWithoutValue() throws Exception {\r\n     final String[] twoShortOptions \u003d { \"-t1\", \"-last\" };\r\n     final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n     assertTrue(commandLine.hasOption(\"t1\"));\r\n     assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n     assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "shouldParseShortOptionWithoutValue",
        "newValue": "testShouldParseShortOptionWithoutValue"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 1580.14,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void shouldParseShortOptionWithoutValue() throws Exception {\r\n    final String[] twoShortOptions \u003d { \"-t1\", \"-last\" };\r\n    final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n    assertTrue(commandLine.hasOption(\"t1\"));\r\n    assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n    assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
      "functionStartLine": 66,
      "functionName": "shouldParseShortOptionWithoutValue",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Test\r\n public void shouldParseShortOptionWithoutValue() throws Exception {\r\n-    final String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n+    final String[] twoShortOptions \u003d { \"-t1\", \"-last\" };\r\n     final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n     assertTrue(commandLine.hasOption(\"t1\"));\r\n     assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n     assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/8/16 8:36 AM",
      "commitNameOld": "ac2a1c85616f0140418de9190389fe7b80296c39",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 270.46,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void shouldParseShortOptionWithoutValue() throws Exception {\r\n    final String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n    final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n    assertTrue(commandLine.hasOption(\"t1\"));\r\n    assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n    assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
      "functionStartLine": 66,
      "functionName": "shouldParseShortOptionWithoutValue",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Test\r\n public void shouldParseShortOptionWithoutValue() throws Exception {\r\n-    String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n+    final String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n     final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n     assertTrue(commandLine.hasOption(\"t1\"));\r\n     assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n     assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1bf9e6c551b6a2e7d37291673a1ff77c338ce131": {
      "type": "Yintroduced",
      "commitMessage": "CLI-265: Optional argument picking up next regular option as its argument. Thank you to Lynn Henderson, Martin Sandiford and Veit Guna for providing reproductions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1759695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/7/16 11:19 PM",
      "commitName": "1bf9e6c551b6a2e7d37291673a1ff77c338ce131",
      "commitAuthor": "Benedikt Ritter",
      "diff": "@@ -0,0 +1,8 @@\n+@Test\r\n+public void shouldParseShortOptionWithoutValue() throws Exception {\r\n+    String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n+    final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n+    assertTrue(commandLine.hasOption(\"t1\"));\r\n+    assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n+    assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "@Test\r\npublic void shouldParseShortOptionWithoutValue() throws Exception {\r\n    String[] twoShortOptions \u003d new String[] { \"-t1\", \"-last\" };\r\n    final CommandLine commandLine \u003d parser.parse(options, twoShortOptions);\r\n    assertTrue(commandLine.hasOption(\"t1\"));\r\n    assertNotEquals(\"Second option has been used as value for first option\", \"-last\", commandLine.getOptionValue(\"t1\"));\r\n    assertTrue(\"Second option has not been detected\", commandLine.hasOption(\"last\"));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI265Test.java",
      "functionStartLine": 46,
      "functionName": "shouldParseShortOptionWithoutValue",
      "functionAnnotation": "@Test",
      "functionDoc": ""
    }
  }
}