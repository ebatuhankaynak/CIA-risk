{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultParser.java",
  "functionName": "handleShortAndLongOption",
  "functionId": "handleShortAndLongOption___token-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/DefaultParser.java",
  "functionAnnotation": "",
  "functionDoc": "Handles the following tokens:\r\n\r\n-S -SV -S V -S\u003dV -S1S2 -S1S2 V -SV1\u003dV2\r\n\r\n-L -LV -L V -L\u003dV -l\r\n\r\n@param token the command line token to handle\r\n",
  "functionStartLine": 459,
  "functionEndLine": 522,
  "numCommitsSeen": 47,
  "timeTaken": 233,
  "changeHistory": [
    "44173949e8165537b201d4efd024e31e6e8b06eb",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4",
    "a1b5d44432c057cf675f051bb20379937565f4ef",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "f43698527ef2b5ba15fe85d46d2d505418f68243"
  ],
  "changeHistoryShort": {
    "44173949e8165537b201d4efd024e31e6e8b06eb": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342": "Ybodychange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": "Yformatchange",
    "a1b5d44432c057cf675f051bb20379937565f4ef": "Ybodychange",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "f43698527ef2b5ba15fe85d46d2d505418f68243": "Yintroduced"
  },
  "changeHistoryDetails": {
    "44173949e8165537b201d4efd024e31e6e8b06eb": {
      "type": "Ybodychange",
      "commitMessage": "CLI-254: \"test\" gets parsed as test, quotes die :-( (#58)\n\n* CLI-254 \"test\" gets parsed as test, quotes die :-(\r\n\r\n* address review comments, improve backwards compatibility",
      "commitDate": "10/17/21 5:37 PM",
      "commitName": "44173949e8165537b201d4efd024e31e6e8b06eb",
      "commitAuthor": "Istvan Toth",
      "commitDateOld": "10/4/21 12:41 AM",
      "commitNameOld": "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 13.71,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(final String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(t.substring(opt.length())));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(t.substring(1)));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 358,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S -SV -S V -S\u003dV -S1S2 -S1S2 V -SV1\u003dV2\r\n\r\n-L -LV -L V -L\u003dV -l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "@@ -1,50 +1,50 @@\n private void handleShortAndLongOption(final String token) throws ParseException {\r\n     final String t \u003d Util.stripLeadingHyphens(token);\r\n     final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n     if (t.length() \u003d\u003d 1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else {\r\n             handleUnknownToken(token);\r\n         }\r\n     } else if (pos \u003d\u003d -1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n             handleLongOptionWithoutEqual(token);\r\n         } else {\r\n             final String opt \u003d getLongPrefix(t);\r\n             if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                 handleOption(options.getOption(opt));\r\n-                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n+                currentOption.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(t.substring(opt.length())));\r\n                 currentOption \u003d null;\r\n             } else if (isJavaProperty(t)) {\r\n                 handleOption(options.getOption(t.substring(0, 1)));\r\n-                currentOption.addValueForProcessing(t.substring(1));\r\n+                currentOption.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(t.substring(1)));\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleConcatenatedOptions(token);\r\n             }\r\n         }\r\n     } else {\r\n         final String opt \u003d t.substring(0, pos);\r\n         final String value \u003d t.substring(pos + 1);\r\n         if (opt.length() \u003d\u003d 1) {\r\n             final Option option \u003d options.getOption(opt);\r\n             if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                 handleOption(option);\r\n                 currentOption.addValueForProcessing(value);\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleUnknownToken(token);\r\n             }\r\n         } else if (isJavaProperty(opt)) {\r\n             handleOption(options.getOption(opt.substring(0, 1)));\r\n             currentOption.addValueForProcessing(opt.substring(1));\r\n             currentOption.addValueForProcessing(value);\r\n             currentOption \u003d null;\r\n         } else {\r\n             handleLongOptionWithEqual(token);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleShortAndLongOption(final String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 437,
          "functionName": "handleShortAndLongOption",
          "functionAnnotation": "",
          "functionDoc": "Handles the following tokens:\r\n\r\n-S -SV -S V -S\u003dV -S1S2 -S1S2 V -SV1\u003dV2\r\n\r\n-L -LV -L V -L\u003dV -l\r\n\r\n@param token the command line token to handle\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
            "newValue": "Handles the following tokens:\r\n\r\n-S -SV -S V -S\u003dV -S1S2 -S1S2 V -SV1\u003dV2\r\n\r\n-L -LV -L V -L\u003dV -l\r\n\r\n@param token the command line token to handle\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleShortAndLongOption(final String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 437,
          "functionName": "handleShortAndLongOption",
          "functionAnnotation": "",
          "functionDoc": "Handles the following tokens:\r\n\r\n-S -SV -S V -S\u003dV -S1S2 -S1S2 V -SV1\u003dV2\r\n\r\n-L -LV -L V -L\u003dV -l\r\n\r\n@param token the command line token to handle\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342": {
      "type": "Ybodychange",
      "commitMessage": "Added support for disabling partial option matching\n",
      "commitDate": "6/23/17 2:04 PM",
      "commitName": "bdb4a09ceaceab7e3d214b1beadb93bd9c911342",
      "commitAuthor": "Rubin Simons",
      "commitDateOld": "6/15/17 1:23 PM",
      "commitNameOld": "9a845a2a30742b500e3b823b105434203427ea93",
      "commitAuthorOld": "Bruno P. Kinoshita",
      "daysBetweenCommits": 8.03,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(final String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 500,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "@@ -1,50 +1,50 @@\n private void handleShortAndLongOption(final String token) throws ParseException {\r\n     final String t \u003d Util.stripLeadingHyphens(token);\r\n     final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n     if (t.length() \u003d\u003d 1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else {\r\n             handleUnknownToken(token);\r\n         }\r\n     } else if (pos \u003d\u003d -1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n-        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n+        } else if (!getMatchingLongOptions(t).isEmpty()) {\r\n             handleLongOptionWithoutEqual(token);\r\n         } else {\r\n             final String opt \u003d getLongPrefix(t);\r\n             if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                 handleOption(options.getOption(opt));\r\n                 currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                 currentOption \u003d null;\r\n             } else if (isJavaProperty(t)) {\r\n                 handleOption(options.getOption(t.substring(0, 1)));\r\n                 currentOption.addValueForProcessing(t.substring(1));\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleConcatenatedOptions(token);\r\n             }\r\n         }\r\n     } else {\r\n         final String opt \u003d t.substring(0, pos);\r\n         final String value \u003d t.substring(pos + 1);\r\n         if (opt.length() \u003d\u003d 1) {\r\n             final Option option \u003d options.getOption(opt);\r\n             if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                 handleOption(option);\r\n                 currentOption.addValueForProcessing(value);\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleUnknownToken(token);\r\n             }\r\n         } else if (isJavaProperty(opt)) {\r\n             handleOption(options.getOption(opt.substring(0, 1)));\r\n             currentOption.addValueForProcessing(opt.substring(1));\r\n             currentOption.addValueForProcessing(value);\r\n             currentOption \u003d null;\r\n         } else {\r\n             handleLongOptionWithEqual(token);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(final String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 482,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "@@ -1,50 +1,50 @@\n-private void handleShortAndLongOption(String token) throws ParseException {\r\n+private void handleShortAndLongOption(final String token) throws ParseException {\r\n     final String t \u003d Util.stripLeadingHyphens(token);\r\n     final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n     if (t.length() \u003d\u003d 1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else {\r\n             handleUnknownToken(token);\r\n         }\r\n     } else if (pos \u003d\u003d -1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n             handleLongOptionWithoutEqual(token);\r\n         } else {\r\n             final String opt \u003d getLongPrefix(t);\r\n             if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                 handleOption(options.getOption(opt));\r\n                 currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                 currentOption \u003d null;\r\n             } else if (isJavaProperty(t)) {\r\n                 handleOption(options.getOption(t.substring(0, 1)));\r\n                 currentOption.addValueForProcessing(t.substring(1));\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleConcatenatedOptions(token);\r\n             }\r\n         }\r\n     } else {\r\n         final String opt \u003d t.substring(0, pos);\r\n         final String value \u003d t.substring(pos + 1);\r\n         if (opt.length() \u003d\u003d 1) {\r\n             final Option option \u003d options.getOption(opt);\r\n             if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                 handleOption(option);\r\n                 currentOption.addValueForProcessing(value);\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleUnknownToken(token);\r\n             }\r\n         } else if (isJavaProperty(opt)) {\r\n             handleOption(options.getOption(opt.substring(0, 1)));\r\n             currentOption.addValueForProcessing(opt.substring(1));\r\n             currentOption.addValueForProcessing(value);\r\n             currentOption \u003d null;\r\n         } else {\r\n             handleLongOptionWithEqual(token);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[token-String]",
        "newValue": "[token-String(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/27/17 4:54 AM",
      "commitNameOld": "89080e24891985d691e271fdd33734e493072bd9",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 9.61,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(String token) throws ParseException {\r\n    final String t \u003d Util.stripLeadingHyphens(token);\r\n    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            final String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        final String opt \u003d t.substring(0, pos);\r\n        final String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            final Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 482,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "@@ -1,50 +1,50 @@\n private void handleShortAndLongOption(String token) throws ParseException {\r\n-    String t \u003d Util.stripLeadingHyphens(token);\r\n-    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n+    final String t \u003d Util.stripLeadingHyphens(token);\r\n+    final int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n     if (t.length() \u003d\u003d 1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else {\r\n             handleUnknownToken(token);\r\n         }\r\n     } else if (pos \u003d\u003d -1) {\r\n         if (options.hasShortOption(t)) {\r\n             handleOption(options.getOption(t));\r\n         } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n             handleLongOptionWithoutEqual(token);\r\n         } else {\r\n-            String opt \u003d getLongPrefix(t);\r\n+            final String opt \u003d getLongPrefix(t);\r\n             if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                 handleOption(options.getOption(opt));\r\n                 currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                 currentOption \u003d null;\r\n             } else if (isJavaProperty(t)) {\r\n                 handleOption(options.getOption(t.substring(0, 1)));\r\n                 currentOption.addValueForProcessing(t.substring(1));\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleConcatenatedOptions(token);\r\n             }\r\n         }\r\n     } else {\r\n-        String opt \u003d t.substring(0, pos);\r\n-        String value \u003d t.substring(pos + 1);\r\n+        final String opt \u003d t.substring(0, pos);\r\n+        final String value \u003d t.substring(pos + 1);\r\n         if (opt.length() \u003d\u003d 1) {\r\n-            Option option \u003d options.getOption(opt);\r\n+            final Option option \u003d options.getOption(opt);\r\n             if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                 handleOption(option);\r\n                 currentOption.addValueForProcessing(value);\r\n                 currentOption \u003d null;\r\n             } else {\r\n                 handleUnknownToken(token);\r\n             }\r\n         } else if (isJavaProperty(opt)) {\r\n             handleOption(options.getOption(opt.substring(0, 1)));\r\n             currentOption.addValueForProcessing(opt.substring(1));\r\n             currentOption.addValueForProcessing(value);\r\n             currentOption \u003d null;\r\n         } else {\r\n             handleLongOptionWithEqual(token);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": {
      "type": "Yformatchange",
      "commitMessage": "trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1095657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/11 2:13 PM",
      "commitName": "5b098dec44567a760c220c1e0cd6bee29262c2c4",
      "commitAuthor": "Simone Tripodi",
      "commitDateOld": "4/12/11 9:57 PM",
      "commitNameOld": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 8.68,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(String token) throws ParseException {\r\n    String t \u003d Util.stripLeadingHyphens(token);\r\n    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        String opt \u003d t.substring(0, pos);\r\n        String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 466,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "a1b5d44432c057cf675f051bb20379937565f4ef": {
      "type": "Ybodychange",
      "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11 9:57 PM",
      "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/17/10 10:57 AM",
      "commitNameOld": "324b7f901b91614927926a5bab1d9e0e2325f018",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 299.46,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(String token) throws ParseException {\r\n    String t \u003d Util.stripLeadingHyphens(token);\r\n    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        String opt \u003d t.substring(0, pos);\r\n        String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 466,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleShortAndLongOption(String token) throws ParseException {\r\n    String t \u003d Util.stripLeadingHyphens(token);\r\n    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        String opt \u003d t.substring(0, pos);\r\n        String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 459,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/DefaultParser.java",
        "newPath": "src/main/java/org/apache/commons/cli/DefaultParser.java"
      }
    },
    "f43698527ef2b5ba15fe85d46d2d505418f68243": {
      "type": "Yintroduced",
      "commitMessage": "New unified parser (CLI-181, also fixes CLI-160, CLI-161, CLI-167, CLI-184)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@780264 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/09 4:43 PM",
      "commitName": "f43698527ef2b5ba15fe85d46d2d505418f68243",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,50 @@\n+private void handleShortAndLongOption(String token) throws ParseException {\r\n+    String t \u003d Util.stripLeadingHyphens(token);\r\n+    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n+    if (t.length() \u003d\u003d 1) {\r\n+        if (options.hasShortOption(t)) {\r\n+            handleOption(options.getOption(t));\r\n+        } else {\r\n+            handleUnknownToken(token);\r\n+        }\r\n+    } else if (pos \u003d\u003d -1) {\r\n+        if (options.hasShortOption(t)) {\r\n+            handleOption(options.getOption(t));\r\n+        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n+            handleLongOptionWithoutEqual(token);\r\n+        } else {\r\n+            String opt \u003d getLongPrefix(t);\r\n+            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n+                handleOption(options.getOption(opt));\r\n+                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n+                currentOption \u003d null;\r\n+            } else if (isJavaProperty(t)) {\r\n+                handleOption(options.getOption(t.substring(0, 1)));\r\n+                currentOption.addValueForProcessing(t.substring(1));\r\n+                currentOption \u003d null;\r\n+            } else {\r\n+                handleConcatenatedOptions(token);\r\n+            }\r\n+        }\r\n+    } else {\r\n+        String opt \u003d t.substring(0, pos);\r\n+        String value \u003d t.substring(pos + 1);\r\n+        if (opt.length() \u003d\u003d 1) {\r\n+            Option option \u003d options.getOption(opt);\r\n+            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n+                handleOption(option);\r\n+                currentOption.addValueForProcessing(value);\r\n+                currentOption \u003d null;\r\n+            } else {\r\n+                handleUnknownToken(token);\r\n+            }\r\n+        } else if (isJavaProperty(opt)) {\r\n+            handleOption(options.getOption(opt.substring(0, 1)));\r\n+            currentOption.addValueForProcessing(opt.substring(1));\r\n+            currentOption.addValueForProcessing(value);\r\n+            currentOption \u003d null;\r\n+        } else {\r\n+            handleLongOptionWithEqual(token);\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void handleShortAndLongOption(String token) throws ParseException {\r\n    String t \u003d Util.stripLeadingHyphens(token);\r\n    int pos \u003d t.indexOf(\u0027\u003d\u0027);\r\n    if (t.length() \u003d\u003d 1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else {\r\n            handleUnknownToken(token);\r\n        }\r\n    } else if (pos \u003d\u003d -1) {\r\n        if (options.hasShortOption(t)) {\r\n            handleOption(options.getOption(t));\r\n        } else if (!options.getMatchingOptions(t).isEmpty()) {\r\n            handleLongOptionWithoutEqual(token);\r\n        } else {\r\n            String opt \u003d getLongPrefix(t);\r\n            if (opt !\u003d null \u0026\u0026 options.getOption(opt).acceptsArg()) {\r\n                handleOption(options.getOption(opt));\r\n                currentOption.addValueForProcessing(t.substring(opt.length()));\r\n                currentOption \u003d null;\r\n            } else if (isJavaProperty(t)) {\r\n                handleOption(options.getOption(t.substring(0, 1)));\r\n                currentOption.addValueForProcessing(t.substring(1));\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleConcatenatedOptions(token);\r\n            }\r\n        }\r\n    } else {\r\n        String opt \u003d t.substring(0, pos);\r\n        String value \u003d t.substring(pos + 1);\r\n        if (opt.length() \u003d\u003d 1) {\r\n            Option option \u003d options.getOption(opt);\r\n            if (option !\u003d null \u0026\u0026 option.acceptsArg()) {\r\n                handleOption(option);\r\n                currentOption.addValueForProcessing(value);\r\n                currentOption \u003d null;\r\n            } else {\r\n                handleUnknownToken(token);\r\n            }\r\n        } else if (isJavaProperty(opt)) {\r\n            handleOption(options.getOption(opt.substring(0, 1)));\r\n            currentOption.addValueForProcessing(opt.substring(1));\r\n            currentOption.addValueForProcessing(value);\r\n            currentOption \u003d null;\r\n        } else {\r\n            handleLongOptionWithEqual(token);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 369,
      "functionName": "handleShortAndLongOption",
      "functionAnnotation": "",
      "functionDoc": "Handles the following tokens:\r\n\r\n-S\r\n-SV\r\n-S V\r\n-S\u003dV\r\n-S1S2\r\n-S1S2 V\r\n-SV1\u003dV2\r\n\r\n-L\r\n-LV\r\n-L V\r\n-L\u003dV\r\n-l\r\n\r\n@param token the command line token to handle\r\n"
    }
  }
}