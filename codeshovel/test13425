{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BugsTest.java",
  "functionName": "test13425",
  "functionId": "test13425",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 197,
  "functionEndLine": 222,
  "numCommitsSeen": 43,
  "timeTaken": 200,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "640490133d660d8850bf6f7bf93aa502ca807eb1",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "1fcf87d3e9e6e429f6fb17e6768c0562fff6d732",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
    "62670f565aa434b6cb614c1054a8ea5bc3715f25"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "640490133d660d8850bf6f7bf93aa502ca807eb1": "Yfilerename",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "1fcf87d3e9e6e429f6fb17e6768c0562fff6d732": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0": "Ymultichange(Yexceptionschange,Ybodychange)",
    "62670f565aa434b6cb614c1054a8ea5bc3715f25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 653.98,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void test13425() throws Exception {\r\n    final Options options \u003d new Options();\r\n    final Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    final Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    final String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    final Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (final MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
      "functionStartLine": 192,
      "functionName": "test13425",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 926.16,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void test13425() throws Exception {\r\n    final Options options \u003d new Options();\r\n    final Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    final Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    final String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    final Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (final MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
      "functionStartLine": 204,
      "functionName": "test13425",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "9/7/16 10:30 PM",
      "commitNameOld": "9e51962309fac2806f5fe0e4e3df94e0e187607a",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 270.88,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void test13425() throws Exception {\r\n    final Options options \u003d new Options();\r\n    final Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    final Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    final String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    final Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (final MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
      "functionStartLine": 204,
      "functionName": "test13425",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n @Test\r\n public void test13425() throws Exception {\r\n-    Options options \u003d new Options();\r\n-    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n-    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n-    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n+    final Options options \u003d new Options();\r\n+    final Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n+    final Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n+    final String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n     options.addOption(oldpass);\r\n     options.addOption(newpass);\r\n-    Parser parser \u003d new PosixParser();\r\n+    final Parser parser \u003d new PosixParser();\r\n     try {\r\n         parser.parse(options, args);\r\n         fail(\"MissingArgumentException not caught.\");\r\n-    } catch (MissingArgumentException expected) {\r\n+    } catch (final MissingArgumentException expected) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "640490133d660d8850bf6f7bf93aa502ca807eb1": {
      "type": "Yfilerename",
      "commitMessage": "Move Bugzilla bugs test case to bugs package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1669875 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/29/15 12:13 PM",
      "commitName": "640490133d660d8850bf6f7bf93aa502ca807eb1",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "3/29/15 12:10 PM",
      "commitNameOld": "0c0ce9b1f033319e086204895d3f8fe342ddad90",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugsTest.java",
      "functionStartLine": 204,
      "functionName": "test13425",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/java/org/apache/commons/cli/BugsTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/bug/BugsTest.java"
      }
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:33 PM",
      "commitNameOld": "1fcf87d3e9e6e429f6fb17e6768c0562fff6d732",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.73,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/BugsTest.java",
      "functionStartLine": 192,
      "functionName": "test13425",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,15 @@\n+@Test\r\n public void test13425() throws Exception {\r\n     Options options \u003d new Options();\r\n     Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n     Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n     String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n     options.addOption(oldpass);\r\n     options.addOption(newpass);\r\n     Parser parser \u003d new PosixParser();\r\n     try {\r\n         parser.parse(options, args);\r\n         fail(\"MissingArgumentException not caught.\");\r\n     } catch (MissingArgumentException expected) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "1fcf87d3e9e6e429f6fb17e6768c0562fff6d732": {
      "type": "Ybodychange",
      "commitMessage": "Simplify exception testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440541 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 7:33 PM",
      "commitName": "1fcf87d3e9e6e429f6fb17e6768c0562fff6d732",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/30/13 7:25 PM",
      "commitNameOld": "c6cf0e72d4df77417a010c2a2d6d09f69be3cfac",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"MissingArgumentException not caught.\");\r\n    } catch (MissingArgumentException expected) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/BugsTest.java",
      "functionStartLine": 181,
      "functionName": "test13425",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,14 @@\n public void test13425() throws Exception {\r\n     Options options \u003d new Options();\r\n     Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n     Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n     String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n     options.addOption(oldpass);\r\n     options.addOption(newpass);\r\n     Parser parser \u003d new PosixParser();\r\n     try {\r\n         parser.parse(options, args);\r\n-    } catch (Exception exp) {\r\n-        assertTrue(exp !\u003d null);\r\n-        return;\r\n+        fail(\"MissingArgumentException not caught.\");\r\n+    } catch (MissingArgumentException expected) {\r\n     }\r\n-    fail(\"MissingArgumentException not caught.\");\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n    } catch (Exception exp) {\r\n        assertTrue(exp !\u003d null);\r\n        return;\r\n    }\r\n    fail(\"MissingArgumentException not caught.\");\r\n}",
      "path": "src/test/java/org/apache/commons/cli/BugsTest.java",
      "functionStartLine": 182,
      "functionName": "test13425",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/BugsTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/BugsTest.java"
      }
    },
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/29/08 7:11 PM",
      "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 7:11 PM",
          "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/29/08 6:30 PM",
          "commitNameOld": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n    } catch (Exception exp) {\r\n        assertTrue(exp !\u003d null);\r\n        return;\r\n    }\r\n    fail(\"MissingArgumentException not caught.\");\r\n}",
          "path": "src/test/org/apache/commons/cli/BugsTest.java",
          "functionStartLine": 191,
          "functionName": "test13425",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,16 +1,16 @@\n-public void test13425() {\r\n+public void test13425() throws Exception {\r\n     Options options \u003d new Options();\r\n     Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n     Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n     String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n     options.addOption(oldpass);\r\n     options.addOption(newpass);\r\n     Parser parser \u003d new PosixParser();\r\n     try {\r\n-        CommandLine line \u003d parser.parse(options, args);\r\n+        parser.parse(options, args);\r\n     } catch (Exception exp) {\r\n         assertTrue(exp !\u003d null);\r\n         return;\r\n     }\r\n     fail(\"MissingArgumentException not caught.\");\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 7:11 PM",
          "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/29/08 6:30 PM",
          "commitNameOld": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void test13425() throws Exception {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        parser.parse(options, args);\r\n    } catch (Exception exp) {\r\n        assertTrue(exp !\u003d null);\r\n        return;\r\n    }\r\n    fail(\"MissingArgumentException not caught.\");\r\n}",
          "path": "src/test/org/apache/commons/cli/BugsTest.java",
          "functionStartLine": 191,
          "functionName": "test13425",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,16 +1,16 @@\n-public void test13425() {\r\n+public void test13425() throws Exception {\r\n     Options options \u003d new Options();\r\n     Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n     Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n     String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n     options.addOption(oldpass);\r\n     options.addOption(newpass);\r\n     Parser parser \u003d new PosixParser();\r\n     try {\r\n-        CommandLine line \u003d parser.parse(options, args);\r\n+        parser.parse(options, args);\r\n     } catch (Exception exp) {\r\n         assertTrue(exp !\u003d null);\r\n         return;\r\n     }\r\n     fail(\"MissingArgumentException not caught.\");\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "62670f565aa434b6cb614c1054a8ea5bc3715f25": {
      "type": "Yintroduced",
      "commitMessage": "fixed bug 13425, added argName support, fixed some bugs in the HelpFormatter\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129819 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/9/02 12:24 AM",
      "commitName": "62670f565aa434b6cb614c1054a8ea5bc3715f25",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,16 @@\n+public void test13425() {\r\n+    Options options \u003d new Options();\r\n+    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n+    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n+    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n+    options.addOption(oldpass);\r\n+    options.addOption(newpass);\r\n+    Parser parser \u003d new PosixParser();\r\n+    try {\r\n+        CommandLine line \u003d parser.parse(options, args);\r\n+    } catch (Exception exp) {\r\n+        assertTrue(exp !\u003d null);\r\n+        return;\r\n+    }\r\n+    fail(\"MissingArgumentException not caught.\");\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void test13425() {\r\n    Options options \u003d new Options();\r\n    Option oldpass \u003d OptionBuilder.withLongOpt(\"old-password\").withDescription(\"Use this option to specify the old password\").hasArg().create(\u0027o\u0027);\r\n    Option newpass \u003d OptionBuilder.withLongOpt(\"new-password\").withDescription(\"Use this option to specify the new password\").hasArg().create(\u0027n\u0027);\r\n    String[] args \u003d { \"-o\", \"-n\", \"newpassword\" };\r\n    options.addOption(oldpass);\r\n    options.addOption(newpass);\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        CommandLine line \u003d parser.parse(options, args);\r\n    } catch (Exception exp) {\r\n        assertTrue(exp !\u003d null);\r\n        return;\r\n    }\r\n    fail(\"MissingArgumentException not caught.\");\r\n}",
      "path": "src/test/org/apache/commons/cli/BugsTest.java",
      "functionStartLine": 233,
      "functionName": "test13425",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}