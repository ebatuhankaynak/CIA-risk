{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "clone",
  "functionId": "clone",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "@Override",
  "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n",
  "functionStartLine": 478,
  "functionEndLine": 486,
  "numCommitsSeen": 102,
  "timeTaken": 457,
  "changeHistory": [
    "ab9a0f92ff10ad16af0045976f99692beea9081d",
    "1af9b95aa30c8383588e169bf2fe749c3e9c7c64",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "10090594827c3c90b9c0a5c8288cda448b0ce10c",
    "445ddaaa89bdcd003645b02b600fde1d3730d715",
    "89f274efb8608738aeb71a18bb714f58acdc9cb5",
    "a1b5d44432c057cf675f051bb20379937565f4ef",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa",
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd"
  ],
  "changeHistoryShort": {
    "ab9a0f92ff10ad16af0045976f99692beea9081d": "Ybodychange",
    "1af9b95aa30c8383588e169bf2fe749c3e9c7c64": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Ydocchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": "Ydocchange",
    "445ddaaa89bdcd003645b02b600fde1d3730d715": "Yannotationchange",
    "89f274efb8608738aeb71a18bb714f58acdc9cb5": "Ymultichange(Yreturntypechange,Ydocchange)",
    "a1b5d44432c057cf675f051bb20379937565f4ef": "Ymultichange(Yreturntypechange,Ybodychange)",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Yformatchange",
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa": "Ydocchange",
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab9a0f92ff10ad16af0045976f99692beea9081d": {
      "type": "Ybodychange",
      "commitMessage": "Throw a RuntimeException subclass instead of RuntimeException",
      "commitDate": "7/6/23 10:35 PM",
      "commitName": "ab9a0f92ff10ad16af0045976f99692beea9081d",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/3/22 3:50 PM",
      "commitNameOld": "9b101bf36c477fb2e802d0860afdc093aef1307f",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 276.28,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003c\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException e) {\r\n        throw new UnsupportedOperationException(e.getMessage(), e);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 477,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n",
      "diff": "@@ -1,10 +1,10 @@\n @Override\r\n public Object clone() {\r\n     try {\r\n         final Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003c\u003e(values);\r\n         return option;\r\n-    } catch (final CloneNotSupportedException cnse) {\r\n-        throw new IllegalStateException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n+    } catch (final CloneNotSupportedException e) {\r\n+        throw new UnsupportedOperationException(e.getMessage(), e);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1af9b95aa30c8383588e169bf2fe749c3e9c7c64": {
      "type": "Ybodychange",
      "commitMessage": "Fix SpotBugs 4.7.0 issues.\n\n[INFO] BugInstance size is 3\n[INFO] Error size is 0\n[INFO] Total bugs: 3\nError:  Medium: Method intentionally throws RuntimeException.\n[org.apache.commons.cli.Option] At Option.java:[lines 417-423]\nTHROWS_METHOD_THROWS_RUNTIMEEXCEPTION\nError:  Medium: Method intentionally throws RuntimeException.\n[org.apache.commons.cli.Option] At Option.java:[lines 446-450]\nTHROWS_METHOD_THROWS_RUNTIMEEXCEPTION\nError:  Medium: Method intentionally throws RuntimeException.\n[org.apache.commons.cli.Option] At Option.java:[lines 474-478]\nTHROWS_METHOD_THROWS_RUNTIMEEXCEPTION\n\nBump spotbugs from 4.6.0 to 4.7.0 #107.",
      "commitDate": "5/6/22 2:28 PM",
      "commitName": "1af9b95aa30c8383588e169bf2fe749c3e9c7c64",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/23/21 3:53 PM",
      "commitNameOld": "62b510f93283fee7225b56c95b6d017b8546367f",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 194.94,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003c\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new IllegalStateException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 472,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n",
      "diff": "@@ -1,10 +1,10 @@\n @Override\r\n public Object clone() {\r\n     try {\r\n         final Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003c\u003e(values);\r\n         return option;\r\n     } catch (final CloneNotSupportedException cnse) {\r\n-        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n+        throw new IllegalStateException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "1/17/21 5:38 PM",
          "commitNameOld": "e20023d55962858ec6cd3d786686a00192959a9b",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 258.23,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003c\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 591,
          "functionName": "clone",
          "functionAnnotation": "@Override",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public\r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws\r\na RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call\r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
            "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "1/17/21 5:38 PM",
          "commitNameOld": "e20023d55962858ec6cd3d786686a00192959a9b",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 258.23,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003c\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 591,
          "functionName": "clone",
          "functionAnnotation": "@Override",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public and in 1.1 rather than throwing a\r\nCloneNotSupportedException it throws a RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call clearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown by {@code super.clone()}\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant generic type arguments.\n",
      "commitDate": "5/24/20 6:44 PM",
      "commitName": "02aba6c78d451376053478e4d627ba6f2fd6ba21",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 157.8,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003c\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 678,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public\r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws\r\na RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call\r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
      "diff": "@@ -1,10 +1,10 @@\n @Override\r\n public Object clone() {\r\n     try {\r\n         final Option option \u003d (Option) super.clone();\r\n-        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n+        option.values \u003d new ArrayList\u003c\u003e(values);\r\n         return option;\r\n     } catch (final CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Ydocchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/15/17 1:23 PM",
      "commitNameOld": "9a845a2a30742b500e3b823b105434203427ea93",
      "commitAuthorOld": "Bruno P. Kinoshita",
      "daysBetweenCommits": 916.42,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 678,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public\r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws\r\na RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call\r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
        "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public\r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws\r\na RuntimeException so as to maintain backwards compat at the API level.\r\n\r\nAfter calling this method, it is very likely you will want to call\r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 2:10 PM",
      "commitNameOld": "9a048d071f4ebb57179f6ef245dae7769be3441d",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.23,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        final Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (final CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 680,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
      "diff": "@@ -1,10 +1,10 @@\n @Override\r\n public Object clone() {\r\n     try {\r\n-        Option option \u003d (Option) super.clone();\r\n+        final Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n-    } catch (CloneNotSupportedException cnse) {\r\n+    } catch (final CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": {
      "type": "Ydocchange",
      "commitMessage": "Make doclint happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1677406 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/3/15 5:27 PM",
      "commitName": "10090594827c3c90b9c0a5c8288cda448b0ce10c",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "5/3/15 4:57 PM",
      "commitNameOld": "6b87d290954c4594fc69a3a0b85fff12490cfde5",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 672,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@link super#clone()}\r\n",
        "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@code super.clone()}\r\n"
      }
    },
    "445ddaaa89bdcd003645b02b600fde1d3730d715": {
      "type": "Yannotationchange",
      "commitMessage": "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440517 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 6:51 PM",
      "commitName": "445ddaaa89bdcd003645b02b600fde1d3730d715",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/30/13 11:14 AM",
      "commitNameOld": "5ff94c7daec3bea08f151df7cfe5b203e4d5be76",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Override\r\npublic Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 657,
      "functionName": "clone",
      "functionAnnotation": "@Override",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@link super#clone()}\r\n",
      "diff": "@@ -1,9 +1,10 @@\n+@Override\r\n public Object clone() {\r\n     try {\r\n         Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n     } catch (CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Override"
      }
    },
    "89f274efb8608738aeb71a18bb714f58acdc9cb5": {
      "type": "Ymultichange(Yreturntypechange,Ydocchange)",
      "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/13 8:59 PM",
      "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
      "commitAuthor": "Thomas Neidhart",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/13 8:59 PM",
          "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/28/13 12:00 AM",
          "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 638,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@link super#clone()}\r\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Option clone() {\r\n+public Object clone() {\r\n     try {\r\n         Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n     } catch (CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Option",
            "newValue": "Object"
          }
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Fix Clirr error wrt return type of Option#clone().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439565 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/28/13 8:59 PM",
          "commitName": "89f274efb8608738aeb71a18bb714f58acdc9cb5",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/28/13 12:00 AM",
          "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 638,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@link super#clone()}\r\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Option clone() {\r\n+public Object clone() {\r\n     try {\r\n         Option option \u003d (Option) super.clone();\r\n         option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n     } catch (CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
            "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@return a clone of this Option instance\r\n@throws RuntimeException if a {@link CloneNotSupportedException} has been thrown\r\nby {@link super#clone()}\r\n"
          }
        }
      ]
    },
    "a1b5d44432c057cf675f051bb20379937565f4ef": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11 9:57 PM",
      "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/12/11 9:57 PM",
          "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "4/12/11 6:55 PM",
          "commitNameOld": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Option clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 636,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Object clone() {\r\n+public Option clone() {\r\n     try {\r\n         Option option \u003d (Option) super.clone();\r\n-        option.values \u003d new ArrayList(values);\r\n+        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n     } catch (CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Object",
            "newValue": "Option"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Moving to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091539 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "4/12/11 9:57 PM",
          "commitName": "a1b5d44432c057cf675f051bb20379937565f4ef",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "4/12/11 6:55 PM",
          "commitNameOld": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Option clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 636,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
          "diff": "@@ -1,9 +1,9 @@\n-public Object clone() {\r\n+public Option clone() {\r\n     try {\r\n         Option option \u003d (Option) super.clone();\r\n-        option.values \u003d new ArrayList(values);\r\n+        option.values \u003d new ArrayList\u003cString\u003e(values);\r\n         return option;\r\n     } catch (CloneNotSupportedException cnse) {\r\n         throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 637,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/Option.java",
        "newPath": "src/main/java/org/apache/commons/cli/Option.java"
      }
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Yformatchange",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 11:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/22/08 10:55 AM",
      "commitNameOld": "8ee0ed532e4ddbf2746d802f9926b9e3d0116cc5",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 7.01,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 637,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa": {
      "type": "Ydocchange",
      "commitMessage": "Adding some javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551821 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07 10:29 AM",
      "commitName": "53ed91258ae02f21edd9aadd53e57cb1c1f5cfaa",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/29/07 10:16 AM",
      "commitNameOld": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 645,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "A rather odd clone method - due to incorrect code in 1.0 it is public \r\nand in 1.1 rather than throwing a CloneNotSupportedException it throws \r\na RuntimeException so as to maintain backwards compat at the API level. \r\n\r\nAfter calling this method, it is very likely you will want to call \r\nclearValues().\r\n\r\n@throws RuntimeException\r\n"
      }
    },
    "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e": {
      "type": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07 10:16 AM",
      "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07 10:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07 10:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\r\n-    Option option \u003d (Option) super.clone();\r\n-    option.values \u003d new ArrayList(values);\r\n-    return option;\r\n+public Object clone() {\r\n+    try {\r\n+        Option option \u003d (Option) super.clone();\r\n+        option.values \u003d new ArrayList(values);\r\n+        return option;\r\n+    } catch (CloneNotSupportedException cnse) {\r\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n+    }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07 10:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07 10:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\r\n-    Option option \u003d (Option) super.clone();\r\n-    option.values \u003d new ArrayList(values);\r\n-    return option;\r\n+public Object clone() {\r\n+    try {\r\n+        Option option \u003d (Option) super.clone();\r\n+        option.values \u003d new ArrayList(values);\r\n+        return option;\r\n+    } catch (CloneNotSupportedException cnse) {\r\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n+    }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[CloneNotSupportedException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying the second patch from CLI-21 - moving the clone method back to public and hiding the exception. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551819 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/29/07 10:16 AM",
          "commitName": "4cf1b71f9f9b7a102fafaa6e03825aa3eaffca7e",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07 10:10 AM",
          "commitNameOld": "bfe6bd8634895645aa71d6a6dc668545297d7413",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public Object clone() {\r\n    try {\r\n        Option option \u003d (Option) super.clone();\r\n        option.values \u003d new ArrayList(values);\r\n        return option;\r\n    } catch (CloneNotSupportedException cnse) {\r\n        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 635,
          "functionName": "clone",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,5 +1,9 @@\n-protected Object clone() throws CloneNotSupportedException {\r\n-    Option option \u003d (Option) super.clone();\r\n-    option.values \u003d new ArrayList(values);\r\n-    return option;\r\n+public Object clone() {\r\n+    try {\r\n+        Option option \u003d (Option) super.clone();\r\n+        option.values \u003d new ArrayList(values);\r\n+        return option;\r\n+    } catch (CloneNotSupportedException cnse) {\r\n+        throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());\r\n+    }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd": {
      "type": "Yintroduced",
      "commitMessage": "Applying Brian Egge\u0027s patch to CLI-21 that resurrects the clone() method\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@547721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/07 6:51 PM",
      "commitName": "1545ae48a67ad7f2c18942f4c2dfaf9ab8f7eccd",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,5 @@\n+protected Object clone() throws CloneNotSupportedException {\r\n+    Option option \u003d (Option) super.clone();\r\n+    option.values \u003d new ArrayList(values);\r\n+    return option;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "protected Object clone() throws CloneNotSupportedException {\r\n    Option option \u003d (Option) super.clone();\r\n    option.values \u003d new ArrayList(values);\r\n    return option;\r\n}",
      "path": "src/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 635,
      "functionName": "clone",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}