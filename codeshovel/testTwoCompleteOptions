{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OptionBuilderTest.java",
  "functionName": "testTwoCompleteOptions",
  "functionId": "testTwoCompleteOptions",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 158,
  "functionEndLine": 191,
  "numCommitsSeen": 22,
  "timeTaken": 124,
  "changeHistory": [
    "a1222147c2d3a99aa19776ee2dea30974d57571a",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
    "7f90b98c1f77a0c1af9c774a12e8e257d7a0d1ac"
  ],
  "changeHistoryShort": {
    "a1222147c2d3a99aa19776ee2dea30974d57571a": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee": "Ybodychange",
    "7f90b98c1f77a0c1af9c774a12e8e257d7a0d1ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a1222147c2d3a99aa19776ee2dea30974d57571a": {
      "type": "Ybodychange",
      "commitMessage": "Replace assert by simpler but equivalent calls. (#69)\n\n",
      "commitDate": "10/7/21 4:09 AM",
      "commitName": "a1222147c2d3a99aa19776ee2dea30974d57571a",
      "commitAuthor": "Arturo Bernal",
      "commitDateOld": "10/2/21 11:07 PM",
      "commitNameOld": "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertEquals(String.class, simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertFalse(simple.isRequired());\r\n    assertFalse(simple.hasArgs());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 158,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,19 +1,19 @@\n @Test\r\n public void testTwoCompleteOptions() {\r\n     Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n     assertEquals(\"s\", simple.getOpt());\r\n     assertEquals(\"simple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a simple option\", simple.getDescription());\r\n     assertEquals(simple.getType(), Float.class);\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(simple.isRequired());\r\n     assertTrue(simple.hasArgs());\r\n     simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n     assertEquals(\"d\", simple.getOpt());\r\n     assertEquals(\"dimple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a dimple option\", simple.getDescription());\r\n     assertEquals(String.class, simple.getType());\r\n     assertTrue(simple.hasArg());\r\n-    assertTrue(!simple.isRequired());\r\n-    assertTrue(!simple.hasArgs());\r\n+    assertFalse(simple.isRequired());\r\n+    assertFalse(simple.hasArgs());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertEquals(String.class, simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasArgs());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 51,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:25 PM",
      "commitNameOld": "c6cf0e72d4df77417a010c2a2d6d09f69be3cfac",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.73,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertEquals(String.class, simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasArgs());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 49,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,19 @@\n+@Test\r\n public void testTwoCompleteOptions() {\r\n     Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n     assertEquals(\"s\", simple.getOpt());\r\n     assertEquals(\"simple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a simple option\", simple.getDescription());\r\n     assertEquals(simple.getType(), Float.class);\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(simple.isRequired());\r\n     assertTrue(simple.hasArgs());\r\n     simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n     assertEquals(\"d\", simple.getOpt());\r\n     assertEquals(\"dimple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a dimple option\", simple.getDescription());\r\n     assertEquals(String.class, simple.getType());\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(!simple.isRequired());\r\n     assertTrue(!simple.hasArgs());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d": {
      "type": "Ybodychange",
      "commitMessage": "Option type is now set to String by default (Fixes CLI-215)\nThe type is now explicitly a Class instance instead of an unspecified Object\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091485 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11 6:55 PM",
      "commitName": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 6:48 PM",
      "commitNameOld": "d36b987c3257c01b42353cf7d2eb69ca325860aa",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 300.0,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertEquals(String.class, simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasArgs());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n public void testTwoCompleteOptions() {\r\n-    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n+    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(Float.class).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n     assertEquals(\"s\", simple.getOpt());\r\n     assertEquals(\"simple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a simple option\", simple.getDescription());\r\n-    assertEquals(simple.getType().getClass(), Float.class);\r\n+    assertEquals(simple.getType(), Float.class);\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(simple.isRequired());\r\n     assertTrue(simple.hasArgs());\r\n     simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n     assertEquals(\"d\", simple.getOpt());\r\n     assertEquals(\"dimple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a dimple option\", simple.getDescription());\r\n-    assertNull(simple.getType());\r\n+    assertEquals(String.class, simple.getType());\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(!simple.isRequired());\r\n     assertTrue(!simple.hasArgs());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType().getClass(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertNull(simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasArgs());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/OptionBuilderTest.java"
      }
    },
    "16b91ad2b9f5f524b2b07ba4515c65479999f7ee": {
      "type": "Ybodychange",
      "commitMessage": "its now possible to specify the number of argument values an option can have, refactored parsers argument value handling, refactored argument handling in Option, added getOptions method on CommandLine to return an array of the processed Options\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/4/02 2:45 AM",
      "commitName": "16b91ad2b9f5f524b2b07ba4515c65479999f7ee",
      "commitAuthor": "John Keyes",
      "commitDateOld": "7/30/02 1:12 AM",
      "commitNameOld": "7f90b98c1f77a0c1af9c774a12e8e257d7a0d1ac",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType().getClass(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertNull(simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasArgs());\r\n}",
      "path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 41,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,18 @@\n public void testTwoCompleteOptions() {\r\n-    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasMultipleArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n+    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n     assertEquals(\"s\", simple.getOpt());\r\n     assertEquals(\"simple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a simple option\", simple.getDescription());\r\n     assertEquals(simple.getType().getClass(), Float.class);\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(simple.isRequired());\r\n-    assertTrue(simple.hasMultipleArgs());\r\n+    assertTrue(simple.hasArgs());\r\n     simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n     assertEquals(\"d\", simple.getOpt());\r\n     assertEquals(\"dimple option\", simple.getLongOpt());\r\n     assertEquals(\"this is a dimple option\", simple.getDescription());\r\n     assertNull(simple.getType());\r\n     assertTrue(simple.hasArg());\r\n     assertTrue(!simple.isRequired());\r\n-    assertTrue(!simple.hasMultipleArgs());\r\n+    assertTrue(!simple.hasArgs());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7f90b98c1f77a0c1af9c774a12e8e257d7a0d1ac": {
      "type": "Yintroduced",
      "commitMessage": "OptionBuilder first cut\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129791 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/30/02 1:12 AM",
      "commitName": "7f90b98c1f77a0c1af9c774a12e8e257d7a0d1ac",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,18 @@\n+public void testTwoCompleteOptions() {\r\n+    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasMultipleArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n+    assertEquals(\"s\", simple.getOpt());\r\n+    assertEquals(\"simple option\", simple.getLongOpt());\r\n+    assertEquals(\"this is a simple option\", simple.getDescription());\r\n+    assertEquals(simple.getType().getClass(), Float.class);\r\n+    assertTrue(simple.hasArg());\r\n+    assertTrue(simple.isRequired());\r\n+    assertTrue(simple.hasMultipleArgs());\r\n+    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n+    assertEquals(\"d\", simple.getOpt());\r\n+    assertEquals(\"dimple option\", simple.getLongOpt());\r\n+    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n+    assertNull(simple.getType());\r\n+    assertTrue(simple.hasArg());\r\n+    assertTrue(!simple.isRequired());\r\n+    assertTrue(!simple.hasMultipleArgs());\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testTwoCompleteOptions() {\r\n    Option simple \u003d OptionBuilder.withLongOpt(\"simple option\").hasArg().isRequired().hasMultipleArgs().withType(new Float(10)).withDescription(\"this is a simple option\").create(\u0027s\u0027);\r\n    assertEquals(\"s\", simple.getOpt());\r\n    assertEquals(\"simple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a simple option\", simple.getDescription());\r\n    assertEquals(simple.getType().getClass(), Float.class);\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(simple.isRequired());\r\n    assertTrue(simple.hasMultipleArgs());\r\n    simple \u003d OptionBuilder.withLongOpt(\"dimple option\").hasArg().withDescription(\"this is a dimple option\").create(\u0027d\u0027);\r\n    assertEquals(\"d\", simple.getOpt());\r\n    assertEquals(\"dimple option\", simple.getLongOpt());\r\n    assertEquals(\"this is a dimple option\", simple.getDescription());\r\n    assertNull(simple.getType());\r\n    assertTrue(simple.hasArg());\r\n    assertTrue(!simple.isRequired());\r\n    assertTrue(!simple.hasMultipleArgs());\r\n}",
      "path": "src/test/org/apache/commons/cli/OptionBuilderTest.java",
      "functionStartLine": 41,
      "functionName": "testTwoCompleteOptions",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}