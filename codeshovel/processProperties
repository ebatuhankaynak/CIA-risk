{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Parser.java",
  "functionName": "processProperties",
  "functionId": "processProperties___properties-Properties(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Parser.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
  "functionStartLine": 298,
  "functionEndLine": 337,
  "numCommitsSeen": 69,
  "timeTaken": 378,
  "changeHistory": [
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f",
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "10090594827c3c90b9c0a5c8288cda448b0ce10c",
    "46168260e254e6ae2971830671ed5cda296e1fc0",
    "7602e1653c3c16ccb2955da750f6c3f7c539b146",
    "324b7f901b91614927926a5bab1d9e0e2325f018",
    "5560a086886c4d6dba2c30eb75e57e3167765c6e",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "3433f467554985a6bd9bf530a4810376be6fe250",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "298804b71d4e5f8b621f48a300f421229a3f5c86",
    "97744806d59820b096fb502b1d51ca54b5d0921d",
    "1314233dde6b3f73c888fe4274e45d654b7639aa",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
    "347bbeb8f98a49744501ac50850457ba8751d545"
  ],
  "changeHistoryShort": {
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f": "Ybodychange",
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": "Ydocchange",
    "46168260e254e6ae2971830671ed5cda296e1fc0": "Ybodychange",
    "7602e1653c3c16ccb2955da750f6c3f7c539b146": "Ybodychange",
    "324b7f901b91614927926a5bab1d9e0e2325f018": "Ybodychange",
    "5560a086886c4d6dba2c30eb75e57e3167765c6e": "Ymultichange(Yexceptionschange,Ybodychange)",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "3433f467554985a6bd9bf530a4810376be6fe250": "Ybodychange",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Ymultichange(Ybodychange,Ydocchange)",
    "298804b71d4e5f8b621f48a300f421229a3f5c86": "Ymultichange(Ymodifierchange,Ybodychange)",
    "97744806d59820b096fb502b1d51ca54b5d0921d": "Ybodychange",
    "1314233dde6b3f73c888fe4274e45d654b7639aa": "Ybodychange",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ymultichange(Ybodychange,Ydocchange)",
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453": "Ybodychange",
    "347bbeb8f98a49744501ac50850457ba8751d545": "Yintroduced"
  },
  "changeHistoryDetails": {
    "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f": {
      "type": "Ybodychange",
      "commitMessage": "Update checkstyle and enforce.\n",
      "commitDate": "10/22/21 5:29 PM",
      "commitName": "897593c0f09ba8b87b3dd13dce00b0d5fbdf2c3f",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/20/21 3:15 PM",
      "commitNameOld": "2df55d424f80c096d0916a733c8c5292c4b1fdf5",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 2.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 288,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/3/21 2:32 AM",
      "commitNameOld": "b805e90dd082b4549ef4d565d13c6db8fdb96a5e",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.92,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 288,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
        "newValue": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "2/8/21 10:11 PM",
          "commitNameOld": "66cc7b4cb8b0f39edfe0ee37eead4ace04a7be4e",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 236.04,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 215,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n",
            "newValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "2/8/21 10:11 PM",
          "commitNameOld": "66cc7b4cb8b0f39edfe0ee37eead4ace04a7be4e",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 236.04,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 215,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered while processing the properties.\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2/17/19 8:49 PM",
      "commitNameOld": "c5536b7f82862fe798ae91cd4b4a8a2df049d06a",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 304.11,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 253,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 254,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n",
      "diff": "@@ -1,29 +1,29 @@\n-protected void processProperties(Properties properties) throws ParseException {\r\n+protected void processProperties(final Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         final String option \u003d e.nextElement().toString();\r\n         final Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n         final OptionGroup group \u003d options.getOptionGroup(opt);\r\n         final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             final String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (final RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n             updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[properties-Properties]",
        "newValue": "[properties-Properties(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/21/16 2:36 AM",
      "commitNameOld": "58139aefcacfa7954de1552c2ec5640ddbaf3713",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 380.71,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (final RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 254,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n",
      "diff": "@@ -1,29 +1,29 @@\n protected void processProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n-    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n-        String option \u003d e.nextElement().toString();\r\n-        Option opt \u003d options.getOption(option);\r\n+    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+        final String option \u003d e.nextElement().toString();\r\n+        final Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n-        OptionGroup group \u003d options.getOptionGroup(opt);\r\n-        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n+        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n+        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n-            String value \u003d properties.getProperty(option);\r\n+            final String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n-                    } catch (RuntimeException exp) {\r\n+                    } catch (final RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n             updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "10090594827c3c90b9c0a5c8288cda448b0ce10c": {
      "type": "Ydocchange",
      "commitMessage": "Make doclint happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1677406 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/3/15 5:27 PM",
      "commitName": "10090594827c3c90b9c0a5c8288cda448b0ce10c",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "2/12/13 10:48 PM",
      "commitNameOld": "46168260e254e6ae2971830671ed5cda296e1fc0",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 809.74,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 254,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
        "newValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n@throws ParseException if there are any problems encountered\r\n                       while processing the properties.\r\n"
      }
    },
    "46168260e254e6ae2971830671ed5cda296e1fc0": {
      "type": "Ybodychange",
      "commitMessage": "Suppress pmd warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1445352 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/12/13 10:48 PM",
      "commitName": "46168260e254e6ae2971830671ed5cda296e1fc0",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/6/13 8:12 PM",
      "commitNameOld": "08a1eb7875d24830e37a969e9963ccc365586ca1",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 6.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 250,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "7602e1653c3c16ccb2955da750f6c3f7c539b146": {
      "type": "Ybodychange",
      "commitMessage": "More typos, another raw type warning.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439423 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/13 4:31 PM",
      "commitName": "7602e1653c3c16ccb2955da750f6c3f7c539b146",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/28/13 12:14 AM",
      "commitNameOld": "d1690bda07a267c3c64146a8c5219cbe82d4fafa",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 250,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,29 +1,29 @@\n protected void processProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n-    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n         OptionGroup group \u003d options.getOptionGroup(opt);\r\n         boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n             updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "324b7f901b91614927926a5bab1d9e0e2325f018": {
      "type": "Ybodychange",
      "commitMessage": "Fixed the bugs with the default options and the option groups (CLI-203 and CLI-204)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/10 10:57 AM",
      "commitName": "324b7f901b91614927926a5bab1d9e0e2325f018",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/17/10 1:59 AM",
      "commitNameOld": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.37,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 252,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,24 +1,29 @@\n protected void processProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n-        if (!cmd.hasOption(option)) {\r\n-            Option opt \u003d getOptions().getOption(option);\r\n+        Option opt \u003d options.getOption(option);\r\n+        if (opt \u003d\u003d null) {\r\n+            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n+        }\r\n+        OptionGroup group \u003d options.getOptionGroup(opt);\r\n+        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n+        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n             updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5560a086886c4d6dba2c30eb75e57e3167765c6e": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/10 1:59 AM",
      "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/17/10 1:59 AM",
          "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "6/16/10 12:45 PM",
          "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 252,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,24 @@\n-protected void processProperties(Properties properties) {\r\n+protected void processProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n+            updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/17/10 1:59 AM",
          "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "6/16/10 12:45 PM",
          "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n            updateRequiredOptions(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 252,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,24 @@\n-protected void processProperties(Properties properties) {\r\n+protected void processProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             cmd.addOption(opt);\r\n+            updateRequiredOptions(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 252,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/Parser.java",
        "newPath": "src/main/java/org/apache/commons/cli/Parser.java"
      }
    },
    "3433f467554985a6bd9bf530a4810376be6fe250": {
      "type": "Ybodychange",
      "commitMessage": "The processing of the default options is no longer stopped by a flag with a false value (CLI-201)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 3:00 AM",
      "commitName": "3433f467554985a6bd9bf530a4810376be6fe250",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:26 AM",
      "commitNameOld": "10b14afb9ff42a3f216296f526f65d001b545e3f",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 252,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,23 +1,23 @@\n protected void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n-                break;\r\n+                continue;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 11:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 1:25 AM",
          "commitNameOld": "0a8de54ff89093fc8c5a2b00f7c0c856c5cbe57d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 4.41,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 241,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n protected void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n-                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 1:25 AM",
          "commitNameOld": "0a8de54ff89093fc8c5a2b00f7c0c856c5cbe57d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 4.41,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 241,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n protected void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n-                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
            "newValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n"
          }
        }
      ]
    },
    "298804b71d4e5f8b621f48a300f421229a3f5c86": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/8/08 9:43 AM",
      "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/8/08 9:43 AM",
          "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07 10:08 AM",
          "commitNameOld": "97744806d59820b096fb502b1d51ca54b5d0921d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 313.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 249,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n-private void processProperties(Properties properties) {\r\n+protected void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n-            Option opt \u003d options.getOption(option);\r\n+            Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying Henning\u0027s patch to make the Parser more extendable - CLI-142\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/8/08 9:43 AM",
          "commitName": "298804b71d4e5f8b621f48a300f421229a3f5c86",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "6/29/07 10:08 AM",
          "commitNameOld": "97744806d59820b096fb502b1d51ca54b5d0921d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 313.98,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "actualSource": "protected void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d getOptions().getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 249,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n-private void processProperties(Properties properties) {\r\n+protected void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n-            Option opt \u003d options.getOption(option);\r\n+            Option opt \u003d getOptions().getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n                         opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "97744806d59820b096fb502b1d51ca54b5d0921d": {
      "type": "Ybodychange",
      "commitMessage": "Applying the patch from CLI-135 to put the public addValue method back, even though it just throws an exception. This maintains binary compatibility, for some level of compatibility. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551815 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07 10:08 AM",
      "commitName": "97744806d59820b096fb502b1d51ca54b5d0921d",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/5/07 7:01 AM",
      "commitNameOld": "f78959477b207bf710049aa35730ef7659f0a1b9",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 24.13,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValueForProcessing(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 236,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n-                        opt.addValue(value);\r\n+                        opt.addValueForProcessing(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1314233dde6b3f73c888fe4274e45d654b7639aa": {
      "type": "Ybodychange",
      "commitMessage": "When extracting option values from properties, options with a single argument can now be processed successfully.\n\nBR: 31148\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@130112 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/27/04 4:35 PM",
      "commitName": "1314233dde6b3f73c888fe4274e45d654b7639aa",
      "commitAuthor": "Robert James Oxspring",
      "commitDateOld": "12/27/04 3:21 PM",
      "commitNameOld": "cb8c4573aa89c9097d9b91effb66d91e13b4449c",
      "commitAuthorOld": "Robert James Oxspring",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValue(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 228,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n-            if (opt.hasArgs()) {\r\n+            if (opt.hasArg()) {\r\n                 if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n                         opt.addValue(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/02 1:47 AM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/02 1:47 AM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/28/02 1:22 AM",
          "commitNameOld": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 12.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArgs()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValue(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 273,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArgs()) {\r\n-                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n+                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n                         opt.addValue(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/02 1:47 AM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "11/28/02 1:22 AM",
          "commitNameOld": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 12.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArgs()) {\r\n                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                    try {\r\n                        opt.addValue(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/Parser.java",
          "functionStartLine": 273,
          "functionName": "processProperties",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,23 +1,23 @@\n private void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArgs()) {\r\n-                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n+                if ((opt.getValues() \u003d\u003d null) || (opt.getValues().length \u003d\u003d 0)) {\r\n                     try {\r\n                         opt.addValue(value);\r\n                     } catch (RuntimeException exp) {\r\n                     }\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n",
            "newValue": "\u003cp\u003eSets the values of Options using the values in \r\n\u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param properties The value properties to be processed.\r\n"
          }
        }
      ]
    },
    "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453": {
      "type": "Ybodychange",
      "commitMessage": "added support for *boolean/flag* options from properties\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/28/02 1:22 AM",
      "commitName": "be7dfa5b0a0e0bf609ac77ae45aeb2c3287ad453",
      "commitAuthor": "John Keyes",
      "commitDateOld": "11/26/02 1:43 AM",
      "commitNameOld": "5470bcaa9d75d73fb9c687fa13e12d642c75984f",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 1.98,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArgs()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    try {\r\n                        opt.addValue(value);\r\n                    } catch (RuntimeException exp) {\r\n                    }\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                break;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 249,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n",
      "diff": "@@ -1,15 +1,23 @@\n private void processProperties(Properties properties) {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n-            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n-                opt.addValue(properties.getProperty(option));\r\n+            String value \u003d properties.getProperty(option);\r\n+            if (opt.hasArgs()) {\r\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n+                    try {\r\n+                        opt.addValue(value);\r\n+                    } catch (RuntimeException exp) {\r\n+                    }\r\n+                }\r\n+            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n+                break;\r\n             }\r\n             cmd.addOption(opt);\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "347bbeb8f98a49744501ac50850457ba8751d545": {
      "type": "Yintroduced",
      "commitMessage": "refactored the option string handling, added property support for options with an argument value\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/18/02 10:41 AM",
      "commitName": "347bbeb8f98a49744501ac50850457ba8751d545",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,15 @@\n+private void processProperties(Properties properties) {\r\n+    if (properties \u003d\u003d null) {\r\n+        return;\r\n+    }\r\n+    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+        String option \u003d e.nextElement().toString();\r\n+        if (!cmd.hasOption(option)) {\r\n+            Option opt \u003d options.getOption(option);\r\n+            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n+                opt.addValue(properties.getProperty(option));\r\n+            }\r\n+            cmd.addOption(opt);\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void processProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                opt.addValue(properties.getProperty(option));\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/Parser.java",
      "functionStartLine": 249,
      "functionName": "processProperties",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eSets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\u003c/p\u003e\r\n"
    }
  }
}