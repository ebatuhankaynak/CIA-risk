{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultParser.java",
  "functionName": "handleUnknownToken",
  "functionId": "handleUnknownToken___token-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/DefaultParser.java",
  "functionAnnotation": "",
  "functionDoc": "Handles an unknown token. If the token starts with a dash an UnrecognizedOptionException is thrown. Otherwise the\r\ntoken is added to the arguments of the command line. If the stopAtNonOption flag is set, this stops the parsing and\r\nthe remaining tokens are added as-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
  "functionStartLine": 559,
  "functionEndLine": 568,
  "numCommitsSeen": 47,
  "timeTaken": 144,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "bc5f93f062d83ba1407c707725bfb5d55dc0a86a",
    "f43698527ef2b5ba15fe85d46d2d505418f68243"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Ydocchange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": "Yformatchange",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "bc5f93f062d83ba1407c707725bfb5d55dc0a86a": "Yformatchange",
    "f43698527ef2b5ba15fe85d46d2d505418f68243": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleUnknownToken(final String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 350,
          "functionName": "handleUnknownToken",
          "functionAnnotation": "",
          "functionDoc": "Handles an unknown token. If the token starts with a dash an UnrecognizedOptionException is thrown. Otherwise the\r\ntoken is added to the arguments of the command line. If the stopAtNonOption flag is set, this stops the parsing and\r\nthe remaining tokens are added as-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Handles an unknown token. If the token starts with a dash an\r\nUnrecognizedOptionException is thrown. Otherwise the token is added\r\nto the arguments of the command line. If the stopAtNonOption flag\r\nis set, this stops the parsing and the remaining tokens are added\r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
            "newValue": "Handles an unknown token. If the token starts with a dash an UnrecognizedOptionException is thrown. Otherwise the\r\ntoken is added to the arguments of the command line. If the stopAtNonOption flag is set, this stops the parsing and\r\nthe remaining tokens are added as-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleUnknownToken(final String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 350,
          "functionName": "handleUnknownToken",
          "functionAnnotation": "",
          "functionDoc": "Handles an unknown token. If the token starts with a dash an UnrecognizedOptionException is thrown. Otherwise the\r\ntoken is added to the arguments of the command line. If the stopAtNonOption flag is set, this stops the parsing and\r\nthe remaining tokens are added as-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Ydocchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2/17/19 8:49 PM",
      "commitNameOld": "c5536b7f82862fe798ae91cd4b4a8a2df049d06a",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 304.11,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleUnknownToken(final String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 402,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an\r\nUnrecognizedOptionException is thrown. Otherwise the token is added\r\nto the arguments of the command line. If the stopAtNonOption flag\r\nis set, this stops the parsing and the remaining tokens are added\r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
        "newValue": "Handles an unknown token. If the token starts with a dash an\r\nUnrecognizedOptionException is thrown. Otherwise the token is added\r\nto the arguments of the command line. If the stopAtNonOption flag\r\nis set, this stops the parsing and the remaining tokens are added\r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n"
      }
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleUnknownToken(final String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 356,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "@@ -1,9 +1,9 @@\n-private void handleUnknownToken(String token) throws ParseException {\r\n+private void handleUnknownToken(final String token) throws ParseException {\r\n     if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n         throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n     }\r\n     cmd.addArg(token);\r\n     if (stopAtNonOption) {\r\n         skipParsing \u003d true;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[token-String]",
        "newValue": "[token-String(modifiers-final)]"
      }
    },
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": {
      "type": "Yformatchange",
      "commitMessage": "trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1095657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/11 2:13 PM",
      "commitName": "5b098dec44567a760c220c1e0cd6bee29262c2c4",
      "commitAuthor": "Simone Tripodi",
      "commitDateOld": "4/12/11 9:57 PM",
      "commitNameOld": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 8.68,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleUnknownToken(String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 340,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleUnknownToken(String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 333,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/DefaultParser.java",
        "newPath": "src/main/java/org/apache/commons/cli/DefaultParser.java"
      }
    },
    "bc5f93f062d83ba1407c707725bfb5d55dc0a86a": {
      "type": "Yformatchange",
      "commitMessage": "Improved the javadoc explaining the stopAtNonOption parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@954846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/15/10 3:07 PM",
      "commitName": "bc5f93f062d83ba1407c707725bfb5d55dc0a86a",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/09 4:43 PM",
      "commitNameOld": "f43698527ef2b5ba15fe85d46d2d505418f68243",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 380.93,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleUnknownToken(String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 249,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f43698527ef2b5ba15fe85d46d2d505418f68243": {
      "type": "Yintroduced",
      "commitMessage": "New unified parser (CLI-181, also fixes CLI-160, CLI-161, CLI-167, CLI-184)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@780264 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/09 4:43 PM",
      "commitName": "f43698527ef2b5ba15fe85d46d2d505418f68243",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,9 @@\n+private void handleUnknownToken(String token) throws ParseException {\r\n+    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n+        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n+    }\r\n+    cmd.addArg(token);\r\n+    if (stopAtNonOption) {\r\n+        skipParsing \u003d true;\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void handleUnknownToken(String token) throws ParseException {\r\n    if (token.startsWith(\"-\") \u0026\u0026 token.length() \u003e 1 \u0026\u0026 !stopAtNonOption) {\r\n        throw new UnrecognizedOptionException(\"Unrecognized option: \" + token, token);\r\n    }\r\n    cmd.addArg(token);\r\n    if (stopAtNonOption) {\r\n        skipParsing \u003d true;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 243,
      "functionName": "handleUnknownToken",
      "functionAnnotation": "",
      "functionDoc": "Handles an unknown token. If the token starts with a dash an \r\nUnrecognizedOptionException is thrown. Otherwise the token is added \r\nto the arguments of the command line. If the stopAtNonOption flag \r\nis set, this stops the parsing and the remaining tokens are added \r\nas-is in the arguments of the command line.\r\n\r\n@param token the command line token to handle\r\n"
    }
  }
}