{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultParser.java",
  "functionName": "getMatchingLongOptions",
  "functionId": "getMatchingLongOptions___token-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/DefaultParser.java",
  "functionAnnotation": "",
  "functionDoc": "Gets a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
  "functionStartLine": 274,
  "functionEndLine": 285,
  "numCommitsSeen": 44,
  "timeTaken": 173,
  "changeHistory": [
    "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "a6f9d7bb96045fdb361d12b91095fd55be261080",
    "bf19d994c6414de253734f69a769e419758e43b0",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21",
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342"
  ],
  "changeHistoryShort": {
    "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "a6f9d7bb96045fdb361d12b91095fd55be261080": "Ybodychange",
    "bf19d994c6414de253734f69a769e419758e43b0": "Ybodychange",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": "Ybodychange",
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b": {
      "type": "Ydocchange",
      "commitMessage": "Normalize Javadoc for getters.\n",
      "commitDate": "10/4/21 12:41 AM",
      "commitName": "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/4/21 12:32 AM",
      "commitNameOld": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    }\r\n    final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n    if (options.hasLongOption(token)) {\r\n        final Option option \u003d options.getOption(token);\r\n        matches.add(option.getLongOpt());\r\n    }\r\n    return matches;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 154,
      "functionName": "getMatchingLongOptions",
      "functionAnnotation": "",
      "functionDoc": "Gets a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
        "newValue": "Gets a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    }\r\n    final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n    if (options.hasLongOption(token)) {\r\n        final Option option \u003d options.getOption(token);\r\n        matches.add(option.getLongOpt());\r\n    }\r\n    return matches;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 578,
          "functionName": "getMatchingLongOptions",
          "functionAnnotation": "",
          "functionDoc": "Returns a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Returns a list of matching option strings for the given token, depending\r\non the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
            "newValue": "Returns a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/29/21 10:49 PM",
          "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 65.01,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    }\r\n    final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n    if (options.hasLongOption(token)) {\r\n        final Option option \u003d options.getOption(token);\r\n        matches.add(option.getLongOpt());\r\n    }\r\n    return matches;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 578,
          "functionName": "getMatchingLongOptions",
          "functionAnnotation": "",
          "functionDoc": "Returns a list of matching option strings for the given token, depending on the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "a6f9d7bb96045fdb361d12b91095fd55be261080": {
      "type": "Ybodychange",
      "commitMessage": "Don\u0027t need to nest.\n",
      "commitDate": "5/24/20 6:51 PM",
      "commitName": "a6f9d7bb96045fdb361d12b91095fd55be261080",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "5/24/20 6:49 PM",
      "commitNameOld": "bf19d994c6414de253734f69a769e419758e43b0",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    }\r\n    final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n    if (options.hasLongOption(token)) {\r\n        final Option option \u003d options.getOption(token);\r\n        matches.add(option.getLongOpt());\r\n    }\r\n    return matches;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 713,
      "functionName": "getMatchingLongOptions",
      "functionAnnotation": "",
      "functionDoc": "Returns a list of matching option strings for the given token, depending\r\non the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
      "diff": "@@ -1,12 +1,11 @@\n private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n     if (allowPartialMatching) {\r\n         return options.getMatchingOptions(token);\r\n-    } else {\r\n-        final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n-        if (options.hasLongOption(token)) {\r\n-            final Option option \u003d options.getOption(token);\r\n-            matches.add(option.getLongOpt());\r\n-        }\r\n-        return matches;\r\n     }\r\n+    final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n+    if (options.hasLongOption(token)) {\r\n+        final Option option \u003d options.getOption(token);\r\n+        matches.add(option.getLongOpt());\r\n+    }\r\n+    return matches;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bf19d994c6414de253734f69a769e419758e43b0": {
      "type": "Ybodychange",
      "commitMessage": "Use final.\n",
      "commitDate": "5/24/20 6:49 PM",
      "commitName": "bf19d994c6414de253734f69a769e419758e43b0",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "5/24/20 6:46 PM",
      "commitNameOld": "a3e2d6b14257122a891d84459f927e2417cc8c88",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    } else {\r\n        final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n        if (options.hasLongOption(token)) {\r\n            final Option option \u003d options.getOption(token);\r\n            matches.add(option.getLongOpt());\r\n        }\r\n        return matches;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 713,
      "functionName": "getMatchingLongOptions",
      "functionAnnotation": "",
      "functionDoc": "Returns a list of matching option strings for the given token, depending\r\non the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
      "diff": "@@ -1,12 +1,12 @@\n private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n     if (allowPartialMatching) {\r\n         return options.getMatchingOptions(token);\r\n     } else {\r\n-        List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n+        final List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n         if (options.hasLongOption(token)) {\r\n-            Option option \u003d options.getOption(token);\r\n+            final Option option \u003d options.getOption(token);\r\n             matches.add(option.getLongOpt());\r\n         }\r\n         return matches;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant generic type arguments.\n",
      "commitDate": "5/24/20 6:44 PM",
      "commitName": "02aba6c78d451376053478e4d627ba6f2fd6ba21",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 157.8,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    } else {\r\n        List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n        if (options.hasLongOption(token)) {\r\n            Option option \u003d options.getOption(token);\r\n            matches.add(option.getLongOpt());\r\n        }\r\n        return matches;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 711,
      "functionName": "getMatchingLongOptions",
      "functionAnnotation": "",
      "functionDoc": "Returns a list of matching option strings for the given token, depending\r\non the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n",
      "diff": "@@ -1,12 +1,12 @@\n private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n     if (allowPartialMatching) {\r\n         return options.getMatchingOptions(token);\r\n     } else {\r\n-        List\u003cString\u003e matches \u003d new ArrayList\u003cString\u003e(1);\r\n+        List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e(1);\r\n         if (options.hasLongOption(token)) {\r\n             Option option \u003d options.getOption(token);\r\n             matches.add(option.getLongOpt());\r\n         }\r\n         return matches;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bdb4a09ceaceab7e3d214b1beadb93bd9c911342": {
      "type": "Yintroduced",
      "commitMessage": "Added support for disabling partial option matching\n",
      "commitDate": "6/23/17 2:04 PM",
      "commitName": "bdb4a09ceaceab7e3d214b1beadb93bd9c911342",
      "commitAuthor": "Rubin Simons",
      "diff": "@@ -0,0 +1,12 @@\n+private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n+    if (allowPartialMatching) {\r\n+        return options.getMatchingOptions(token);\r\n+    } else {\r\n+        List\u003cString\u003e matches \u003d new ArrayList\u003cString\u003e(1);\r\n+        if (options.hasLongOption(token)) {\r\n+            Option option \u003d options.getOption(token);\r\n+            matches.add(option.getLongOpt());\r\n+        }\r\n+        return matches;\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private List\u003cString\u003e getMatchingLongOptions(final String token) {\r\n    if (allowPartialMatching) {\r\n        return options.getMatchingOptions(token);\r\n    } else {\r\n        List\u003cString\u003e matches \u003d new ArrayList\u003cString\u003e(1);\r\n        if (options.hasLongOption(token)) {\r\n            Option option \u003d options.getOption(token);\r\n            matches.add(option.getLongOpt());\r\n        }\r\n        return matches;\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 681,
      "functionName": "getMatchingLongOptions",
      "functionAnnotation": "",
      "functionDoc": "Returns a list of matching option strings for the given token, depending\r\non the selected partial matching policy.\r\n\r\n@param token the token (may contain leading dashes)\r\n@return the list of matching option strings or an empty list if no matching option could be found\r\n"
    }
  }
}