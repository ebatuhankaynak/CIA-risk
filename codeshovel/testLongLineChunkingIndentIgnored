{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BugCLI162Test.java",
  "functionName": "testLongLineChunkingIndentIgnored",
  "functionId": "testLongLineChunkingIndentIgnored",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 172,
  "functionEndLine": 188,
  "numCommitsSeen": 20,
  "timeTaken": 173,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "b207a2bcef8e29df436bc393c3569947680e93e6",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "f06a1b95c4568997295e987b9617be799c517845",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "27cf61e22583db8e796e7c14f1f20fbc9538b1ef",
    "6a585453d385449dc23d90479488f92f02cd6b83",
    "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "b207a2bcef8e29df436bc393c3569947680e93e6": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "f06a1b95c4568997295e987b9617be799c517845": "Yexceptionschange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "27cf61e22583db8e796e7c14f1f20fbc9538b1ef": "Ybodychange",
    "6a585453d385449dc23d90479488f92f02cd6b83": "Ybodychange",
    "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongLineChunkingIndentIgnored() {\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    final String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 176,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/29/15 12:34 PM",
      "commitNameOld": "b207a2bcef8e29df436bc393c3569947680e93e6",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 799.29,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongLineChunkingIndentIgnored() {\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    final String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 346,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,8 +1,8 @@\n @Test\r\n public void testLongLineChunkingIndentIgnored() {\r\n-    Options options \u003d new Options();\r\n+    final Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n-    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n+    final String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b207a2bcef8e29df436bc393c3569947680e93e6": {
      "type": "Ybodychange",
      "commitMessage": "Tests sould not write to std out, but instead should verify return values for correctness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1669880 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "3/29/15 12:34 PM",
      "commitName": "b207a2bcef8e29df436bc393c3569947680e93e6",
      "commitAuthor": "Benedikt Ritter",
      "commitDateOld": "2/6/13 12:57 PM",
      "commitNameOld": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 780.94,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongLineChunkingIndentIgnored() {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 346,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,8 @@\n @Test\r\n public void testLongLineChunkingIndentIgnored() {\r\n     Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n-    HelpFormatter formatter \u003d new HelpFormatter();\r\n-    StringWriter sw \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n-    System.err.println(sw.toString());\r\n     String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:22 PM",
      "commitNameOld": "f06a1b95c4568997295e987b9617be799c517845",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.73,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongLineChunkingIndentIgnored() {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    System.err.println(sw.toString());\r\n    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 269,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,11 @@\n+@Test\r\n public void testLongLineChunkingIndentIgnored() {\r\n     Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     StringWriter sw \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n     System.err.println(sw.toString());\r\n     String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "f06a1b95c4568997295e987b9617be799c517845": {
      "type": "Yexceptionschange",
      "commitMessage": "Exceptions not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 7:22 PM",
      "commitName": "f06a1b95c4568997295e987b9617be799c517845",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "6/16/10 12:41 PM",
      "commitNameOld": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 959.32,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongLineChunkingIndentIgnored() {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    System.err.println(sw.toString());\r\n    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 264,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n-public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n+public void testLongLineChunkingIndentIgnored() {\r\n     Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     StringWriter sw \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n     System.err.println(sw.toString());\r\n     String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[ParseException, IOException]",
        "newValue": "[]"
      }
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    System.err.println(sw.toString());\r\n    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 266,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
        "newPath": "src/test/java/org/apache/commons/cli/bug/BugCLI162Test.java"
      }
    },
    "27cf61e22583db8e796e7c14f1f20fbc9538b1ef": {
      "type": "Ybodychange",
      "commitMessage": "Appling Oliver Heger\u0027s patch from CLI-175 to fix the build on Windows\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@748927 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/28/09 11:55 PM",
      "commitName": "27cf61e22583db8e796e7c14f1f20fbc9538b1ef",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "2/27/09 11:38 AM",
      "commitNameOld": "6a585453d385449dc23d90479488f92f02cd6b83",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 1.51,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    System.err.println(sw.toString());\r\n    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 266,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,10 +1,10 @@\n public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n     Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     StringWriter sw \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n     System.err.println(sw.toString());\r\n-    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \" This description is\\n\" + \" Long.\\n\" + \"Footer\\n\";\r\n+    String expected \u003d \"usage:\" + CR + \"       org.apache.comm\" + CR + \"       ons.cli.bug.Bug\" + CR + \"       CLI162Test\" + CR + \"Header\" + CR + \"-x,--extralongarg\" + CR + \" This description is\" + CR + \" Long.\" + CR + \"Footer\" + CR;\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6a585453d385449dc23d90479488f92f02cd6b83": {
      "type": "Ybodychange",
      "commitMessage": "Adjusting - best is to switch to an indent of 1 than do silly things like having every line have 1 character. CLI-162\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@748463 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/27/09 11:38 AM",
      "commitName": "6a585453d385449dc23d90479488f92f02cd6b83",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "2/27/09 11:34 AM",
      "commitNameOld": "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    System.err.println(sw.toString());\r\n    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \" This description is\\n\" + \" Long.\\n\" + \"Footer\\n\";\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 264,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,9 +1,10 @@\n public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n     Options options \u003d new Options();\r\n     options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     StringWriter sw \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n-    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \"                     T\\n\" + \"                     h\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     d\\n\" + \"                     e\\n\" + \"                     s\\n\" + \"                     c\\n\" + \"                     r\\n\" + \"                     i\\n\" + \"                     p\\n\" + \"                     t\\n\" + \"                     i\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     L\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     g\\n\" + \"                     .\\n\" + \"Footer\\n\";\r\n+    System.err.println(sw.toString());\r\n+    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \" This description is\\n\" + \" Long.\\n\" + \"Footer\\n\";\r\n     assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22": {
      "type": "Yintroduced",
      "commitMessage": "Switching from the IllegalStateException to trying hard to work. A better user experience and didn\u0027t end up with the code being any more evil. CLI-162\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@748461 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/27/09 11:34 AM",
      "commitName": "02dd7c20646bf67dcfb6f7da6beeb7cdffc6ac22",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,9 @@\n+public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n+    Options options \u003d new Options();\r\n+    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n+    HelpFormatter formatter \u003d new HelpFormatter();\r\n+    StringWriter sw \u003d new StringWriter();\r\n+    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n+    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \"                     T\\n\" + \"                     h\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     d\\n\" + \"                     e\\n\" + \"                     s\\n\" + \"                     c\\n\" + \"                     r\\n\" + \"                     i\\n\" + \"                     p\\n\" + \"                     t\\n\" + \"                     i\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     L\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     g\\n\" + \"                     .\\n\" + \"Footer\\n\";\r\n+    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\r\n    Options options \u003d new Options();\r\n    options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\");\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    StringWriter sw \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\r\n    String expected \u003d \"usage:\\n\" + \"       org.apache.comm\\n\" + \"       ons.cli.bug.Bug\\n\" + \"       CLI162Test\\n\" + \"Header\\n\" + \"-x,--extralongarg\\n\" + \"                     T\\n\" + \"                     h\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     d\\n\" + \"                     e\\n\" + \"                     s\\n\" + \"                     c\\n\" + \"                     r\\n\" + \"                     i\\n\" + \"                     p\\n\" + \"                     t\\n\" + \"                     i\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     i\\n\" + \"                     s\\n\" + \"                     L\\n\" + \"                     o\\n\" + \"                     n\\n\" + \"                     g\\n\" + \"                     .\\n\" + \"Footer\\n\";\r\n    assertEquals(\"Long arguments did not split as expected\", expected, sw.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/bug/BugCLI162Test.java",
      "functionStartLine": 264,
      "functionName": "testLongLineChunkingIndentIgnored",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}