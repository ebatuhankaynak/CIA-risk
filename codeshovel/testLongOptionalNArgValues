{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ValueTest.java",
  "functionName": "testLongOptionalNArgValues",
  "functionId": "testLongOptionalNArgValues",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/ValueTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 112,
  "functionEndLine": 124,
  "numCommitsSeen": 26,
  "timeTaken": 2379,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
    "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a",
    "6dffb657aa427151ba9bf2b832977c42f8c01f7a",
    "c08f73835beda155421d78ee4f96d9e11c501159",
    "b1efd861095ee4f0a13337fa4e83e900a297d0bd"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0": "Ymultichange(Yexceptionschange,Ybodychange)",
    "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a": "Ybodychange",
    "6dffb657aa427151ba9bf2b832977c42f8c01f7a": "Ybodychange",
    "c08f73835beda155421d78ee4f96d9e11c501159": "Ybodychange",
    "b1efd861095ee4f0a13337fa4e83e900a297d0bd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongOptionalNArgValues() throws Exception {\r\n    final String[] args \u003d { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    final Parser parser \u003d new PosixParser();\r\n    final CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 268,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Test\r\n public void testLongOptionalNArgValues() throws Exception {\r\n-    final String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n+    final String[] args \u003d { \"--hide\", \"house\", \"hair\", \"head\" };\r\n     final Parser parser \u003d new PosixParser();\r\n     final CommandLine cmd \u003d parser.parse(opts, args);\r\n     assertTrue(cmd.hasOption(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n     assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n     assertEquals(cmd.getArgs().length, 1);\r\n     assertEquals(\"head\", cmd.getArgs()[0]);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 926.16,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongOptionalNArgValues() throws Exception {\r\n    final String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    final Parser parser \u003d new PosixParser();\r\n    final CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 296,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/25/17 9:32 PM",
      "commitNameOld": "269eae18a911f792895d0402f5dd4e7913410523",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 71.92,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongOptionalNArgValues() throws Exception {\r\n    final String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    final Parser parser \u003d new PosixParser();\r\n    final CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 296,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,12 +1,12 @@\n @Test\r\n public void testLongOptionalNArgValues() throws Exception {\r\n-    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n-    Parser parser \u003d new PosixParser();\r\n-    CommandLine cmd \u003d parser.parse(opts, args);\r\n+    final String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n+    final Parser parser \u003d new PosixParser();\r\n+    final CommandLine cmd \u003d parser.parse(opts, args);\r\n     assertTrue(cmd.hasOption(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n     assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n     assertEquals(cmd.getArgs().length, 1);\r\n     assertEquals(\"head\", cmd.getArgs()[0]);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:20 PM",
      "commitNameOld": "0cbe33506c92b790fd4dc866237d7e430a6c91dd",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.73,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testLongOptionalNArgValues() throws Exception {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    Parser parser \u003d new PosixParser();\r\n    CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 178,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n+@Test\r\n public void testLongOptionalNArgValues() throws Exception {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n     Parser parser \u003d new PosixParser();\r\n     CommandLine cmd \u003d parser.parse(opts, args);\r\n     assertTrue(cmd.hasOption(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n     assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n     assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n     assertEquals(cmd.getArgs().length, 1);\r\n     assertEquals(\"head\", cmd.getArgs()[0]);\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongOptionalNArgValues() throws Exception {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    Parser parser \u003d new PosixParser();\r\n    CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 158,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/ValueTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/ValueTest.java"
      }
    },
    "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/29/08 7:11 PM",
      "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 7:11 PM",
          "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/29/08 6:30 PM",
          "commitNameOld": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testLongOptionalNArgValues() throws Exception {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    Parser parser \u003d new PosixParser();\r\n    CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
          "path": "src/test/org/apache/commons/cli/ValueTest.java",
          "functionStartLine": 198,
          "functionName": "testLongOptionalNArgValues",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,11 @@\n-public void testLongOptionalNArgValues() {\r\n+public void testLongOptionalNArgValues() throws Exception {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n     Parser parser \u003d new PosixParser();\r\n-    try {\r\n-        CommandLine cmd \u003d parser.parse(opts, args);\r\n-        assertTrue(cmd.hasOption(\"hide\"));\r\n-        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n-        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n-        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n-        assertEquals(cmd.getArgs().length, 1);\r\n-        assertEquals(\"head\", cmd.getArgs()[0]);\r\n-    } catch (ParseException e) {\r\n-        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n-    }\r\n+    CommandLine cmd \u003d parser.parse(opts, args);\r\n+    assertTrue(cmd.hasOption(\"hide\"));\r\n+    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n+    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n+    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n+    assertEquals(cmd.getArgs().length, 1);\r\n+    assertEquals(\"head\", cmd.getArgs()[0]);\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Simplified the test cases by removing the unnecessary fail() calls in the catch blocks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661378 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 7:11 PM",
          "commitName": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/29/08 6:30 PM",
          "commitNameOld": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testLongOptionalNArgValues() throws Exception {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    Parser parser \u003d new PosixParser();\r\n    CommandLine cmd \u003d parser.parse(opts, args);\r\n    assertTrue(cmd.hasOption(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n    assertEquals(cmd.getArgs().length, 1);\r\n    assertEquals(\"head\", cmd.getArgs()[0]);\r\n}",
          "path": "src/test/org/apache/commons/cli/ValueTest.java",
          "functionStartLine": 198,
          "functionName": "testLongOptionalNArgValues",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,11 @@\n-public void testLongOptionalNArgValues() {\r\n+public void testLongOptionalNArgValues() throws Exception {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n     Parser parser \u003d new PosixParser();\r\n-    try {\r\n-        CommandLine cmd \u003d parser.parse(opts, args);\r\n-        assertTrue(cmd.hasOption(\"hide\"));\r\n-        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n-        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n-        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n-        assertEquals(cmd.getArgs().length, 1);\r\n-        assertEquals(\"head\", cmd.getArgs()[0]);\r\n-    } catch (ParseException e) {\r\n-        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n-    }\r\n+    CommandLine cmd \u003d parser.parse(opts, args);\r\n+    assertTrue(cmd.hasOption(\"hide\"));\r\n+    assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n+    assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n+    assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n+    assertEquals(cmd.getArgs().length, 1);\r\n+    assertEquals(\"head\", cmd.getArgs()[0]);\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a": {
      "type": "Ybodychange",
      "commitMessage": "The previous commit removed an incorrect method. This puts it back and removes the right one, along with a fix for a unit test that fails to compile as a result. See CLI-134\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@551813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/29/07 9:54 AM",
      "commitName": "08cf0f5d990cdc0daa251fd1a84d011e8cbecc9a",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/28/07 11:01 AM",
      "commitNameOld": "79a1091bd0a2dba7decacd23beac8104f3b5a5cb",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 31.95,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongOptionalNArgValues() {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    Parser parser \u003d new PosixParser();\r\n    try {\r\n        CommandLine cmd \u003d parser.parse(opts, args);\r\n        assertTrue(cmd.hasOption(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n        assertEquals(cmd.getArgs().length, 1);\r\n        assertEquals(\"head\", cmd.getArgs()[0]);\r\n    } catch (ParseException e) {\r\n        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 264,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public void testLongOptionalNArgValues() {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n-    CommandLineParser parser \u003d new PosixParser();\r\n+    Parser parser \u003d new PosixParser();\r\n     try {\r\n         CommandLine cmd \u003d parser.parse(opts, args);\r\n         assertTrue(cmd.hasOption(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n         assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n         assertEquals(cmd.getArgs().length, 1);\r\n         assertEquals(\"head\", cmd.getArgs()[0]);\r\n     } catch (ParseException e) {\r\n         fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "6dffb657aa427151ba9bf2b832977c42f8c01f7a": {
      "type": "Ybodychange",
      "commitMessage": "some more tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129855 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/28/02 1:24 AM",
      "commitName": "6dffb657aa427151ba9bf2b832977c42f8c01f7a",
      "commitAuthor": "John Keyes",
      "commitDateOld": "11/18/02 10:41 AM",
      "commitNameOld": "347bbeb8f98a49744501ac50850457ba8751d545",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 9.61,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongOptionalNArgValues() {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    try {\r\n        CommandLine cmd \u003d parser.parse(opts, args);\r\n        assertTrue(cmd.hasOption(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n        assertEquals(cmd.getArgs().length, 1);\r\n        assertEquals(\"head\", cmd.getArgs()[0]);\r\n    } catch (ParseException e) {\r\n        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 258,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public void testLongOptionalNArgValues() {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n+    CommandLineParser parser \u003d new PosixParser();\r\n     try {\r\n-        CommandLineParser parser \u003d new PosixParser();\r\n         CommandLine cmd \u003d parser.parse(opts, args);\r\n         assertTrue(cmd.hasOption(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n         assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n         assertEquals(cmd.getArgs().length, 1);\r\n         assertEquals(\"head\", cmd.getArgs()[0]);\r\n     } catch (ParseException e) {\r\n         fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c08f73835beda155421d78ee4f96d9e11c501159": {
      "type": "Ybodychange",
      "commitMessage": "changed my email add, removed CommandLineParserFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129816 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/20/02 1:59 AM",
      "commitName": "c08f73835beda155421d78ee4f96d9e11c501159",
      "commitAuthor": "John Keyes",
      "commitDateOld": "9/11/02 12:35 AM",
      "commitNameOld": "b1efd861095ee4f0a13337fa4e83e900a297d0bd",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 9.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testLongOptionalNArgValues() {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    try {\r\n        CommandLineParser parser \u003d new PosixParser();\r\n        CommandLine cmd \u003d parser.parse(opts, args);\r\n        assertTrue(cmd.hasOption(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n        assertEquals(cmd.getArgs().length, 1);\r\n        assertEquals(\"head\", cmd.getArgs()[0]);\r\n    } catch (ParseException e) {\r\n        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 252,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,15 @@\n public void testLongOptionalNArgValues() {\r\n     String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n     try {\r\n-        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+        CommandLineParser parser \u003d new PosixParser();\r\n         CommandLine cmd \u003d parser.parse(opts, args);\r\n         assertTrue(cmd.hasOption(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n         assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n         assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n         assertEquals(cmd.getArgs().length, 1);\r\n         assertEquals(\"head\", cmd.getArgs()[0]);\r\n     } catch (ParseException e) {\r\n         fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b1efd861095ee4f0a13337fa4e83e900a297d0bd": {
      "type": "Yintroduced",
      "commitMessage": "support for Options with optional argument values\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129815 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/11/02 12:35 AM",
      "commitName": "b1efd861095ee4f0a13337fa4e83e900a297d0bd",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,15 @@\n+public void testLongOptionalNArgValues() {\r\n+    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n+    try {\r\n+        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+        CommandLine cmd \u003d parser.parse(opts, args);\r\n+        assertTrue(cmd.hasOption(\"hide\"));\r\n+        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n+        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n+        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n+        assertEquals(cmd.getArgs().length, 1);\r\n+        assertEquals(\"head\", cmd.getArgs()[0]);\r\n+    } catch (ParseException e) {\r\n+        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testLongOptionalNArgValues() {\r\n    String[] args \u003d new String[] { \"--hide\", \"house\", \"hair\", \"head\" };\r\n    try {\r\n        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n        CommandLine cmd \u003d parser.parse(opts, args);\r\n        assertTrue(cmd.hasOption(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValue(\"hide\"));\r\n        assertEquals(\"house\", cmd.getOptionValues(\"hide\")[0]);\r\n        assertEquals(\"hair\", cmd.getOptionValues(\"hide\")[1]);\r\n        assertEquals(cmd.getArgs().length, 1);\r\n        assertEquals(\"head\", cmd.getArgs()[0]);\r\n    } catch (ParseException e) {\r\n        fail(\"Cannot setUp() CommandLine: \" + e.toString());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ValueTest.java",
      "functionStartLine": 252,
      "functionName": "testLongOptionalNArgValues",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}