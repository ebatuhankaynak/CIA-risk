{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ValuesTest.java",
  "functionName": "testCharSeparator",
  "functionId": "testCharSeparator",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/ValuesTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 76,
  "functionEndLine": 92,
  "numCommitsSeen": 26,
  "timeTaken": 111,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "135281e95ce1616ba42a18691282be9d8d4af73b",
    "459f2d0921b1659dfb3579881831449059f7add4",
    "5470bcaa9d75d73fb9c687fa13e12d642c75984f",
    "f9df51847e354190206432ba87661586e6dc814d",
    "1060ee73965dc30d92afbad80525bd4cdabe9153"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Ymultichange(Ybodychange,Yannotationchange)",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "135281e95ce1616ba42a18691282be9d8d4af73b": "Ybodychange",
    "459f2d0921b1659dfb3579881831449059f7add4": "Ybodychange",
    "5470bcaa9d75d73fb9c687fa13e12d642c75984f": "Ybodychange",
    "f9df51847e354190206432ba87661586e6dc814d": "Ybodychange",
    "1060ee73965dc30d92afbad80525bd4cdabe9153": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testCharSeparator() {\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 120,
      "functionName": "testCharSeparator",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/6/13 12:57 PM",
          "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/30/13 7:20 PM",
          "commitNameOld": "0cbe33506c92b790fd4dc866237d7e430a6c91dd",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 6.73,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "@Test\r\npublic void testCharSeparator() {\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n}",
          "path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
          "functionStartLine": 124,
          "functionName": "testCharSeparator",
          "functionAnnotation": "@Test",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,15 @@\n+@Test\r\n public void testCharSeparator() {\r\n     assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n     assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n     assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n     assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n+    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n+    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n     assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n     assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/6/13 12:57 PM",
          "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/30/13 7:20 PM",
          "commitNameOld": "0cbe33506c92b790fd4dc866237d7e430a6c91dd",
          "commitAuthorOld": "Sebastian Bazley",
          "daysBetweenCommits": 6.73,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "@Test\r\npublic void testCharSeparator() {\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n}",
          "path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
          "functionStartLine": 124,
          "functionName": "testCharSeparator",
          "functionAnnotation": "@Test",
          "functionDoc": "",
          "diff": "@@ -1,14 +1,15 @@\n+@Test\r\n public void testCharSeparator() {\r\n     assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n     assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n     assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n     assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n+    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n+    assertArrayEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n     assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n     assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n-    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n+    assertArrayEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Test"
          }
        }
      ]
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testCharSeparator() {\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 110,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/ValuesTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/ValuesTest.java"
      }
    },
    "135281e95ce1616ba42a18691282be9d8d4af73b": {
      "type": "Ybodychange",
      "commitMessage": "Fixed the definition of the h option in ValuesTest (1 argument instead of 2)\nCode simplification\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@780217 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/09 12:29 PM",
      "commitName": "135281e95ce1616ba42a18691282be9d8d4af73b",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/2/08 10:49 PM",
      "commitNameOld": "459f2d0921b1659dfb3579881831449059f7add4",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 361.57,
      "commitsBetweenForRepo": 152,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testCharSeparator() {\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n}",
      "path": "src/test/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 110,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,14 @@\n public void testCharSeparator() {\r\n-    String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n-    assertTrue(_cmdline.hasOption(\"j\"));\r\n-    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n-    assertEquals(4, _cmdline.getOptionValues(\"j\").length);\r\n-    assertEquals(4, _cmdline.getOptionValues(\u0027j\u0027).length);\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n-    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n-    assertTrue(_cmdline.hasOption(\"k\"));\r\n-    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n-    assertEquals(4, _cmdline.getOptionValues(\"k\").length);\r\n-    assertEquals(4, _cmdline.getOptionValues(\u0027k\u0027).length);\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n-    values \u003d new String[] { \"key\", \"value\" };\r\n-    assertTrue(_cmdline.hasOption(\"m\"));\r\n-    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n-    assertEquals(2, _cmdline.getOptionValues(\"m\").length);\r\n-    assertEquals(2, _cmdline.getOptionValues(\u0027m\u0027).length);\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n-    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n+    assertTrue(\"Option j is not set\", cmd.hasOption(\"j\"));\r\n+    assertTrue(\"Option j is not set\", cmd.hasOption(\u0027j\u0027));\r\n+    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\"j\"));\r\n+    ArrayAssert.assertEquals(new String[] { \"key\", \"value\", \"key\", \"value\" }, cmd.getOptionValues(\u0027j\u0027));\r\n+    assertTrue(\"Option k is not set\", cmd.hasOption(\"k\"));\r\n+    assertTrue(\"Option k is not set\", cmd.hasOption(\u0027k\u0027));\r\n+    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\"k\"));\r\n+    ArrayAssert.assertEquals(new String[] { \"key1\", \"value1\", \"key2\", \"value2\" }, cmd.getOptionValues(\u0027k\u0027));\r\n+    assertTrue(\"Option m is not set\", cmd.hasOption(\"m\"));\r\n+    assertTrue(\"Option m is not set\", cmd.hasOption(\u0027m\u0027));\r\n+    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\"m\"));\r\n+    ArrayAssert.assertEquals(new String[] { \"key\", \"value\" }, cmd.getOptionValues(\u0027m\u0027));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "459f2d0921b1659dfb3579881831449059f7add4": {
      "type": "Ybodychange",
      "commitMessage": "Changed the assertions checking the number of values in ValuesTest to use assertEquals instead of assertTrue\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@662534 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/2/08 10:49 PM",
      "commitName": "459f2d0921b1659dfb3579881831449059f7add4",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08 10:10 PM",
      "commitNameOld": "b8f825936796e2f5b6663de021aefa53fa728f67",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testCharSeparator() {\r\n    String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"j\"));\r\n    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n    assertEquals(4, _cmdline.getOptionValues(\"j\").length);\r\n    assertEquals(4, _cmdline.getOptionValues(\u0027j\u0027).length);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n    assertTrue(_cmdline.hasOption(\"k\"));\r\n    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n    assertEquals(4, _cmdline.getOptionValues(\"k\").length);\r\n    assertEquals(4, _cmdline.getOptionValues(\u0027k\u0027).length);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n    values \u003d new String[] { \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"m\"));\r\n    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n    assertEquals(2, _cmdline.getOptionValues(\"m\").length);\r\n    assertEquals(2, _cmdline.getOptionValues(\u0027m\u0027).length);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n}",
      "path": "src/test/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 123,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n public void testCharSeparator() {\r\n     String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"j\"));\r\n     assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n     assertEquals(4, _cmdline.getOptionValues(\"j\").length);\r\n     assertEquals(4, _cmdline.getOptionValues(\u0027j\u0027).length);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n     values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n     assertTrue(_cmdline.hasOption(\"k\"));\r\n     assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n-    assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n-    assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n+    assertEquals(4, _cmdline.getOptionValues(\"k\").length);\r\n+    assertEquals(4, _cmdline.getOptionValues(\u0027k\u0027).length);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n     values \u003d new String[] { \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"m\"));\r\n     assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n-    assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n-    assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n+    assertEquals(2, _cmdline.getOptionValues(\"m\").length);\r\n+    assertEquals(2, _cmdline.getOptionValues(\u0027m\u0027).length);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5470bcaa9d75d73fb9c687fa13e12d642c75984f": {
      "type": "Ybodychange",
      "commitMessage": "fix bug 14786, some refactorings\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/26/02 1:43 AM",
      "commitName": "5470bcaa9d75d73fb9c687fa13e12d642c75984f",
      "commitAuthor": "John Keyes",
      "commitDateOld": "9/20/02 1:59 AM",
      "commitNameOld": "c08f73835beda155421d78ee4f96d9e11c501159",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 67.03,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testCharSeparator() {\r\n    String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"j\"));\r\n    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n    assertEquals(4, _cmdline.getOptionValues(\"j\").length);\r\n    assertEquals(4, _cmdline.getOptionValues(\u0027j\u0027).length);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n    assertTrue(_cmdline.hasOption(\"k\"));\r\n    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n    assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n    values \u003d new String[] { \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"m\"));\r\n    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n    assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n}",
      "path": "src/test/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 188,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n public void testCharSeparator() {\r\n     String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"j\"));\r\n     assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n-    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 4);\r\n-    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 4);\r\n+    assertEquals(4, _cmdline.getOptionValues(\"j\").length);\r\n+    assertEquals(4, _cmdline.getOptionValues(\u0027j\u0027).length);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n     values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n     assertTrue(_cmdline.hasOption(\"k\"));\r\n     assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n     assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n     assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n     values \u003d new String[] { \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"m\"));\r\n     assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n     assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n     assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f9df51847e354190206432ba87661586e6dc814d": {
      "type": "Ybodychange",
      "commitMessage": "iterator for all Option instances parsed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129799 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/15/02 1:27 AM",
      "commitName": "f9df51847e354190206432ba87661586e6dc814d",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/5/02 2:04 AM",
      "commitNameOld": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 9.97,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testCharSeparator() {\r\n    String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"j\"));\r\n    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 4);\r\n    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 4);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n    assertTrue(_cmdline.hasOption(\"k\"));\r\n    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n    assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n    values \u003d new String[] { \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"m\"));\r\n    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n    assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n}",
      "path": "src/test/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 188,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,23 @@\n public void testCharSeparator() {\r\n-    String[] values \u003d new String[] { \"key\", \"value\" };\r\n+    String[] values \u003d new String[] { \"key\", \"value\", \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"j\"));\r\n     assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n-    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 2);\r\n-    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 2);\r\n+    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 4);\r\n+    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 4);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n     values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n     assertTrue(_cmdline.hasOption(\"k\"));\r\n     assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n     assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n     assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n     values \u003d new String[] { \"key\", \"value\" };\r\n     assertTrue(_cmdline.hasOption(\"m\"));\r\n     assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n     assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n     assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n     assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1060ee73965dc30d92afbad80525bd4cdabe9153": {
      "type": "Yintroduced",
      "commitMessage": "bug 11458 fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/5/02 2:04 AM",
      "commitName": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,23 @@\n+public void testCharSeparator() {\r\n+    String[] values \u003d new String[] { \"key\", \"value\" };\r\n+    assertTrue(_cmdline.hasOption(\"j\"));\r\n+    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n+    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 2);\r\n+    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 2);\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n+    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n+    assertTrue(_cmdline.hasOption(\"k\"));\r\n+    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n+    assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n+    assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n+    values \u003d new String[] { \"key\", \"value\" };\r\n+    assertTrue(_cmdline.hasOption(\"m\"));\r\n+    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n+    assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n+    assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n+    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testCharSeparator() {\r\n    String[] values \u003d new String[] { \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"j\"));\r\n    assertTrue(_cmdline.hasOption(\u0027j\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"j\").length \u003d\u003d 2);\r\n    assertTrue(_cmdline.getOptionValues(\u0027j\u0027).length \u003d\u003d 2);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"j\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027j\u0027)));\r\n    values \u003d new String[] { \"key1\", \"value1\", \"key2\", \"value2\" };\r\n    assertTrue(_cmdline.hasOption(\"k\"));\r\n    assertTrue(_cmdline.hasOption(\u0027k\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"k\").length \u003d\u003d 4);\r\n    assertTrue(_cmdline.getOptionValues(\u0027k\u0027).length \u003d\u003d 4);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"k\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027k\u0027)));\r\n    values \u003d new String[] { \"key\", \"value\" };\r\n    assertTrue(_cmdline.hasOption(\"m\"));\r\n    assertTrue(_cmdline.hasOption(\u0027m\u0027));\r\n    assertTrue(_cmdline.getOptionValues(\"m\").length \u003d\u003d 2);\r\n    assertTrue(_cmdline.getOptionValues(\u0027m\u0027).length \u003d\u003d 2);\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\"m\")));\r\n    assertTrue(Arrays.equals(values, _cmdline.getOptionValues(\u0027m\u0027)));\r\n}",
      "path": "src/test/org/apache/commons/cli/ValuesTest.java",
      "functionStartLine": 188,
      "functionName": "testCharSeparator",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}