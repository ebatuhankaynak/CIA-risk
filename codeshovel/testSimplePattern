{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PatternOptionBuilderTest.java",
  "functionName": "testSimplePattern",
  "functionId": "testSimplePattern",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 119,
  "functionEndLine": 163,
  "numCommitsSeen": 36,
  "timeTaken": 271,
  "changeHistory": [
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21",
    "f79e8335ebd430d7b7a992d938ca16225061cdba",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "9d05157309c890b678bd615dce47911350d0dd91",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "0f964c63c8f60f7ae7ac671565ed73c0f3fd9023",
    "8c3239277edbfbe8584c3f2b951eb16cf4448f54",
    "73b2b5bc1c8ba94cbf4fe95ed900b11fcc05ee7b",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
    "f641323f4fed604953fdab54405a98eeaa2b1271",
    "2490250f9b3044e4cd946f11b46694f943f5814d",
    "3dc96b8c65512372b4ab3d2936ae8433f06cedbe",
    "d35f2fa7a06457469a617677eeb4c1dc21484006",
    "c08f73835beda155421d78ee4f96d9e11c501159",
    "1060ee73965dc30d92afbad80525bd4cdabe9153",
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
    "66d0ae6216730abd8bd736e210be73229c8e807b",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": "Ybodychange",
    "f79e8335ebd430d7b7a992d938ca16225061cdba": "Ybodychange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "9d05157309c890b678bd615dce47911350d0dd91": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "0f964c63c8f60f7ae7ac671565ed73c0f3fd9023": "Ybodychange",
    "8c3239277edbfbe8584c3f2b951eb16cf4448f54": "Ybodychange",
    "73b2b5bc1c8ba94cbf4fe95ed900b11fcc05ee7b": "Ybodychange",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": "Yformatchange",
    "f641323f4fed604953fdab54405a98eeaa2b1271": "Ybodychange",
    "2490250f9b3044e4cd946f11b46694f943f5814d": "Ymultichange(Yexceptionschange,Ybodychange)",
    "3dc96b8c65512372b4ab3d2936ae8433f06cedbe": "Ybodychange",
    "d35f2fa7a06457469a617677eeb4c1dc21484006": "Ybodychange",
    "c08f73835beda155421d78ee4f96d9e11c501159": "Ybodychange",
    "1060ee73965dc30d92afbad80525bd4cdabe9153": "Ybodychange",
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe": "Ymultichange(Yexceptionschange,Ybodychange)",
    "66d0ae6216730abd8bd736e210be73229c8e807b": "Ybodychange",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": "Ybodychange",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testSimplePattern() throws Exception {\r\n    final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    final String[] args \u003d { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    final CommandLineParser parser \u003d new PosixParser();\r\n    final CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testSimplePattern() throws Exception {\r\n     final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n-    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n+    final String[] args \u003d { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     final CommandLineParser parser \u003d new PosixParser();\r\n     final CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n-    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n+    assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n-    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n+    assertEquals(\"number flag n\", Double.valueOf(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant generic type arguments.\n",
      "commitDate": "5/24/20 6:44 PM",
      "commitName": "02aba6c78d451376053478e4d627ba6f2fd6ba21",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "5/19/20 11:42 PM",
      "commitNameOld": "24adba8713785abcc3cbcf40a229432d53b4b521",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 4.79,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testSimplePattern() throws Exception {\r\n    final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    final CommandLineParser parser \u003d new PosixParser();\r\n    final CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 43,
      "functionName": "testSimplePattern",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testSimplePattern() throws Exception {\r\n     final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n     final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     final CommandLineParser parser \u003d new PosixParser();\r\n     final CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n+    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n+    assertEquals(\"object flag b\", new Vector\u003c\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f79e8335ebd430d7b7a992d938ca16225061cdba": {
      "type": "Ybodychange",
      "commitMessage": "Use HTTPS links to Apache.",
      "commitDate": "7/4/19 4:47 PM",
      "commitName": "f79e8335ebd430d7b7a992d938ca16225061cdba",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/13/17 2:58 PM",
      "commitNameOld": "f4a28c0463a414464ebe214a7790fde0b0069e3e",
      "commitAuthorOld": "Béla Schaum",
      "daysBetweenCommits": 751.08,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testSimplePattern() throws Exception {\r\n    final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    final CommandLineParser parser \u003d new PosixParser();\r\n    final CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 43,
      "functionName": "testSimplePattern",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testSimplePattern() throws Exception {\r\n     final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n-    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n+    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"https://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     final CommandLineParser parser \u003d new PosixParser();\r\n     final CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n+    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n-    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n+    assertEquals(\"url flag t\", new URL(\"https://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2/6/13 12:57 PM",
      "commitNameOld": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1580.24,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testSimplePattern() throws Exception {\r\n    final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    final CommandLineParser parser \u003d new PosixParser();\r\n    final CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (final UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 41,
      "functionName": "testSimplePattern",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testSimplePattern() throws Exception {\r\n-    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n-    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n-    CommandLineParser parser \u003d new PosixParser();\r\n-    CommandLine line \u003d parser.parse(options, args);\r\n+    final Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n+    final String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n+    final CommandLineParser parser \u003d new PosixParser();\r\n+    final CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n-    } catch (UnsupportedOperationException uoe) {\r\n+    } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n-    } catch (UnsupportedOperationException uoe) {\r\n+    } catch (final UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:39 PM",
      "commitNameOld": "9d05157309c890b678bd615dce47911350d0dd91",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.72,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 41,
      "functionName": "testSimplePattern",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,35 @@\n+@Test\r\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "9d05157309c890b678bd615dce47911350d0dd91": {
      "type": "Ybodychange",
      "commitMessage": "Fix some obvious raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 7:39 PM",
      "commitName": "9d05157309c890b678bd615dce47911350d0dd91",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/30/13 7:20 PM",
      "commitNameOld": "0cbe33506c92b790fd4dc866237d7e430a6c91dd",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 36,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,34 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n+    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n+    assertEquals(\"object flag b\", new Vector\u003cObject\u003e(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n         assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/PatternOptionBuilderTest.java"
      }
    },
    "0f964c63c8f60f7ae7ac671565ed73c0f3fd9023": {
      "type": "Ybodychange",
      "commitMessage": "Fixing test message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@741427 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/09 8:11 AM",
      "commitName": "0f964c63c8f60f7ae7ac671565ed73c0f3fd9023",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "2/6/09 8:11 AM",
      "commitNameOld": "8c3239277edbfbe8584c3f2b951eb16cf4448f54",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,34 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n     try {\r\n         assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n         fail(\"Multiple files are not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n     try {\r\n-        assertEquals(\"number flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n+        assertEquals(\"date flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n         fail(\"Date is not supported yet, should have failed\");\r\n     } catch (UnsupportedOperationException uoe) {\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "8c3239277edbfbe8584c3f2b951eb16cf4448f54": {
      "type": "Ybodychange",
      "commitMessage": "Testing the two UnsupportedOperationException method calls\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@741426 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/09 8:11 AM",
      "commitName": "8c3239277edbfbe8584c3f2b951eb16cf4448f54",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "1/14/09 7:56 AM",
      "commitNameOld": "e79254e91509806d466364b27756f9fb08b02af1",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 23.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n    try {\r\n        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n        fail(\"Multiple files are not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n    try {\r\n        assertEquals(\"number flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n        fail(\"Date is not supported yet, should have failed\");\r\n    } catch (UnsupportedOperationException uoe) {\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,34 @@\n public void testSimplePattern() throws Exception {\r\n-    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\" };\r\n+    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/m*z#\");\r\n+    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\", \"-z\", \"Thu Jun 06 17:48:57 EDT 2002\", \"-m\", \"test*\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n     assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n+    try {\r\n+        assertEquals(\"files flag m\", new File[0], line.getOptionObject(\u0027m\u0027));\r\n+        fail(\"Multiple files are not supported yet, should have failed\");\r\n+    } catch (UnsupportedOperationException uoe) {\r\n+    }\r\n+    try {\r\n+        assertEquals(\"number flag z\", new Date(1023400137276L), line.getOptionObject(\u0027z\u0027));\r\n+        fail(\"Date is not supported yet, should have failed\");\r\n+    } catch (UnsupportedOperationException uoe) {\r\n+    }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "73b2b5bc1c8ba94cbf4fe95ed900b11fcc05ee7b": {
      "type": "Ybodychange",
      "commitMessage": "Replaced occurences of \u0027Jakarta\u0027\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680503 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 12:15 AM",
      "commitName": "73b2b5bc1c8ba94cbf4fe95ed900b11fcc05ee7b",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/25/08 7:23 PM",
      "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 3.2,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://commons.apache.org\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n     assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n     assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n     assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n-    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n+    assertEquals(\"url flag t\", new URL(\"http://commons.apache.org\"), line.getOptionObject(\u0027t\u0027));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": {
      "type": "Yformatchange",
      "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/25/08 7:23 PM",
      "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/22/08 12:23 PM",
      "commitNameOld": "f641323f4fed604953fdab54405a98eeaa2b1271",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 3.29,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "f641323f4fed604953fdab54405a98eeaa2b1271": {
      "type": "Ybodychange",
      "commitMessage": "Replaced fully qualified names with imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@678690 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/22/08 12:23 PM",
      "commitName": "f641323f4fed604953fdab54405a98eeaa2b1271",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/29/08 6:30 PM",
      "commitNameOld": "2490250f9b3044e4cd946f11b46694f943f5814d",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 53.74,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 34,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,24 +1,24 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n     CommandLineParser parser \u003d new PosixParser();\r\n     CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\"b\"));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n-    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n+    assertEquals(\"object flag b\", new Vector(), line.getOptionObject(\u0027b\u0027));\r\n     assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n     assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n-    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n-    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n+    assertEquals(\"file flag e\", new File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n+    assertEquals(\"class flag f\", Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n     assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n-    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n+    assertEquals(\"url flag t\", new URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "2490250f9b3044e4cd946f11b46694f943f5814d": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Removed the unused constructors, suite() and teardown() methods from the test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/29/08 6:30 PM",
      "commitName": "2490250f9b3044e4cd946f11b46694f943f5814d",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Removed the unused constructors, suite() and teardown() methods from the test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661358 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 6:30 PM",
          "commitName": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:01 AM",
          "commitNameOld": "79a1091bd0a2dba7decacd23beac8104f3b5a5cb",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 367.31,
          "commitsBetweenForRepo": 54,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n}",
          "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
          "functionStartLine": 29,
          "functionName": "testSimplePattern",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,30 +1,24 @@\n-public void testSimplePattern() {\r\n-    try {\r\n-        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-        CommandLineParser parser \u003d new PosixParser();\r\n-        CommandLine line \u003d parser.parse(options, args);\r\n-        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n-        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n-        assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n-        assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n-        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n-        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n-        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n-        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n-        assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n-        assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n-        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n-        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n-        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n-        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n-    } catch (ParseException exp) {\r\n-        fail(exp.getMessage());\r\n-    } catch (java.net.MalformedURLException exp) {\r\n-        fail(exp.getMessage());\r\n-    }\r\n+public void testSimplePattern() throws Exception {\r\n+    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n+    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+    CommandLineParser parser \u003d new PosixParser();\r\n+    CommandLine line \u003d parser.parse(options, args);\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n+    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n+    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n+    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n+    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Removed the unused constructors, suite() and teardown() methods from the test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661358 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/29/08 6:30 PM",
          "commitName": "2490250f9b3044e4cd946f11b46694f943f5814d",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:01 AM",
          "commitNameOld": "79a1091bd0a2dba7decacd23beac8104f3b5a5cb",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 367.31,
          "commitsBetweenForRepo": 54,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLineParser parser \u003d new PosixParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n}",
          "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
          "functionStartLine": 29,
          "functionName": "testSimplePattern",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,30 +1,24 @@\n-public void testSimplePattern() {\r\n-    try {\r\n-        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-        CommandLineParser parser \u003d new PosixParser();\r\n-        CommandLine line \u003d parser.parse(options, args);\r\n-        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n-        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n-        assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n-        assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n-        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n-        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n-        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n-        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n-        assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n-        assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n-        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n-        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n-        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n-        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n-    } catch (ParseException exp) {\r\n-        fail(exp.getMessage());\r\n-    } catch (java.net.MalformedURLException exp) {\r\n-        fail(exp.getMessage());\r\n-    }\r\n+public void testSimplePattern() throws Exception {\r\n+    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n+    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+    CommandLineParser parser \u003d new PosixParser();\r\n+    CommandLine line \u003d parser.parse(options, args);\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+    assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n+    assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n+    assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n+    assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n+    assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "3dc96b8c65512372b4ab3d2936ae8433f06cedbe": {
      "type": "Ybodychange",
      "commitMessage": "Minor source refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@542143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/07 10:58 AM",
      "commitName": "3dc96b8c65512372b4ab3d2936ae8433f06cedbe",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/28/07 10:54 AM",
      "commitNameOld": "d35f2fa7a06457469a617677eeb4c1dc21484006",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d new PosixParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n        assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n        assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n        assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 35,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,30 @@\n public void testSimplePattern() {\r\n     try {\r\n         Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n         String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n         CommandLineParser parser \u003d new PosixParser();\r\n         CommandLine line \u003d parser.parse(options, args);\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n-        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n-        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n-        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n-        assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n-        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n-        assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n+        assertTrue(\"boolean true flag c\", line.hasOption(\"c\"));\r\n+        assertFalse(\"boolean false flag d\", line.hasOption(\"d\"));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n-        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n         assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n-        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n+        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n+        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n+        assertTrue(\"boolean true flag c\", line.hasOption(\u0027c\u0027));\r\n+        assertFalse(\"boolean false flag d\", line.hasOption(\u0027d\u0027));\r\n+        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n+        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n+        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n     } catch (ParseException exp) {\r\n         fail(exp.getMessage());\r\n     } catch (java.net.MalformedURLException exp) {\r\n         fail(exp.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "d35f2fa7a06457469a617677eeb4c1dc21484006": {
      "type": "Ybodychange",
      "commitMessage": "Removing the Commons Lang dependency. This removes certain obscure number formats as being parseable by the PatternOptionBuilder, but I suspect they don\u0027t matter. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@542140 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/07 10:54 AM",
      "commitName": "d35f2fa7a06457469a617677eeb4c1dc21484006",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "4/23/04 2:00 AM",
      "commitNameOld": "8f95e4a724350f9f80429c2af1c3ac9bb2b2c2db",
      "commitAuthorOld": "Robert James Oxspring",
      "daysBetweenCommits": 1130.37,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d new PosixParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 45,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,30 @@\n public void testSimplePattern() {\r\n     try {\r\n         Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n         String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n         CommandLineParser parser \u003d new PosixParser();\r\n         CommandLine line \u003d parser.parse(options, args);\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n         assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n         assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n         assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n         assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n-        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n-        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n+        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\"n\"));\r\n+        assertEquals(\"number flag n\", new Double(4.5), line.getOptionObject(\u0027n\u0027));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n     } catch (ParseException exp) {\r\n         fail(exp.getMessage());\r\n     } catch (java.net.MalformedURLException exp) {\r\n         fail(exp.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c08f73835beda155421d78ee4f96d9e11c501159": {
      "type": "Ybodychange",
      "commitMessage": "changed my email add, removed CommandLineParserFactory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129816 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/20/02 1:59 AM",
      "commitName": "c08f73835beda155421d78ee4f96d9e11c501159",
      "commitAuthor": "John Keyes",
      "commitDateOld": "8/5/02 2:04 AM",
      "commitNameOld": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 46.0,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d new PosixParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,30 +1,30 @@\n public void testSimplePattern() {\r\n     try {\r\n         Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n         String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+        CommandLineParser parser \u003d new PosixParser();\r\n         CommandLine line \u003d parser.parse(options, args);\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n         assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n         assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n         assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n         assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n         assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n         assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n     } catch (ParseException exp) {\r\n         fail(exp.getMessage());\r\n     } catch (java.net.MalformedURLException exp) {\r\n         fail(exp.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1060ee73965dc30d92afbad80525bd4cdabe9153": {
      "type": "Ybodychange",
      "commitMessage": "bug 11458 fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "8/5/02 2:04 AM",
      "commitName": "1060ee73965dc30d92afbad80525bd4cdabe9153",
      "commitAuthor": "John Keyes",
      "commitDateOld": "7/31/02 2:06 AM",
      "commitNameOld": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 5.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,21 +1,30 @@\n public void testSimplePattern() {\r\n     try {\r\n         Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n         String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n         CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n         CommandLine line \u003d parser.parse(options, args);\r\n         assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n         assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n         assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n         assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n+        assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n         assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n+        assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n         assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n         assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n         assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n+        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n         assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n     } catch (ParseException exp) {\r\n         fail(exp.getMessage());\r\n     } catch (java.net.MalformedURLException exp) {\r\n         fail(exp.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "integrated PatternBuilder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/02 2:06 AM",
      "commitName": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "integrated PatternBuilder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129792 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/31/02 2:06 AM",
          "commitName": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/5/02 1:32 AM",
          "commitNameOld": "66d0ae6216730abd8bd736e210be73229c8e807b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 26.02,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
          "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
          "functionStartLine": 42,
          "functionName": "testSimplePattern",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,21 @@\n-public void testSimplePattern() throws Exception {\r\n-    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-    CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n-    CommandLine line \u003d parser.parse(options, args);\r\n-    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n-    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n-    assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n-    assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n-    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n-    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n-    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+public void testSimplePattern() {\r\n+    try {\r\n+        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n+        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+        CommandLine line \u003d parser.parse(options, args);\r\n+        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n+        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n+        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n+        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    } catch (ParseException exp) {\r\n+        fail(exp.getMessage());\r\n+    } catch (java.net.MalformedURLException exp) {\r\n+        fail(exp.getMessage());\r\n+    }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "integrated PatternBuilder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129792 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/31/02 2:06 AM",
          "commitName": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/5/02 1:32 AM",
          "commitNameOld": "66d0ae6216730abd8bd736e210be73229c8e807b",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 26.02,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testSimplePattern() {\r\n    try {\r\n        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n        CommandLine line \u003d parser.parse(options, args);\r\n        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n    } catch (ParseException exp) {\r\n        fail(exp.getMessage());\r\n    } catch (java.net.MalformedURLException exp) {\r\n        fail(exp.getMessage());\r\n    }\r\n}",
          "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
          "functionStartLine": 42,
          "functionName": "testSimplePattern",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,15 +1,21 @@\n-public void testSimplePattern() throws Exception {\r\n-    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n-    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-    CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n-    CommandLine line \u003d parser.parse(options, args);\r\n-    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n-    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n-    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n-    assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n-    assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n-    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n-    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n-    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n-    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+public void testSimplePattern() {\r\n+    try {\r\n+        Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n+        String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+        CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+        CommandLine line \u003d parser.parse(options, args);\r\n+        assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+        assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+        assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+        assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n+        assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n+        assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+        assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+        assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n+        assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n+    } catch (ParseException exp) {\r\n+        fail(exp.getMessage());\r\n+    } catch (java.net.MalformedURLException exp) {\r\n+        fail(exp.getMessage());\r\n+    }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "66d0ae6216730abd8bd736e210be73229c8e807b": {
      "type": "Ybodychange",
      "commitMessage": "implemented the parser factory, added new unit tests for the GnuParser, a good deal of refactoring for both parsers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129778 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/5/02 1:32 AM",
      "commitName": "66d0ae6216730abd8bd736e210be73229c8e807b",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/17/02 2:00 AM",
      "commitNameOld": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n    CommandLine line \u003d parser.parse(options, args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n    assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n    assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,15 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n-    CommandLine line \u003d options.parse(args);\r\n+    CommandLineParser parser \u003d CommandLineParserFactory.newParser();\r\n+    CommandLine line \u003d parser.parse(options, args);\r\n     assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n     assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n     assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n     assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n     assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n     assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n     assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n     assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n     assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": {
      "type": "Ybodychange",
      "commitMessage": "configurable parser support added, PosixParser added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/02 2:00 AM",
      "commitName": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/10/02 9:01 PM",
      "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthorOld": "James Strachan",
      "daysBetweenCommits": 6.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLine line \u003d options.parse(args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n    assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n    assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,14 +1,14 @@\n public void testSimplePattern() throws Exception {\r\n     Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n     String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n     CommandLine line \u003d options.parse(args);\r\n-    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n-    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n-    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n-    assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n-    assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n-    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n-    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n-    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n-    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\"a\"));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\"a\"));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\"b\"));\r\n+    assertEquals(\"boolean true flag c\", true, line.hasOption(\"c\"));\r\n+    assertEquals(\"boolean false flag d\", false, line.hasOption(\"d\"));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\"e\"));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\"f\"));\r\n+    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\"n\"));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\"t\"));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,14 @@\n+public void testSimplePattern() throws Exception {\r\n+    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n+    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n+    CommandLine line \u003d options.parse(args);\r\n+    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n+    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n+    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n+    assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n+    assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n+    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n+    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n+    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n+    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testSimplePattern() throws Exception {\r\n    Options options \u003d PatternOptionBuilder.parsePattern(\"a:b@cde\u003ef+n%t/\");\r\n    String[] args \u003d new String[] { \"-c\", \"-a\", \"foo\", \"-b\", \"java.util.Vector\", \"-e\", \"build.xml\", \"-f\", \"java.util.Calendar\", \"-n\", \"4.5\", \"-t\", \"http://jakarta.apache.org/\" };\r\n    CommandLine line \u003d options.parse(args);\r\n    assertEquals(\"flag a\", \"foo\", line.getOptionValue(\u0027a\u0027));\r\n    assertEquals(\"string flag a\", \"foo\", line.getOptionObject(\u0027a\u0027));\r\n    assertEquals(\"object flag b\", new java.util.Vector(), line.getOptionObject(\u0027b\u0027));\r\n    assertEquals(\"boolean true flag c\", true, line.hasOption(\u0027c\u0027));\r\n    assertEquals(\"boolean false flag d\", false, line.hasOption(\u0027d\u0027));\r\n    assertEquals(\"file flag e\", new java.io.File(\"build.xml\"), line.getOptionObject(\u0027e\u0027));\r\n    assertEquals(\"class flag f\", java.util.Calendar.class, line.getOptionObject(\u0027f\u0027));\r\n    assertEquals(\"number flag n\", new Float(4.5), line.getOptionObject(\u0027n\u0027));\r\n    assertEquals(\"url flag t\", new java.net.URL(\"http://jakarta.apache.org/\"), line.getOptionObject(\u0027t\u0027));\r\n}",
      "path": "src/test/org/apache/commons/cli/PatternOptionBuilderTest.java",
      "functionStartLine": 42,
      "functionName": "testSimplePattern",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}