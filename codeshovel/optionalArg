{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "optionalArg",
  "functionId": "$optionalArg___optionalArg-boolean(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "",
  "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
  "functionStartLine": 203,
  "functionEndLine": 207,
  "numCommitsSeen": 124,
  "timeTaken": 199,
  "changeHistory": [
    "34278395b6115752774c3d16a00292591da2dde3",
    "f0d54de5fceedd46331870f22c57d159e784218b",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "df52eee396b1e8ce24fd1ec34752e1049618255a"
  ],
  "changeHistoryShort": {
    "34278395b6115752774c3d16a00292591da2dde3": "Ybodychange",
    "f0d54de5fceedd46331870f22c57d159e784218b": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ydocchange",
    "df52eee396b1e8ce24fd1ec34752e1049618255a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34278395b6115752774c3d16a00292591da2dde3": {
      "type": "Ybodychange",
      "commitMessage": "[CLI-317] NullPointerException thrown by CommandLineParser.parse()\n",
      "commitDate": "8/19/23 4:26 PM",
      "commitName": "34278395b6115752774c3d16a00292591da2dde3",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "8/16/23 2:16 PM",
      "commitNameOld": "f0d54de5fceedd46331870f22c57d159e784218b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 3.09,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder optionalArg(final boolean optionalArg) {\r\n    this.argCount \u003d optionalArg ? 1 : UNINITIALIZED;\r\n    this.optionalArg \u003d optionalArg;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 203,
      "functionName": "optionalArg",
      "functionAnnotation": "",
      "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "@@ -1,4 +1,5 @@\n public Builder optionalArg(final boolean optionalArg) {\r\n+    this.argCount \u003d optionalArg ? 1 : UNINITIALIZED;\r\n     this.optionalArg \u003d optionalArg;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "f0d54de5fceedd46331870f22c57d159e784218b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Better parameter names\n",
      "commitDate": "8/16/23 2:16 PM",
      "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder optionalArg(final boolean optionalArg) {\r\n    this.optionalArg \u003d optionalArg;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 203,
          "functionName": "optionalArg",
          "functionAnnotation": "",
          "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder optionalArg(final boolean isOptional) {\r\n-    this.optionalArg \u003d isOptional;\r\n+public Builder optionalArg(final boolean optionalArg) {\r\n+    this.optionalArg \u003d optionalArg;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[isOptional-boolean(modifiers-final)]",
            "newValue": "[optionalArg-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder optionalArg(final boolean optionalArg) {\r\n    this.optionalArg \u003d optionalArg;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 203,
          "functionName": "optionalArg",
          "functionAnnotation": "",
          "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder optionalArg(final boolean isOptional) {\r\n-    this.optionalArg \u003d isOptional;\r\n+public Builder optionalArg(final boolean optionalArg) {\r\n+    this.optionalArg \u003d optionalArg;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder optionalArg(final boolean optionalArg) {\r\n    this.optionalArg \u003d optionalArg;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 203,
          "functionName": "optionalArg",
          "functionAnnotation": "",
          "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder optionalArg(final boolean isOptional) {\r\n-    this.optionalArg \u003d isOptional;\r\n+public Builder optionalArg(final boolean optionalArg) {\r\n+    this.optionalArg \u003d optionalArg;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Sets whether the Option can have an optional argument.\r\n\r\n@param isOptional specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
            "newValue": "Sets whether the Option can have an optional argument.\r\n\r\n@param optionalArg specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n"
          }
        }
      ]
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ydocchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "1/17/21 5:38 PM",
      "commitNameOld": "e20023d55962858ec6cd3d786686a00192959a9b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 258.23,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder optionalArg(final boolean isOptional) {\r\n    this.optionalArg \u003d isOptional;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 774,
      "functionName": "optionalArg",
      "functionAnnotation": "",
      "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param isOptional specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets whether the Option can have an optional argument.\r\n\r\n@param isOptional specifies whether the Option can have\r\nan optional argument.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "Sets whether the Option can have an optional argument.\r\n\r\n@param isOptional specifies whether the Option can have an optional argument.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "df52eee396b1e8ce24fd1ec34752e1049618255a": {
      "type": "Yintroduced",
      "commitMessage": "[CLI-224] Added new fluent builder API to Option, deprecating OptionBuilder, adapting the PatternOptionBuilder to use the new API, thanks to Duncan Jones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1444720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/11/13 12:14 PM",
      "commitName": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthor": "Thomas Neidhart",
      "diff": "@@ -0,0 +1,4 @@\n+public Builder optionalArg(final boolean isOptional) {\r\n+    this.optionalArg \u003d isOptional;\r\n+    return this;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Builder optionalArg(final boolean isOptional) {\r\n    this.optionalArg \u003d isOptional;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 852,
      "functionName": "optionalArg",
      "functionAnnotation": "",
      "functionDoc": "Sets whether the Option can have an optional argument.\r\n\r\n@param isOptional specifies whether the Option can have\r\nan optional argument.\r\n@return this builder, to allow method chaining\r\n"
    }
  }
}