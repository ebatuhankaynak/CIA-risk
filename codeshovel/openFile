{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeHandler.java",
  "functionName": "openFile",
  "functionId": "openFile___str-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/TypeHandler.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the opened FileInputStream represented by {@code str}.\r\n\r\n@param str the file location\r\n@return The file input stream represented by {@code str}.\r\n@throws ParseException if the file is not exist or not readable\r\n",
  "functionStartLine": 201,
  "functionEndLine": 207,
  "numCommitsSeen": 47,
  "timeTaken": 163,
  "changeHistory": [
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "1a11c86d750788d512a4c6e5025127e438185fcf",
    "bf19d994c6414de253734f69a769e419758e43b0",
    "4f9c95bcb246b64f7f6756cc3840d2061a262fe7"
  ],
  "changeHistoryShort": {
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "1a11c86d750788d512a4c6e5025127e438185fcf": "Ybodychange",
    "bf19d994c6414de253734f69a769e419758e43b0": "Yparametermetachange",
    "4f9c95bcb246b64f7f6756cc3840d2061a262fe7": "Ydocchange"
  },
  "changeHistoryDetails": {
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/21 11:07 PM",
      "commitNameOld": "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public static FileInputStream openFile(final String str) throws ParseException {\r\n    try {\r\n        return new FileInputStream(str);\r\n    } catch (final FileNotFoundException e) {\r\n        throw new ParseException(\"Unable to find file: \" + str);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 201,
      "functionName": "openFile",
      "functionAnnotation": "",
      "functionDoc": "Returns the opened FileInputStream represented by {@code str}.\r\n\r\n@param str the file location\r\n@return The file input stream represented by {@code str}.\r\n@throws ParseException if the file is not exist or not readable\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n",
        "newValue": "Returns the opened FileInputStream represented by {@code str}.\r\n\r\n@param str the file location\r\n@return The file input stream represented by {@code str}.\r\n@throws ParseException if the file is not exist or not readable\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "3/5/21 4:39 AM",
      "commitNameOld": "98d06d37bc7058bbfb2704c9620669c66e279f4a",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 211.77,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public static FileInputStream openFile(final String str) throws ParseException {\r\n    try {\r\n        return new FileInputStream(str);\r\n    } catch (final FileNotFoundException e) {\r\n        throw new ParseException(\"Unable to find file: \" + str);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 186,
      "functionName": "openFile",
      "functionAnnotation": "",
      "functionDoc": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "1a11c86d750788d512a4c6e5025127e438185fcf": {
      "type": "Ybodychange",
      "commitMessage": "Use final.\n",
      "commitDate": "11/21/20 6:07 AM",
      "commitName": "1a11c86d750788d512a4c6e5025127e438185fcf",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "5/24/20 6:49 PM",
      "commitNameOld": "bf19d994c6414de253734f69a769e419758e43b0",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 180.47,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "actualSource": "public static FileInputStream openFile(final String str) throws ParseException {\r\n    try {\r\n        return new FileInputStream(str);\r\n    } catch (final FileNotFoundException e) {\r\n        throw new ParseException(\"Unable to find file: \" + str);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 234,
      "functionName": "openFile",
      "functionAnnotation": "",
      "functionDoc": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n",
      "diff": "@@ -1,7 +1,7 @@\n public static FileInputStream openFile(final String str) throws ParseException {\r\n     try {\r\n         return new FileInputStream(str);\r\n-    } catch (FileNotFoundException e) {\r\n+    } catch (final FileNotFoundException e) {\r\n         throw new ParseException(\"Unable to find file: \" + str);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bf19d994c6414de253734f69a769e419758e43b0": {
      "type": "Yparametermetachange",
      "commitMessage": "Use final.\n",
      "commitDate": "5/24/20 6:49 PM",
      "commitName": "bf19d994c6414de253734f69a769e419758e43b0",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 157.81,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static FileInputStream openFile(final String str) throws ParseException {\r\n    try {\r\n        return new FileInputStream(str);\r\n    } catch (FileNotFoundException e) {\r\n        throw new ParseException(\"Unable to find file: \" + str);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 234,
      "functionName": "openFile",
      "functionAnnotation": "",
      "functionDoc": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n",
      "diff": "@@ -1,7 +1,7 @@\n-public static FileInputStream openFile(String str) throws ParseException {\r\n+public static FileInputStream openFile(final String str) throws ParseException {\r\n     try {\r\n         return new FileInputStream(str);\r\n     } catch (FileNotFoundException e) {\r\n         throw new ParseException(\"Unable to find file: \" + str);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[str-String]",
        "newValue": "[str-String(modifiers-final)]"
      }
    },
    "4f9c95bcb246b64f7f6756cc3840d2061a262fe7": {
      "type": "Ydocchange",
      "commitMessage": "Update TypeHandler.java\n\nAdd throws missing doc line from openFile function",
      "commitDate": "6/13/17 12:34 AM",
      "commitName": "4f9c95bcb246b64f7f6756cc3840d2061a262fe7",
      "commitAuthor": "Bela Schaum",
      "commitDateOld": "6/9/17 12:23 PM",
      "commitNameOld": "aea58f8677e55513ae281c49b91a3abce5ee7d1b",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.51,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static FileInputStream openFile(String str) throws ParseException {\r\n    try {\r\n        return new FileInputStream(str);\r\n    } catch (FileNotFoundException e) {\r\n        throw new ParseException(\"Unable to find file: \" + str);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 234,
      "functionName": "openFile",
      "functionAnnotation": "",
      "functionDoc": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n",
        "newValue": "Returns the opened FileInputStream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n\r\n@param str the file location\r\n@return The file input stream represented by \u003ccode\u003estr\u003c/code\u003e.\r\n@throws ParseException if the file is not exist or not readable\r\n"
      }
    }
  }
}