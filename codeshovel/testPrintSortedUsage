{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HelpFormatterTest.java",
  "functionName": "testPrintSortedUsage",
  "functionId": "testPrintSortedUsage",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 465,
  "functionEndLine": 478,
  "numCommitsSeen": 40,
  "timeTaken": 189,
  "changeHistory": [
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "a3e2d6b14257122a891d84459f927e2417cc8c88",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "a955324468d45eb845e05107d5b0013285c3bc0a",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "1c6da3c7f3f6005f3de725807ba9b0396ef20be9",
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac"
  ],
  "changeHistoryShort": {
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "a3e2d6b14257122a891d84459f927e2417cc8c88": "Ybodychange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Ybodychange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Ymultichange(Ybodychange,Yannotationchange)",
    "a955324468d45eb845e05107d5b0013285c3bc0a": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "1c6da3c7f3f6005f3de725807ba9b0396ef20be9": "Ybodychange",
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8": {
      "type": "Ybodychange",
      "commitMessage": "Use better JRE API\n",
      "commitDate": "9/16/23 12:45 AM",
      "commitName": "53972781993e79eb48f17cb67ac463ba7f1bc4c8",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/23/21 3:53 PM",
      "commitNameOld": "62b510f93283fee7225b56c95b6d017b8546367f",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 692.37,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    final Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator((opt1, opt2) -\u003e opt2.getKey().compareToIgnoreCase(opt1.getKey()));\r\n    final StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 465,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,12 @@\n @Test\r\n public void testPrintSortedUsage() {\r\n     final Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n-    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n-\r\n-        @Override\r\n-        public int compare(final Option opt1, final Option opt2) {\r\n-            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n-        }\r\n-    });\r\n+    helpFormatter.setOptionComparator((opt1, opt2) -\u003e opt2.getKey().compareToIgnoreCase(opt1.getKey()));\r\n     final StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    final Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        @Override\r\n        public int compare(final Option opt1, final Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    final StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 257,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "a3e2d6b14257122a891d84459f927e2417cc8c88": {
      "type": "Ybodychange",
      "commitMessage": "Add missing @Deprecated and @Override.\n",
      "commitDate": "5/24/20 6:46 PM",
      "commitName": "a3e2d6b14257122a891d84459f927e2417cc8c88",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 157.8,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    final Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        @Override\r\n        public int compare(final Option opt1, final Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    final StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 280,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,18 @@\n @Test\r\n public void testPrintSortedUsage() {\r\n     final Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n+        @Override\r\n         public int compare(final Option opt1, final Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n     final StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    final Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        public int compare(final Option opt1, final Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    final StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 280,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n @Test\r\n public void testPrintSortedUsage() {\r\n     final Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n-        public int compare(Option opt1, Option opt2) {\r\n+        public int compare(final Option opt1, final Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n     final StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/28/15 8:06 PM",
      "commitNameOld": "ec363cc653aaaa2c10b19e0ae880ede6084dd420",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 799.94,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    final Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        public int compare(Option opt1, Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    final StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 280,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,17 +1,17 @@\n @Test\r\n public void testPrintSortedUsage() {\r\n-    Options opts \u003d new Options();\r\n+    final Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n-    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n+    final HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n         public int compare(Option opt1, Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n-    StringWriter out \u003d new StringWriter();\r\n+    final StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Ymultichange(Ybodychange,Yannotationchange)",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/6/13 12:57 PM",
          "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/29/13 6:58 PM",
          "commitNameOld": "6ba1a28a39f42d411689d71bc11932c820cb4265",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 7.75,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        public int compare(Option opt1, Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
          "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
          "functionStartLine": 281,
          "functionName": "testPrintSortedUsage",
          "functionAnnotation": "@Test",
          "functionDoc": "",
          "diff": "@@ -1,16 +1,17 @@\n+@Test\r\n public void testPrintSortedUsage() {\r\n     Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n         public int compare(Option opt1, Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n     StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Yannotationchange",
          "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "2/6/13 12:57 PM",
          "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
          "commitAuthor": "Thomas Neidhart",
          "commitDateOld": "1/29/13 6:58 PM",
          "commitNameOld": "6ba1a28a39f42d411689d71bc11932c820cb4265",
          "commitAuthorOld": "Thomas Neidhart",
          "daysBetweenCommits": 7.75,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "actualSource": "@Test\r\npublic void testPrintSortedUsage() {\r\n    Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        public int compare(Option opt1, Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
          "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
          "functionStartLine": 281,
          "functionName": "testPrintSortedUsage",
          "functionAnnotation": "@Test",
          "functionDoc": "",
          "diff": "@@ -1,16 +1,17 @@\n+@Test\r\n public void testPrintSortedUsage() {\r\n     Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n         public int compare(Option opt1, Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n     StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "",
            "newValue": "@Test"
          }
        }
      ]
    },
    "a955324468d45eb845e05107d5b0013285c3bc0a": {
      "type": "Ybodychange",
      "commitMessage": "HelpFormatter now accepts a null comparator to preserve the declaration order of the options (CLI-212)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/13/11 12:17 AM",
      "commitName": "a955324468d45eb845e05107d5b0013285c3bc0a",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/21/10 7:40 PM",
      "commitNameOld": "483f811dfefdc6bee162481425f261d983f15e4a",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 265.19,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintSortedUsage() {\r\n    Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n\r\n        public int compare(Option opt1, Option opt2) {\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 264,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,18 +1,16 @@\n public void testPrintSortedUsage() {\r\n     Options opts \u003d new Options();\r\n     opts.addOption(new Option(\"a\", \"first\"));\r\n     opts.addOption(new Option(\"b\", \"second\"));\r\n     opts.addOption(new Option(\"c\", \"third\"));\r\n     HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n-    helpFormatter.setOptionComparator(new Comparator() {\r\n+    helpFormatter.setOptionComparator(new Comparator\u003cOption\u003e() {\r\n \r\n-        public int compare(Object o1, Object o2) {\r\n-            Option opt1 \u003d (Option) o1;\r\n-            Option opt2 \u003d (Option) o2;\r\n+        public int compare(Option opt1, Option opt2) {\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n     StringWriter out \u003d new StringWriter();\r\n     helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n     assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintSortedUsage() {\r\n    Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator() {\r\n\r\n        public int compare(Object o1, Object o2) {\r\n            Option opt1 \u003d (Option) o1;\r\n            Option opt2 \u003d (Option) o2;\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 213,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
      }
    },
    "1c6da3c7f3f6005f3de725807ba9b0396ef20be9": {
      "type": "Ybodychange",
      "commitMessage": "Full test coverage for HelpFormatter.setOptionComparator()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661641 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/08 1:53 PM",
      "commitName": "1c6da3c7f3f6005f3de725807ba9b0396ef20be9",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08 1:30 PM",
      "commitNameOld": "b736fcf7c59cfee084e65d06e85cb2c4caf2e9d1",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintSortedUsage() {\r\n    Options opts \u003d new Options();\r\n    opts.addOption(new Option(\"a\", \"first\"));\r\n    opts.addOption(new Option(\"b\", \"second\"));\r\n    opts.addOption(new Option(\"c\", \"third\"));\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator() {\r\n\r\n        public int compare(Object o1, Object o2) {\r\n            Option opt1 \u003d (Option) o1;\r\n            Option opt2 \u003d (Option) o2;\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    StringWriter out \u003d new StringWriter();\r\n    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 201,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,23 +1,18 @@\n public void testPrintSortedUsage() {\r\n-    Option optionA \u003d new Option(\"a\", \"first\");\r\n-    Option optionB \u003d new Option(\"b\", \"second\");\r\n-    Option optionC \u003d new Option(\"c\", \"third\");\r\n     Options opts \u003d new Options();\r\n-    opts.addOption(optionA);\r\n-    opts.addOption(optionB);\r\n-    opts.addOption(optionC);\r\n+    opts.addOption(new Option(\"a\", \"first\"));\r\n+    opts.addOption(new Option(\"b\", \"second\"));\r\n+    opts.addOption(new Option(\"c\", \"third\"));\r\n     HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n     helpFormatter.setOptionComparator(new Comparator() {\r\n \r\n         public int compare(Object o1, Object o2) {\r\n             Option opt1 \u003d (Option) o1;\r\n             Option opt2 \u003d (Option) o2;\r\n             return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n         }\r\n     });\r\n-    ByteArrayOutputStream bytesOut \u003d new ByteArrayOutputStream();\r\n-    PrintWriter printWriter \u003d new PrintWriter(bytesOut);\r\n-    helpFormatter.printUsage(printWriter, 80, \"app\", opts);\r\n-    printWriter.close();\r\n-    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, bytesOut.toString());\r\n+    StringWriter out \u003d new StringWriter();\r\n+    helpFormatter.printUsage(new PrintWriter(out), 80, \"app\", opts);\r\n+    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac": {
      "type": "Yintroduced",
      "commitMessage": "Making the OptionComparator modifiable so people can change the order in which arguments are printed by the HelpFormatter - as requested in CLI-155\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@655735 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/13/08 7:54 AM",
      "commitName": "df8f8e160c5fc9b955c627c4b65c7ba67088b7ac",
      "commitAuthor": "Henri Yandell",
      "diff": "@@ -0,0 +1,23 @@\n+public void testPrintSortedUsage() {\r\n+    Option optionA \u003d new Option(\"a\", \"first\");\r\n+    Option optionB \u003d new Option(\"b\", \"second\");\r\n+    Option optionC \u003d new Option(\"c\", \"third\");\r\n+    Options opts \u003d new Options();\r\n+    opts.addOption(optionA);\r\n+    opts.addOption(optionB);\r\n+    opts.addOption(optionC);\r\n+    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n+    helpFormatter.setOptionComparator(new Comparator() {\r\n+\r\n+        public int compare(Object o1, Object o2) {\r\n+            Option opt1 \u003d (Option) o1;\r\n+            Option opt2 \u003d (Option) o2;\r\n+            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n+        }\r\n+    });\r\n+    ByteArrayOutputStream bytesOut \u003d new ByteArrayOutputStream();\r\n+    PrintWriter printWriter \u003d new PrintWriter(bytesOut);\r\n+    helpFormatter.printUsage(printWriter, 80, \"app\", opts);\r\n+    printWriter.close();\r\n+    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, bytesOut.toString());\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testPrintSortedUsage() {\r\n    Option optionA \u003d new Option(\"a\", \"first\");\r\n    Option optionB \u003d new Option(\"b\", \"second\");\r\n    Option optionC \u003d new Option(\"c\", \"third\");\r\n    Options opts \u003d new Options();\r\n    opts.addOption(optionA);\r\n    opts.addOption(optionB);\r\n    opts.addOption(optionC);\r\n    HelpFormatter helpFormatter \u003d new HelpFormatter();\r\n    helpFormatter.setOptionComparator(new Comparator() {\r\n\r\n        public int compare(Object o1, Object o2) {\r\n            Option opt1 \u003d (Option) o1;\r\n            Option opt2 \u003d (Option) o2;\r\n            return opt2.getKey().compareToIgnoreCase(opt1.getKey());\r\n        }\r\n    });\r\n    ByteArrayOutputStream bytesOut \u003d new ByteArrayOutputStream();\r\n    PrintWriter printWriter \u003d new PrintWriter(bytesOut);\r\n    helpFormatter.printUsage(printWriter, 80, \"app\", opts);\r\n    printWriter.close();\r\n    assertEquals(\"usage: app [-c] [-b] [-a]\" + EOL, bytesOut.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 215,
      "functionName": "testPrintSortedUsage",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}