{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeHandler.java",
  "functionName": "createNumber",
  "functionId": "createNumber___str-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/TypeHandler.java",
  "functionAnnotation": "",
  "functionDoc": "Create a number from a String. If a \u0027.\u0027 is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n",
  "functionStartLine": 92,
  "functionEndLine": 101,
  "numCommitsSeen": 51,
  "timeTaken": 449,
  "changeHistory": [
    "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7",
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "206de8c8edac008d279903696bba7c3799bda45b",
    "b106dee5f2a22f28c56073aad8afb28efe031190",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
    "363f8abe502848af3b844936f9e2d5181084c0b0",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
    "d35f2fa7a06457469a617677eeb4c1dc21484006",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "70a7b5fe868e872348374741cc27d2d453fb49bd",
    "991e627d88b40d246f0fe29367994cbec0c1d3ff",
    "7c571fe33b6f07a0529f515819d54700227342c2",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7": "Ydocchange",
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ymultichange(Ydocchange,Yformatchange)",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "206de8c8edac008d279903696bba7c3799bda45b": "Ybodychange",
    "b106dee5f2a22f28c56073aad8afb28efe031190": "Ydocchange",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7": "Ymultichange(Yexceptionschange,Ybodychange)",
    "363f8abe502848af3b844936f9e2d5181084c0b0": "Ybodychange",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Ymultichange(Ydocchange,Yformatchange)",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": "Ymultichange(Ybodychange,Ydocchange)",
    "d35f2fa7a06457469a617677eeb4c1dc21484006": "Ymultichange(Ybodychange,Ydocchange)",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Yformatchange",
    "70a7b5fe868e872348374741cc27d2d453fb49bd": "Ybodychange",
    "991e627d88b40d246f0fe29367994cbec0c1d3ff": "Ybodychange",
    "7c571fe33b6f07a0529f515819d54700227342c2": "Ybodychange",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": "Ydocchange",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc\n",
      "commitDate": "10/19/23 2:26 PM",
      "commitName": "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/23 11:23 PM",
      "commitNameOld": "31e87cb10fed5ae7287b4b2d10228fe41d662498",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 16.63,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(final String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 92,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a \u0027.\u0027 is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n",
        "newValue": "Create a number from a String. If a \u0027.\u0027 is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n"
      }
    },
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/21 11:07 PM",
      "commitNameOld": "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(final String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 92,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
        "newValue": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by {@code str}\r\n@throws ParseException if {@code str} is not a number\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "3/5/21 4:39 AM",
          "commitNameOld": "98d06d37bc7058bbfb2704c9620669c66e279f4a",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 211.77,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(final String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 115,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
            "newValue": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
          "commitDate": "10/2/21 11:04 PM",
          "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "3/5/21 4:39 AM",
          "commitNameOld": "98d06d37bc7058bbfb2704c9620669c66e279f4a",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 211.77,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(final String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 115,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a Double, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(final String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 144,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
      "diff": "@@ -1,10 +1,10 @@\n-public static Number createNumber(String str) throws ParseException {\r\n+public static Number createNumber(final String str) throws ParseException {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n         }\r\n         return Long.valueOf(str);\r\n     } catch (final NumberFormatException e) {\r\n         throw new ParseException(e.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[str-String]",
        "newValue": "[str-String(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/3/15 8:10 PM",
      "commitNameOld": "206de8c8edac008d279903696bba7c3799bda45b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 763.98,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (final NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 144,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
      "diff": "@@ -1,10 +1,10 @@\n public static Number createNumber(String str) throws ParseException {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n         }\r\n         return Long.valueOf(str);\r\n-    } catch (NumberFormatException e) {\r\n+    } catch (final NumberFormatException e) {\r\n         throw new ParseException(e.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "206de8c8edac008d279903696bba7c3799bda45b": {
      "type": "Ybodychange",
      "commitMessage": "Statement unnecessarily nested within else clause.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1677452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/3/15 8:10 PM",
      "commitName": "206de8c8edac008d279903696bba7c3799bda45b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2/6/13 8:12 PM",
      "commitNameOld": "08a1eb7875d24830e37a969e9963ccc365586ca1",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 815.96,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        }\r\n        return Long.valueOf(str);\r\n    } catch (NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 144,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
      "diff": "@@ -1,11 +1,10 @@\n public static Number createNumber(String str) throws ParseException {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n-        } else {\r\n-            return Long.valueOf(str);\r\n         }\r\n+        return Long.valueOf(str);\r\n     } catch (NumberFormatException e) {\r\n         throw new ParseException(e.getMessage());\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b106dee5f2a22f28c56073aad8afb28efe031190": {
      "type": "Ydocchange",
      "commitMessage": "Document and cleanup throws clauses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/29/13 6:18 PM",
      "commitName": "b106dee5f2a22f28c56073aad8afb28efe031190",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/28/13 12:00 AM",
      "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1.76,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 144,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
        "newValue": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e\r\n@throws ParseException if \u003ccode\u003estr\u003c/code\u003e is not a number\r\n"
      }
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 146,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/TypeHandler.java",
        "newPath": "src/main/java/org/apache/commons/cli/TypeHandler.java"
      }
    },
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/09 10:23 AM",
      "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/09 10:23 AM",
          "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "1/14/09 7:56 AM",
          "commitNameOld": "e79254e91509806d466364b27756f9fb08b02af1",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 3.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 149,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,12 +1,11 @@\n-public static Number createNumber(String str) {\r\n+public static Number createNumber(String str) throws ParseException {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n         } else {\r\n             return Long.valueOf(str);\r\n         }\r\n     } catch (NumberFormatException e) {\r\n-        System.err.println(e.getMessage());\r\n+        throw new ParseException(e.getMessage());\r\n     }\r\n-    return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/09 10:23 AM",
          "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "1/14/09 7:56 AM",
          "commitNameOld": "e79254e91509806d466364b27756f9fb08b02af1",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 3.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) throws ParseException {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        throw new ParseException(e.getMessage());\r\n    }\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 149,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,12 +1,11 @@\n-public static Number createNumber(String str) {\r\n+public static Number createNumber(String str) throws ParseException {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n         } else {\r\n             return Long.valueOf(str);\r\n         }\r\n     } catch (NumberFormatException e) {\r\n-        System.err.println(e.getMessage());\r\n+        throw new ParseException(e.getMessage());\r\n     }\r\n-    return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "363f8abe502848af3b844936f9e2d5181084c0b0": {
      "type": "Ybodychange",
      "commitMessage": "Slightly improved error message for classes not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695236 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/14/08 6:29 PM",
      "commitName": "363f8abe502848af3b844936f9e2d5181084c0b0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/29/08 11:13 AM",
      "commitNameOld": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 47.3,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException e) {\r\n        System.err.println(e.getMessage());\r\n    }\r\n    return null;\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 149,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "@@ -1,12 +1,12 @@\n public static Number createNumber(String str) {\r\n     try {\r\n         if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n             return Double.valueOf(str);\r\n         } else {\r\n             return Long.valueOf(str);\r\n         }\r\n-    } catch (NumberFormatException nfe) {\r\n-        System.err.println(nfe.getMessage());\r\n+    } catch (NumberFormatException e) {\r\n+        System.err.println(e.getMessage());\r\n     }\r\n     return null;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 11:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 7:23 PM",
          "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.66,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 149,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Create a number from a String. If a . is present, it creates a \r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
            "newValue": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 7:23 PM",
          "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.66,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 149,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a\r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/25/08 7:23 PM",
      "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:32 AM",
          "commitNameOld": "b599e124a373de091bb6e5b0d771505efccc444d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 424.33,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 148,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a \r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,14 +1,12 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        if (str !\u003d null) {\r\n-            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n-                return Double.valueOf(str);\r\n-            } else {\r\n-                return Long.valueOf(str);\r\n-            }\r\n+        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n+            return Double.valueOf(str);\r\n+        } else {\r\n+            return Long.valueOf(str);\r\n         }\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n     }\r\n     return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:32 AM",
          "commitNameOld": "b599e124a373de091bb6e5b0d771505efccc444d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 424.33,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n            return Double.valueOf(str);\r\n        } else {\r\n            return Long.valueOf(str);\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 148,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "Create a number from a String. If a . is present, it creates a \r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,14 +1,12 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        if (str !\u003d null) {\r\n-            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n-                return Double.valueOf(str);\r\n-            } else {\r\n-                return Long.valueOf(str);\r\n-            }\r\n+        if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n+            return Double.valueOf(str);\r\n+        } else {\r\n+            return Long.valueOf(str);\r\n         }\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n     }\r\n     return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eCreate a number from a String. If a . is present, it creates a \r\n   Double, otherwise a Long. \u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
            "newValue": "Create a number from a String. If a . is present, it creates a \r\nDouble, otherwise a Long.\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n"
          }
        }
      ]
    },
    "d35f2fa7a06457469a617677eeb4c1dc21484006": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Removing the Commons Lang dependency. This removes certain obscure number formats as being parseable by the PatternOptionBuilder, but I suspect they don\u0027t matter. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@542140 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/28/07 10:54 AM",
      "commitName": "d35f2fa7a06457469a617677eeb4c1dc21484006",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Removing the Commons Lang dependency. This removes certain obscure number formats as being parseable by the PatternOptionBuilder, but I suspect they don\u0027t matter. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@542140 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/28/07 10:54 AM",
          "commitName": "d35f2fa7a06457469a617677eeb4c1dc21484006",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "9/3/05 4:43 AM",
          "commitNameOld": "18cf7990899da4d0e5c4c1ec311a952420b54dc1",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 632.26,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str !\u003d null) {\r\n            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n                return Double.valueOf(str);\r\n            } else {\r\n                return Long.valueOf(str);\r\n            }\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 157,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate a number from a String. If a . is present, it creates a \r\n   Double, otherwise a Long. \u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,8 +1,14 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        return NumberUtils.createNumber(str);\r\n+        if (str !\u003d null) {\r\n+            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n+                return Double.valueOf(str);\r\n+            } else {\r\n+                return Long.valueOf(str);\r\n+            }\r\n+        }\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n-        return null;\r\n     }\r\n+    return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Removing the Commons Lang dependency. This removes certain obscure number formats as being parseable by the PatternOptionBuilder, but I suspect they don\u0027t matter. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@542140 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/28/07 10:54 AM",
          "commitName": "d35f2fa7a06457469a617677eeb4c1dc21484006",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "9/3/05 4:43 AM",
          "commitNameOld": "18cf7990899da4d0e5c4c1ec311a952420b54dc1",
          "commitAuthorOld": "John Keyes",
          "daysBetweenCommits": 632.26,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        if (str !\u003d null) {\r\n            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n                return Double.valueOf(str);\r\n            } else {\r\n                return Long.valueOf(str);\r\n            }\r\n        }\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n    }\r\n    return null;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 157,
          "functionName": "createNumber",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate a number from a String. If a . is present, it creates a \r\n   Double, otherwise a Long. \u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
          "diff": "@@ -1,8 +1,14 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        return NumberUtils.createNumber(str);\r\n+        if (str !\u003d null) {\r\n+            if (str.indexOf(\u0027.\u0027) !\u003d -1) {\r\n+                return Double.valueOf(str);\r\n+            } else {\r\n+                return Long.valueOf(str);\r\n+            }\r\n+        }\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n-        return null;\r\n     }\r\n+    return null;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
            "newValue": "\u003cp\u003eCreate a number from a String. If a . is present, it creates a \r\n   Double, otherwise a Long. \u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n"
          }
        }
      ]
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Yformatchange",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/02 1:47 AM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "commitDateOld": "7/26/02 5:12 PM",
      "commitNameOld": "70a7b5fe868e872348374741cc27d2d453fb49bd",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 136.4,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return NumberUtils.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 203,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "70a7b5fe868e872348374741cc27d2d453fb49bd": {
      "type": "Ybodychange",
      "commitMessage": "Brought this file uptodate with latest beta release of Lang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/26/02 5:12 PM",
      "commitName": "70a7b5fe868e872348374741cc27d2d453fb49bd",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/23/02 6:05 AM",
      "commitNameOld": "991e627d88b40d246f0fe29367994cbec0c1d3ff",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 3.46,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return NumberUtils.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 174,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "@@ -1,8 +1,8 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        return Numbers.createNumber(str);\r\n+        return NumberUtils.createNumber(str);\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n         return null;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "991e627d88b40d246f0fe29367994cbec0c1d3ff": {
      "type": "Ybodychange",
      "commitMessage": "Moved back to using Commons.lang.Numbers and not NumberUtils. CLI depends on\nthe Maven repository and this will not be receiving the NumberUtils class for\na short while.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129786 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/23/02 6:05 AM",
      "commitName": "991e627d88b40d246f0fe29367994cbec0c1d3ff",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/16/02 5:47 PM",
      "commitNameOld": "7c571fe33b6f07a0529f515819d54700227342c2",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 6.51,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return Numbers.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 174,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "@@ -1,8 +1,8 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        return NumberUtils.createNumber(str);\r\n+        return Numbers.createNumber(str);\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n         return null;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7c571fe33b6f07a0529f515819d54700227342c2": {
      "type": "Ybodychange",
      "commitMessage": "Changed Numbers to NumberUtils.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129784 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/16/02 5:47 PM",
      "commitName": "7c571fe33b6f07a0529f515819d54700227342c2",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "7/10/02 2:12 AM",
      "commitNameOld": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 6.65,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return NumberUtils.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 174,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "@@ -1,8 +1,8 @@\n public static Number createNumber(String str) {\r\n     try {\r\n-        return Numbers.createNumber(str);\r\n+        return NumberUtils.createNumber(str);\r\n     } catch (NumberFormatException nfe) {\r\n         System.err.println(nfe.getMessage());\r\n         return null;\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": {
      "type": "Ydocchange",
      "commitMessage": "javadoc and checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/10/02 2:12 AM",
      "commitName": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/10/02 9:01 PM",
      "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthorOld": "James Strachan",
      "daysBetweenCommits": 29.22,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return Numbers.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 174,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create a number from a String.\r\n",
        "newValue": "\u003cp\u003eCreate a number from a String.\u003c/p\u003e\r\n\r\n@param str the value\r\n@return the number represented by \u003ccode\u003estr\u003c/code\u003e, if \u003ccode\u003estr\u003c/code\u003e\r\nis not a number, null is returned.\r\n"
      }
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,8 @@\n+public static Number createNumber(String str) {\r\n+    try {\r\n+        return Numbers.createNumber(str);\r\n+    } catch (NumberFormatException nfe) {\r\n+        System.err.println(nfe.getMessage());\r\n+        return null;\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Number createNumber(String str) {\r\n    try {\r\n        return Numbers.createNumber(str);\r\n    } catch (NumberFormatException nfe) {\r\n        System.err.println(nfe.getMessage());\r\n        return null;\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 149,
      "functionName": "createNumber",
      "functionAnnotation": "",
      "functionDoc": "Create a number from a String.\r\n"
    }
  }
}