{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeHandler.java",
  "functionName": "createObject",
  "functionId": "createObject___className-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/TypeHandler.java",
  "functionAnnotation": "",
  "functionDoc": "Create an Object from the class name and empty constructor.\r\n\r\n@param className the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
  "functionStartLine": 110,
  "functionEndLine": 124,
  "numCommitsSeen": 94,
  "timeTaken": 446,
  "changeHistory": [
    "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d",
    "31e87cb10fed5ae7287b4b2d10228fe41d662498",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "f78fb5a99093852b0121edf4768bfaf931fa19f9",
    "c67275279176504a6f5fc556cfa247e1df02a580",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "89333a791bf39cd4cc63e9279d9bfa5522800e9f",
    "b106dee5f2a22f28c56073aad8afb28efe031190",
    "3936da9d3fe37bcd20dd37216d82608e5917be07",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
    "363f8abe502848af3b844936f9e2d5181084c0b0",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "31e87cb10fed5ae7287b4b2d10228fe41d662498": "Ybodychange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "f78fb5a99093852b0121edf4768bfaf931fa19f9": "Ydocchange",
    "c67275279176504a6f5fc556cfa247e1df02a580": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "89333a791bf39cd4cc63e9279d9bfa5522800e9f": "Ybodychange",
    "b106dee5f2a22f28c56073aad8afb28efe031190": "Ydocchange",
    "3936da9d3fe37bcd20dd37216d82608e5917be07": "Ybodychange",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7": "Ymultichange(Yexceptionschange,Ybodychange)",
    "363f8abe502848af3b844936f9e2d5181084c0b0": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Ydocchange",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": "Ymultichange(Ybodychange,Ydocchange)",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ymultichange(Ydocchange,Yformatchange)",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": "Ymultichange(Ydocchange,Yformatchange)",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Javadoc\n",
      "commitDate": "10/19/23 2:26 PM",
      "commitName": "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Javadoc\n",
          "commitDate": "10/19/23 2:26 PM",
          "commitName": "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/19/23 2:26 PM",
          "commitNameOld": "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(final String className) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(className);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + className);\r\n    }\r\n    try {\r\n        return cl.getConstructor().newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 110,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the class name and empty constructor.\r\n\r\n@param className the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static Object createObject(final String classname) throws ParseException {\r\n+public static Object createObject(final String className) throws ParseException {\r\n     final Class\u003c?\u003e cl;\r\n     try {\r\n-        cl \u003d Class.forName(classname);\r\n+        cl \u003d Class.forName(className);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n-        throw new ParseException(\"Unable to find the class: \" + classname);\r\n+        throw new ParseException(\"Unable to find the class: \" + className);\r\n     }\r\n     try {\r\n         return cl.getConstructor().newInstance();\r\n     } catch (final Exception e) {\r\n-        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n+        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[classname-String(modifiers-final)]",
            "newValue": "[className-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Javadoc\n",
          "commitDate": "10/19/23 2:26 PM",
          "commitName": "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/19/23 2:26 PM",
          "commitNameOld": "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(final String className) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(className);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + className);\r\n    }\r\n    try {\r\n        return cl.getConstructor().newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 110,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the class name and empty constructor.\r\n\r\n@param className the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static Object createObject(final String classname) throws ParseException {\r\n+public static Object createObject(final String className) throws ParseException {\r\n     final Class\u003c?\u003e cl;\r\n     try {\r\n-        cl \u003d Class.forName(classname);\r\n+        cl \u003d Class.forName(className);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n-        throw new ParseException(\"Unable to find the class: \" + classname);\r\n+        throw new ParseException(\"Unable to find the class: \" + className);\r\n     }\r\n     try {\r\n         return cl.getConstructor().newInstance();\r\n     } catch (final Exception e) {\r\n-        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n+        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Javadoc\n",
          "commitDate": "10/19/23 2:26 PM",
          "commitName": "b4d4c8b2f61a17f9ccf9998cb868bacb26da3a6d",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "10/19/23 2:26 PM",
          "commitNameOld": "4c5aff8e4f01074003e5c58ee78d11cf1150d0d7",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(final String className) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(className);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + className);\r\n    }\r\n    try {\r\n        return cl.getConstructor().newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 110,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the class name and empty constructor.\r\n\r\n@param className the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
          "diff": "@@ -1,13 +1,13 @@\n-public static Object createObject(final String classname) throws ParseException {\r\n+public static Object createObject(final String className) throws ParseException {\r\n     final Class\u003c?\u003e cl;\r\n     try {\r\n-        cl \u003d Class.forName(classname);\r\n+        cl \u003d Class.forName(className);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n-        throw new ParseException(\"Unable to find the class: \" + classname);\r\n+        throw new ParseException(\"Unable to find the class: \" + className);\r\n     }\r\n     try {\r\n         return cl.getConstructor().newInstance();\r\n     } catch (final Exception e) {\r\n-        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n+        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + className);\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
            "newValue": "Create an Object from the class name and empty constructor.\r\n\r\n@param className the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n"
          }
        }
      ]
    },
    "31e87cb10fed5ae7287b4b2d10228fe41d662498": {
      "type": "Ybodychange",
      "commitMessage": "Update call deprecated in Java 9\n",
      "commitDate": "10/2/23 11:23 PM",
      "commitName": "31e87cb10fed5ae7287b4b2d10228fe41d662498",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/4/21 12:32 AM",
      "commitNameOld": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 728.95,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.getConstructor().newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 110,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "@@ -1,13 +1,13 @@\n public static Object createObject(final String classname) throws ParseException {\r\n     final Class\u003c?\u003e cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     try {\r\n-        return cl.newInstance();\r\n+        return cl.getConstructor().newInstance();\r\n     } catch (final Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "3/5/21 4:39 AM",
      "commitNameOld": "98d06d37bc7058bbfb2704c9620669c66e279f4a",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 211.77,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 92,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "f78fb5a99093852b0121edf4768bfaf931fa19f9": {
      "type": "Ydocchange",
      "commitMessage": "Normalize to US English spelling.\n",
      "commitDate": "2/8/21 10:02 PM",
      "commitName": "f78fb5a99093852b0121edf4768bfaf931fa19f9",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 42.14,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 115,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
        "newValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialized object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n"
      }
    },
    "c67275279176504a6f5fc556cfa247e1df02a580": {
      "type": "Ybodychange",
      "commitMessage": "Minor Improvements: (#57)\n\n* Unused import\r\n* Add final\r\n* License header should be a plain comment",
      "commitDate": "12/28/20 6:44 PM",
      "commitName": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthor": "Arturo Bernal",
      "commitDateOld": "11/21/20 6:07 AM",
      "commitNameOld": "1a11c86d750788d512a4c6e5025127e438185fcf",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 37.53,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    final Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 115,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "@@ -1,13 +1,13 @@\n public static Object createObject(final String classname) throws ParseException {\r\n-    Class\u003c?\u003e cl;\r\n+    final Class\u003c?\u003e cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     try {\r\n         return cl.newInstance();\r\n     } catch (final Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "2/9/19 7:20 PM",
      "commitNameOld": "18e36386a232ca7e31931bd1d51b91a7eadcf72c",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 312.17,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 115,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(final String classname) throws ParseException {\r\n    Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 113,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "@@ -1,13 +1,13 @@\n-public static Object createObject(String classname) throws ParseException {\r\n+public static Object createObject(final String classname) throws ParseException {\r\n     Class\u003c?\u003e cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (final ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     try {\r\n         return cl.newInstance();\r\n     } catch (final Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[classname-String]",
        "newValue": "[classname-String(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/3/15 8:10 PM",
      "commitNameOld": "206de8c8edac008d279903696bba7c3799bda45b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 763.98,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (final ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 113,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "@@ -1,13 +1,13 @@\n public static Object createObject(String classname) throws ParseException {\r\n     Class\u003c?\u003e cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n-    } catch (ClassNotFoundException cnfe) {\r\n+    } catch (final ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     try {\r\n         return cl.newInstance();\r\n-    } catch (Exception e) {\r\n+    } catch (final Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "89333a791bf39cd4cc63e9279d9bfa5522800e9f": {
      "type": "Ybodychange",
      "commitMessage": "Fix some obvious raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 7:48 PM",
      "commitName": "89333a791bf39cd4cc63e9279d9bfa5522800e9f",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "1/29/13 6:18 PM",
      "commitNameOld": "b106dee5f2a22f28c56073aad8afb28efe031190",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class\u003c?\u003e cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 113,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "@@ -1,13 +1,13 @@\n public static Object createObject(String classname) throws ParseException {\r\n-    Class cl;\r\n+    Class\u003c?\u003e cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     try {\r\n         return cl.newInstance();\r\n     } catch (Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "b106dee5f2a22f28c56073aad8afb28efe031190": {
      "type": "Ydocchange",
      "commitMessage": "Document and cleanup throws clauses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/29/13 6:18 PM",
      "commitName": "b106dee5f2a22f28c56073aad8afb28efe031190",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/28/13 12:00 AM",
      "commitNameOld": "29fefd2767b887e62cf17ca4412179b43f6ee4f6",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1.76,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 113,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
        "newValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object\r\n@throws ParseException if the class could not be found or the object could not be created\r\n"
      }
    },
    "3936da9d3fe37bcd20dd37216d82608e5917be07": {
      "type": "Ybodychange",
      "commitMessage": "Minor syntax changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1403792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/30/12 7:24 PM",
      "commitName": "3936da9d3fe37bcd20dd37216d82608e5917be07",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:45 PM",
      "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 867.32,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class cl;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    try {\r\n        return cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 111,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
      "diff": "@@ -1,15 +1,13 @@\n public static Object createObject(String classname) throws ParseException {\r\n-    Class cl \u003d null;\r\n+    Class cl;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n         throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n-    Object instance \u003d null;\r\n     try {\r\n-        instance \u003d cl.newInstance();\r\n+        return cl.newInstance();\r\n     } catch (Exception e) {\r\n         throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n-    return instance;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 111,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/TypeHandler.java",
        "newPath": "src/main/java/org/apache/commons/cli/TypeHandler.java"
      }
    },
    "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/17/09 10:23 AM",
      "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
      "commitAuthor": "Henri Yandell",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/09 10:23 AM",
          "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "1/14/09 7:56 AM",
          "commitNameOld": "e79254e91509806d466364b27756f9fb08b02af1",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 3.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 113,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
          "diff": "@@ -1,16 +1,15 @@\n-public static Object createObject(String classname) {\r\n+public static Object createObject(String classname) throws ParseException {\r\n     Class cl \u003d null;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find the class: \" + classname);\r\n-        return null;\r\n+        throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n     } catch (Exception e) {\r\n-        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n+        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Applying my patch from CLI-170 - TypeHandler prints messages to stderr. It doesn\u0027t change the default behaviour, but it does provide a new method which maybe called to not get the stderr output and instead get a checked exception thrown. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@735247 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "1/17/09 10:23 AM",
          "commitName": "b20a8e9fd4d7d63621bf61ffaa43b51ea2fca3c7",
          "commitAuthor": "Henri Yandell",
          "commitDateOld": "1/14/09 7:56 AM",
          "commitNameOld": "e79254e91509806d466364b27756f9fb08b02af1",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 3.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String classname) throws ParseException {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        throw new ParseException(\"Unable to find the class: \" + classname);\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 113,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
          "diff": "@@ -1,16 +1,15 @@\n-public static Object createObject(String classname) {\r\n+public static Object createObject(String classname) throws ParseException {\r\n     Class cl \u003d null;\r\n     try {\r\n         cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find the class: \" + classname);\r\n-        return null;\r\n+        throw new ParseException(\"Unable to find the class: \" + classname);\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n     } catch (Exception e) {\r\n-        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n+        throw new ParseException(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "363f8abe502848af3b844936f9e2d5181084c0b0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Slightly improved error message for classes not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695236 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "9/14/08 6:29 PM",
      "commitName": "363f8abe502848af3b844936f9e2d5181084c0b0",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Slightly improved error message for classes not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695236 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/08 6:29 PM",
          "commitName": "363f8abe502848af3b844936f9e2d5181084c0b0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/29/08 11:13 AM",
          "commitNameOld": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 47.3,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String classname) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + classname);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 112,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
          "diff": "@@ -1,16 +1,16 @@\n-public static Object createObject(String str) {\r\n+public static Object createObject(String classname) {\r\n     Class cl \u003d null;\r\n     try {\r\n-        cl \u003d Class.forName(str);\r\n+        cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find the class: \" + str);\r\n+        System.err.println(\"Unable to find the class: \" + classname);\r\n         return null;\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n     } catch (Exception e) {\r\n-        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n+        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[str-String]",
            "newValue": "[classname-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Slightly improved error message for classes not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695236 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/08 6:29 PM",
          "commitName": "363f8abe502848af3b844936f9e2d5181084c0b0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/29/08 11:13 AM",
          "commitNameOld": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 47.3,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String classname) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + classname);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 112,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
          "diff": "@@ -1,16 +1,16 @@\n-public static Object createObject(String str) {\r\n+public static Object createObject(String classname) {\r\n     Class cl \u003d null;\r\n     try {\r\n-        cl \u003d Class.forName(str);\r\n+        cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find the class: \" + str);\r\n+        System.err.println(\"Unable to find the class: \" + classname);\r\n         return null;\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n     } catch (Exception e) {\r\n-        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n+        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Slightly improved error message for classes not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@695236 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "9/14/08 6:29 PM",
          "commitName": "363f8abe502848af3b844936f9e2d5181084c0b0",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/29/08 11:13 AM",
          "commitNameOld": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 47.3,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String classname) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(classname);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + classname);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 112,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
          "diff": "@@ -1,16 +1,16 @@\n-public static Object createObject(String str) {\r\n+public static Object createObject(String classname) {\r\n     Class cl \u003d null;\r\n     try {\r\n-        cl \u003d Class.forName(str);\r\n+        cl \u003d Class.forName(classname);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find the class: \" + str);\r\n+        System.err.println(\"Unable to find the class: \" + classname);\r\n         return null;\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n     } catch (Exception e) {\r\n-        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n+        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + classname);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
            "newValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param classname the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n"
          }
        }
      ]
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Ydocchange",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 11:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "7/25/08 7:23 PM",
      "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n    }\r\n    return instance;\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 112,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
        "newValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create\r\nthe Object.\r\n"
      }
    },
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/25/08 7:23 PM",
      "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:32 AM",
          "commitNameOld": "b599e124a373de091bb6e5b0d771505efccc444d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 424.33,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 111,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
          "diff": "@@ -1,20 +1,16 @@\n public static Object createObject(String str) {\r\n     Class cl \u003d null;\r\n     try {\r\n         cl \u003d Class.forName(str);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find: \" + str);\r\n+        System.err.println(\"Unable to find the class: \" + str);\r\n         return null;\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n-    } catch (InstantiationException cnfe) {\r\n-        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n-        return null;\r\n-    } catch (IllegalAccessException cnfe) {\r\n-        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n-        return null;\r\n+    } catch (Exception e) {\r\n+        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/28/07 11:32 AM",
          "commitNameOld": "b599e124a373de091bb6e5b0d771505efccc444d",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 424.33,
          "commitsBetweenForRepo": 97,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find the class: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (Exception e) {\r\n        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 111,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
          "diff": "@@ -1,20 +1,16 @@\n public static Object createObject(String str) {\r\n     Class cl \u003d null;\r\n     try {\r\n         cl \u003d Class.forName(str);\r\n     } catch (ClassNotFoundException cnfe) {\r\n-        System.err.println(\"Unable to find: \" + str);\r\n+        System.err.println(\"Unable to find the class: \" + str);\r\n         return null;\r\n     }\r\n     Object instance \u003d null;\r\n     try {\r\n         instance \u003d cl.newInstance();\r\n-    } catch (InstantiationException cnfe) {\r\n-        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n-        return null;\r\n-    } catch (IllegalAccessException cnfe) {\r\n-        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n-        return null;\r\n+    } catch (Exception e) {\r\n+        System.err.println(e.getClass().getName() + \"; Unable to create an instance of: \" + str);\r\n     }\r\n     return instance;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
            "newValue": "Create an Object from the classname and empty constructor.\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n"
          }
        }
      ]
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/02 1:47 AM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/02 1:47 AM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/26/02 5:12 PM",
          "commitNameOld": "70a7b5fe868e872348374741cc27d2d453fb49bd",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 136.4,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (InstantiationException cnfe) {\r\n        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n        return null;\r\n    } catch (IllegalAccessException cnfe) {\r\n        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n        return null;\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 157,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create the Object.\r\n",
            "newValue": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/10/02 1:47 AM",
          "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
          "commitAuthor": "John Keyes",
          "commitDateOld": "7/26/02 5:12 PM",
          "commitNameOld": "70a7b5fe868e872348374741cc27d2d453fb49bd",
          "commitAuthorOld": "Henri Yandell",
          "daysBetweenCommits": 136.4,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (InstantiationException cnfe) {\r\n        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n        return null;\r\n    } catch (IllegalAccessException cnfe) {\r\n        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n        return null;\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 157,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create \r\nthe Object.\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "javadoc and checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/10/02 2:12 AM",
      "commitName": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
      "commitAuthor": "John Keyes",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "javadoc and checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/10/02 2:12 AM",
          "commitName": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
          "commitAuthor": "John Keyes",
          "commitDateOld": "6/10/02 9:01 PM",
          "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
          "commitAuthorOld": "James Strachan",
          "daysBetweenCommits": 29.22,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (InstantiationException cnfe) {\r\n        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n        return null;\r\n    } catch (IllegalAccessException cnfe) {\r\n        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n        return null;\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 142,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create the Object.\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Create an Object from the classname and empty constructor.\r\nReturns null if it couldn\u0027t create the Object.\r\n",
            "newValue": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create the Object.\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "javadoc and checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/10/02 2:12 AM",
          "commitName": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
          "commitAuthor": "John Keyes",
          "commitDateOld": "6/10/02 9:01 PM",
          "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
          "commitAuthorOld": "James Strachan",
          "daysBetweenCommits": 29.22,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (InstantiationException cnfe) {\r\n        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n        return null;\r\n    } catch (IllegalAccessException cnfe) {\r\n        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n        return null;\r\n    }\r\n    return instance;\r\n}",
          "path": "src/java/org/apache/commons/cli/TypeHandler.java",
          "functionStartLine": 142,
          "functionName": "createObject",
          "functionAnnotation": "",
          "functionDoc": "\u003cp\u003eCreate an Object from the classname and empty constructor.\u003c/p\u003e\r\n\r\n@param str the argument value\r\n@return the initialised object, or null if it couldn\u0027t create the Object.\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,20 @@\n+public static Object createObject(String str) {\r\n+    Class cl \u003d null;\r\n+    try {\r\n+        cl \u003d Class.forName(str);\r\n+    } catch (ClassNotFoundException cnfe) {\r\n+        System.err.println(\"Unable to find: \" + str);\r\n+        return null;\r\n+    }\r\n+    Object instance \u003d null;\r\n+    try {\r\n+        instance \u003d cl.newInstance();\r\n+    } catch (InstantiationException cnfe) {\r\n+        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n+        return null;\r\n+    } catch (IllegalAccessException cnfe) {\r\n+        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n+        return null;\r\n+    }\r\n+    return instance;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Object createObject(String str) {\r\n    Class cl \u003d null;\r\n    try {\r\n        cl \u003d Class.forName(str);\r\n    } catch (ClassNotFoundException cnfe) {\r\n        System.err.println(\"Unable to find: \" + str);\r\n        return null;\r\n    }\r\n    Object instance \u003d null;\r\n    try {\r\n        instance \u003d cl.newInstance();\r\n    } catch (InstantiationException cnfe) {\r\n        System.err.println(\"InstantiationException; Unable to create: \" + str);\r\n        return null;\r\n    } catch (IllegalAccessException cnfe) {\r\n        System.err.println(\"IllegalAccessException; Unable to create: \" + str);\r\n        return null;\r\n    }\r\n    return instance;\r\n}",
      "path": "src/java/org/apache/commons/cli/TypeHandler.java",
      "functionStartLine": 121,
      "functionName": "createObject",
      "functionAnnotation": "",
      "functionDoc": "Create an Object from the classname and empty constructor.\r\nReturns null if it couldn\u0027t create the Object.\r\n"
    }
  }
}