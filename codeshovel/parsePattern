{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PatternOptionBuilder.java",
  "functionName": "parsePattern",
  "functionId": "parsePattern___pattern-String(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
  "functionAnnotation": "",
  "functionDoc": "Returns the {@link Options} instance represented by {@code pattern}.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
  "functionStartLine": 153,
  "functionEndLine": 191,
  "numCommitsSeen": 38,
  "timeTaken": 293,
  "changeHistory": [
    "61a465a96a4c67012a924ee0467760c02ad6f479",
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
    "df52eee396b1e8ce24fd1ec34752e1049618255a",
    "31d92568a294be608bf54efc306e4b9c1e3fe61d",
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
    "a8a8ec06a85a1090d560dc6cf236663da580863e",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "61a465a96a4c67012a924ee0467760c02ad6f479": "Ybodychange",
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": "Ybodychange",
    "df52eee396b1e8ce24fd1ec34752e1049618255a": "Ybodychange",
    "31d92568a294be608bf54efc306e4b9c1e3fe61d": "Ybodychange",
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d": "Ybodychange",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": "Ymultichange(Ydocchange,Yformatchange)",
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": "Ymultichange(Ybodychange,Ydocchange)",
    "a8a8ec06a85a1090d560dc6cf236663da580863e": "Ybodychange",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Yformatchange",
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe": "Ybodychange",
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": "Ydocchange",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": "Ybodychange",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "61a465a96a4c67012a924ee0467760c02ad6f479": {
      "type": "Ybodychange",
      "commitMessage": "Delete unused assignment. (#112)\n\n",
      "commitDate": "2/3/23 5:23 PM",
      "commitName": "61a465a96a4c67012a924ee0467760c02ad6f479",
      "commitAuthor": "Arturo Bernal",
      "commitDateOld": "10/4/21 12:32 AM",
      "commitNameOld": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 487.7,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(final String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 153,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by {@code pattern}.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,27 @@\n public static Options parsePattern(final String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Class\u003c?\u003e type \u003d null;\r\n     final Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         final char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                 options.addOption(option);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n-                opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n         options.addOption(option);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/21 11:04 PM",
      "commitNameOld": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(final String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 153,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by {@code pattern}.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
        "newValue": "Returns the {@link Options} instance represented by {@code pattern}.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(final String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 153,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/15/17 1:23 PM",
      "commitNameOld": "9a845a2a30742b500e3b823b105434203427ea93",
      "commitAuthorOld": "Bruno P. Kinoshita",
      "daysBetweenCommits": 916.42,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(final String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 148,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(final String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 150,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,28 @@\n-public static Options parsePattern(String pattern) {\r\n+public static Options parsePattern(final String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Class\u003c?\u003e type \u003d null;\r\n     final Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         final char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                 options.addOption(option);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n         options.addOption(option);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[pattern-String]",
        "newValue": "[pattern-String(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/3/15 5:27 PM",
      "commitNameOld": "10090594827c3c90b9c0a5c8288cda448b0ce10c",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 764.09,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    final Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        final char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 150,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,28 @@\n public static Options parsePattern(String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Class\u003c?\u003e type \u003d null;\r\n-    Options options \u003d new Options();\r\n+    final Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n-        char ch \u003d pattern.charAt(i);\r\n+        final char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                 options.addOption(option);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n         options.addOption(option);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3": {
      "type": "Ybodychange",
      "commitMessage": "[CLI-224] Add static builder methods to Option, check if at least one of opt/longOpt has been specified, update javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1447005 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/17/13 1:11 PM",
      "commitName": "faa6455a9a0bccf29d049f0b0958eb9b2e804fc3",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/11/13 12:14 PM",
      "commitNameOld": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 6.04,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 145,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,28 @@\n public static Options parsePattern(String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Class\u003c?\u003e type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n-                final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n+                final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n                 options.addOption(option);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n-        final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n+        final Option option \u003d Option.builder(String.valueOf(opt)).hasArg(type !\u003d null).required(required).type(type).build();\r\n         options.addOption(option);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "df52eee396b1e8ce24fd1ec34752e1049618255a": {
      "type": "Ybodychange",
      "commitMessage": "[CLI-224] Added new fluent builder API to Option, deprecating OptionBuilder, adapting the PatternOptionBuilder to use the new API, thanks to Duncan Jones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1444720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/11/13 12:14 PM",
      "commitName": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/6/13 8:12 PM",
      "commitNameOld": "08a1eb7875d24830e37a969e9963ccc365586ca1",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 4.67,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n                options.addOption(option);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n        options.addOption(option);\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 145,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,32 +1,28 @@\n public static Options parsePattern(String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Class\u003c?\u003e type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n-                OptionBuilder.hasArg(type !\u003d null);\r\n-                OptionBuilder.isRequired(required);\r\n-                OptionBuilder.withType(type);\r\n-                options.addOption(OptionBuilder.create(opt));\r\n+                final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n+                options.addOption(option);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n-        OptionBuilder.hasArg(type !\u003d null);\r\n-        OptionBuilder.isRequired(required);\r\n-        OptionBuilder.withType(type);\r\n-        options.addOption(OptionBuilder.create(opt));\r\n+        final Option option \u003d new Option.Builder(String.valueOf(opt), null).hasArg(type !\u003d null).required(required).type(type).build();\r\n+        options.addOption(option);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "31d92568a294be608bf54efc306e4b9c1e3fe61d": {
      "type": "Ybodychange",
      "commitMessage": "Fix clirr error: return type of a public static method has changed from Object to Class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/29/13 6:33 PM",
      "commitName": "31d92568a294be608bf54efc306e4b9c1e3fe61d",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/27/13 11:36 PM",
      "commitNameOld": "64322324b3bc415586e6c9557fa3e0a5171bd3de",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class\u003c?\u003e type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 148,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,32 +1,32 @@\n public static Options parsePattern(String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n-    Class type \u003d null;\r\n+    Class\u003c?\u003e type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 OptionBuilder.hasArg(type !\u003d null);\r\n                 OptionBuilder.isRequired(required);\r\n                 OptionBuilder.withType(type);\r\n                 options.addOption(OptionBuilder.create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n-            type \u003d getValueClass(ch);\r\n+            type \u003d (Class\u003c?\u003e) getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         OptionBuilder.hasArg(type !\u003d null);\r\n         OptionBuilder.isRequired(required);\r\n         OptionBuilder.withType(type);\r\n         options.addOption(OptionBuilder.create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "62a3b36efc78e53c233c2fb49cc8199c5eabec1d": {
      "type": "Ybodychange",
      "commitMessage": "Option type is now set to String by default (Fixes CLI-215)\nThe type is now explicitly a Class instance instead of an unspecified Object\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1091485 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/12/11 6:55 PM",
      "commitName": "62a3b36efc78e53c233c2fb49cc8199c5eabec1d",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:45 PM",
      "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 300.26,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Class type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 148,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,32 +1,32 @@\n public static Options parsePattern(String pattern) {\r\n     char opt \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n-    Object type \u003d null;\r\n+    Class type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n         char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 OptionBuilder.hasArg(type !\u003d null);\r\n                 OptionBuilder.isRequired(required);\r\n                 OptionBuilder.withType(type);\r\n                 options.addOption(OptionBuilder.create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         OptionBuilder.hasArg(type !\u003d null);\r\n         OptionBuilder.isRequired(required);\r\n         OptionBuilder.withType(type);\r\n         options.addOption(OptionBuilder.create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 148,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
        "newPath": "src/main/java/org/apache/commons/cli/PatternOptionBuilder.java"
      }
    },
    "147df44faa4eb12ffd4a0063fc3284f784ea67c8": {
      "type": "Ymultichange(Ydocchange,Yformatchange)",
      "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/29/08 11:13 AM",
      "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ydocchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 7:23 PM",
          "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.66,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
          "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
          "functionStartLine": 149,
          "functionName": "parsePattern",
          "functionAnnotation": "",
          "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
          "diff": "",
          "extendedDetails": {
            "oldValue": "Returns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
            "newValue": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n"
          }
        },
        {
          "type": "Yformatchange",
          "commitMessage": "Style update\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@680644 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/29/08 11:13 AM",
          "commitName": "147df44faa4eb12ffd4a0063fc3284f784ea67c8",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/25/08 7:23 PM",
          "commitNameOld": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.66,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
          "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
          "functionStartLine": 149,
          "functionName": "parsePattern",
          "functionAnnotation": "",
          "functionDoc": "Returns the {@link Options} instance represented by \u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
          "diff": "",
          "extendedDetails": {}
        }
      ]
    },
    "cfbb46adb163d9b8af00e9a29e6b42d597f8804f": {
      "type": "Ymultichange(Ybodychange,Ydocchange)",
      "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/25/08 7:23 PM",
      "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/22/08 12:23 PM",
          "commitNameOld": "f641323f4fed604953fdab54405a98eeaa2b1271",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
          "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
          "functionStartLine": 150,
          "functionName": "parsePattern",
          "functionAnnotation": "",
          "functionDoc": "Returns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
          "diff": "@@ -1,34 +1,32 @@\n public static Options parsePattern(String pattern) {\r\n-    int sz \u003d pattern.length();\r\n     char opt \u003d \u0027 \u0027;\r\n-    char ch \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Object type \u003d null;\r\n     Options options \u003d new Options();\r\n-    for (int i \u003d 0; i \u003c sz; i++) {\r\n-        ch \u003d pattern.charAt(i);\r\n+    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n+        char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 OptionBuilder.hasArg(type !\u003d null);\r\n                 OptionBuilder.isRequired(required);\r\n                 OptionBuilder.withType(type);\r\n                 options.addOption(OptionBuilder.create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         OptionBuilder.hasArg(type !\u003d null);\r\n         OptionBuilder.isRequired(required);\r\n         OptionBuilder.withType(type);\r\n         options.addOption(OptionBuilder.create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Improved the test coverage of TypeHandler and PatternOptionBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@679851 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "7/25/08 7:23 PM",
          "commitName": "cfbb46adb163d9b8af00e9a29e6b42d597f8804f",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "7/22/08 12:23 PM",
          "commitNameOld": "f641323f4fed604953fdab54405a98eeaa2b1271",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "public static Options parsePattern(String pattern) {\r\n    char opt \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n        char ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
          "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
          "functionStartLine": 150,
          "functionName": "parsePattern",
          "functionAnnotation": "",
          "functionDoc": "Returns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
          "diff": "@@ -1,34 +1,32 @@\n public static Options parsePattern(String pattern) {\r\n-    int sz \u003d pattern.length();\r\n     char opt \u003d \u0027 \u0027;\r\n-    char ch \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Object type \u003d null;\r\n     Options options \u003d new Options();\r\n-    for (int i \u003d 0; i \u003c sz; i++) {\r\n-        ch \u003d pattern.charAt(i);\r\n+    for (int i \u003d 0; i \u003c pattern.length(); i++) {\r\n+        char ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n                 OptionBuilder.hasArg(type !\u003d null);\r\n                 OptionBuilder.isRequired(required);\r\n                 OptionBuilder.withType(type);\r\n                 options.addOption(OptionBuilder.create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n         OptionBuilder.hasArg(type !\u003d null);\r\n         OptionBuilder.isRequired(required);\r\n         OptionBuilder.withType(type);\r\n         options.addOption(OptionBuilder.create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
            "newValue": "Returns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n"
          }
        }
      ]
    },
    "a8a8ec06a85a1090d560dc6cf236663da580863e": {
      "type": "Ybodychange",
      "commitMessage": "Lots of minor refactoring and tidying to avoid compiler warnings\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@155293 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/25/05 5:21 AM",
      "commitName": "a8a8ec06a85a1090d560dc6cf236663da580863e",
      "commitAuthor": "Robert James Oxspring",
      "commitDateOld": "8/22/04 5:37 AM",
      "commitNameOld": "5904ffa88dddfe622884cebec904dca975ce0b2c",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 187.03,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                OptionBuilder.hasArg(type !\u003d null);\r\n                OptionBuilder.isRequired(required);\r\n                OptionBuilder.withType(type);\r\n                options.addOption(OptionBuilder.create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        OptionBuilder.hasArg(type !\u003d null);\r\n        OptionBuilder.isRequired(required);\r\n        OptionBuilder.withType(type);\r\n        options.addOption(OptionBuilder.create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 155,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,34 @@\n public static Options parsePattern(String pattern) {\r\n     int sz \u003d pattern.length();\r\n     char opt \u003d \u0027 \u0027;\r\n     char ch \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Object type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c sz; i++) {\r\n         ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n-                options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n+                OptionBuilder.hasArg(type !\u003d null);\r\n+                OptionBuilder.isRequired(required);\r\n+                OptionBuilder.withType(type);\r\n+                options.addOption(OptionBuilder.create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n-        options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n+        OptionBuilder.hasArg(type !\u003d null);\r\n+        OptionBuilder.isRequired(required);\r\n+        OptionBuilder.withType(type);\r\n+        options.addOption(OptionBuilder.create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Yformatchange",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/02 1:47 AM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "commitDateOld": "7/31/02 2:06 AM",
      "commitNameOld": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 132.03,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 180,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe": {
      "type": "Ybodychange",
      "commitMessage": "integrated PatternBuilder\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/31/02 2:06 AM",
      "commitName": "fbc0bd02b0d9d97ae044aebbbfbc5b13d3eacafe",
      "commitAuthor": "John Keyes",
      "commitDateOld": "7/10/02 2:12 AM",
      "commitNameOld": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 21.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 158,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "@@ -1,28 +1,28 @@\n public static Options parsePattern(String pattern) {\r\n     int sz \u003d pattern.length();\r\n     char opt \u003d \u0027 \u0027;\r\n     char ch \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Object type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c sz; i++) {\r\n         ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n-                options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n+                options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n-        options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n+        options.addOption(OptionBuilder.hasArg(type !\u003d null).isRequired(required).withType(type).create(opt));\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "7e3bcff98a5e290755664dc27eb9b86ba64330d1": {
      "type": "Ydocchange",
      "commitMessage": "javadoc and checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/10/02 2:12 AM",
      "commitName": "7e3bcff98a5e290755664dc27eb9b86ba64330d1",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/17/02 2:00 AM",
      "commitNameOld": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 23.01,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 158,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "\u003cp\u003eReturns the {@link Options} instance represented by \r\n\u003ccode\u003epattern\u003c/code\u003e.\u003c/p\u003e\r\n\r\n@param pattern the pattern string\r\n@return The {@link Options} instance\r\n"
      }
    },
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": {
      "type": "Ybodychange",
      "commitMessage": "configurable parser support added, PosixParser added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/02 2:00 AM",
      "commitName": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/10/02 9:01 PM",
      "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthorOld": "James Strachan",
      "daysBetweenCommits": 6.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 129,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,28 +1,28 @@\n public static Options parsePattern(String pattern) {\r\n     int sz \u003d pattern.length();\r\n     char opt \u003d \u0027 \u0027;\r\n     char ch \u003d \u0027 \u0027;\r\n     boolean required \u003d false;\r\n     Object type \u003d null;\r\n     Options options \u003d new Options();\r\n     for (int i \u003d 0; i \u003c sz; i++) {\r\n         ch \u003d pattern.charAt(i);\r\n         if (!isValueCode(ch)) {\r\n             if (opt !\u003d \u0027 \u0027) {\r\n-                options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n+                options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n                 required \u003d false;\r\n                 type \u003d null;\r\n                 opt \u003d \u0027 \u0027;\r\n             }\r\n             opt \u003d ch;\r\n         } else if (ch \u003d\u003d \u0027!\u0027) {\r\n             required \u003d true;\r\n         } else {\r\n             type \u003d getValueClass(ch);\r\n         }\r\n     }\r\n     if (opt !\u003d \u0027 \u0027) {\r\n-        options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n+        options.addOption(\"\" + opt, null, (type !\u003d null), \"\", required, false, type);\r\n     }\r\n     return options;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,28 @@\n+public static Options parsePattern(String pattern) {\r\n+    int sz \u003d pattern.length();\r\n+    char opt \u003d \u0027 \u0027;\r\n+    char ch \u003d \u0027 \u0027;\r\n+    boolean required \u003d false;\r\n+    Object type \u003d null;\r\n+    Options options \u003d new Options();\r\n+    for (int i \u003d 0; i \u003c sz; i++) {\r\n+        ch \u003d pattern.charAt(i);\r\n+        if (!isValueCode(ch)) {\r\n+            if (opt !\u003d \u0027 \u0027) {\r\n+                options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n+                required \u003d false;\r\n+                type \u003d null;\r\n+                opt \u003d \u0027 \u0027;\r\n+            }\r\n+            opt \u003d ch;\r\n+        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n+            required \u003d true;\r\n+        } else {\r\n+            type \u003d getValueClass(ch);\r\n+        }\r\n+    }\r\n+    if (opt !\u003d \u0027 \u0027) {\r\n+        options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n+    }\r\n+    return options;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public static Options parsePattern(String pattern) {\r\n    int sz \u003d pattern.length();\r\n    char opt \u003d \u0027 \u0027;\r\n    char ch \u003d \u0027 \u0027;\r\n    boolean required \u003d false;\r\n    Object type \u003d null;\r\n    Options options \u003d new Options();\r\n    for (int i \u003d 0; i \u003c sz; i++) {\r\n        ch \u003d pattern.charAt(i);\r\n        if (!isValueCode(ch)) {\r\n            if (opt !\u003d \u0027 \u0027) {\r\n                options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n                required \u003d false;\r\n                type \u003d null;\r\n                opt \u003d \u0027 \u0027;\r\n            }\r\n            opt \u003d ch;\r\n        } else if (ch \u003d\u003d \u0027!\u0027) {\r\n            required \u003d true;\r\n        } else {\r\n            type \u003d getValueClass(ch);\r\n        }\r\n    }\r\n    if (opt !\u003d \u0027 \u0027) {\r\n        options.addOption(opt, null, (type !\u003d null), \"\", required, false, type);\r\n    }\r\n    return options;\r\n}",
      "path": "src/java/org/apache/commons/cli/PatternOptionBuilder.java",
      "functionStartLine": 129,
      "functionName": "parsePattern",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}