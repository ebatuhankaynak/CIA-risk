{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HelpFormatterTest.java",
  "functionName": "testPrintOptions",
  "functionId": "testPrintOptions",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 386,
  "functionEndLine": 425,
  "numCommitsSeen": 49,
  "timeTaken": 179,
  "changeHistory": [
    "b805e90dd082b4549ef4d565d13c6db8fdb96a5e",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "f91ba7058dc9d733d7f8177df88b2f44144be72e",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "83770d84c972bd879aa001c491e9a7fea843d209",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce",
    "7d52b84bd4399872c37c6c0fc3936ff7a7415c6a",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
    "c7127329dad2c5d6284532da09ddc0fdefd67436",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "b805e90dd082b4549ef4d565d13c6db8fdb96a5e": "Yexceptionschange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "f91ba7058dc9d733d7f8177df88b2f44144be72e": "Ybodychange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "83770d84c972bd879aa001c491e9a7fea843d209": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce": "Yformatchange",
    "7d52b84bd4399872c37c6c0fc3936ff7a7415c6a": "Yfilerename",
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": "Ybodychange",
    "c7127329dad2c5d6284532da09ddc0fdefd67436": "Yformatchange",
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": "Ybodychange",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b805e90dd082b4549ef4d565d13c6db8fdb96a5e": {
      "type": "Yexceptionschange",
      "commitMessage": "Fix compiler warnings.\n",
      "commitDate": "10/3/21 2:32 AM",
      "commitName": "b805e90dd082b4549ef4d565d13c6db8fdb96a5e",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/21 11:07 PM",
      "commitNameOld": "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintOptions() {\r\n    final StringBuffer sb \u003d new StringBuffer();\r\n    final HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options;\r\n    String expected;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 332,
      "functionName": "testPrintOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n-public void testPrintOptions() throws Exception {\r\n+public void testPrintOptions() {\r\n     final StringBuffer sb \u003d new StringBuffer();\r\n     final HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options;\r\n     String expected;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[Exception]",
        "newValue": "[]"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintOptions() throws Exception {\r\n    final StringBuffer sb \u003d new StringBuffer();\r\n    final HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options;\r\n    String expected;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 155,
      "functionName": "testPrintOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "f91ba7058dc9d733d7f8177df88b2f44144be72e": {
      "type": "Ybodychange",
      "commitMessage": "No need to initialize to default.\n",
      "commitDate": "11/21/20 2:21 AM",
      "commitName": "f91ba7058dc9d733d7f8177df88b2f44144be72e",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "5/24/20 6:46 PM",
      "commitNameOld": "a3e2d6b14257122a891d84459f927e2417cc8c88",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 180.32,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintOptions() throws Exception {\r\n    final StringBuffer sb \u003d new StringBuffer();\r\n    final HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options;\r\n    String expected;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 160,
      "functionName": "testPrintOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testPrintOptions() throws Exception {\r\n     final StringBuffer sb \u003d new StringBuffer();\r\n     final HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n-    Options options \u003d null;\r\n-    String expected \u003d null;\r\n+    Options options;\r\n+    String expected;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/28/15 8:06 PM",
      "commitNameOld": "ec363cc653aaaa2c10b19e0ae880ede6084dd420",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 799.94,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintOptions() throws Exception {\r\n    final StringBuffer sb \u003d new StringBuffer();\r\n    final HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 160,
      "functionName": "testPrintOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,35 +1,35 @@\n @Test\r\n public void testPrintOptions() throws Exception {\r\n-    StringBuffer sb \u003d new StringBuffer();\r\n-    HelpFormatter hf \u003d new HelpFormatter();\r\n+    final StringBuffer sb \u003d new StringBuffer();\r\n+    final HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options \u003d null;\r\n     String expected \u003d null;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/29/13 6:58 PM",
      "commitNameOld": "6ba1a28a39f42d411689d71bc11932c820cb4265",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 7.75,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 161,
      "functionName": "testPrintOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,35 @@\n+@Test\r\n public void testPrintOptions() throws Exception {\r\n     StringBuffer sb \u003d new StringBuffer();\r\n     HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options \u003d null;\r\n     String expected \u003d null;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "83770d84c972bd879aa001c491e9a7fea843d209": {
      "type": "Ybodychange",
      "commitMessage": "Split of testPrintWrapped() into smaller test methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@956426 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/21/10 2:03 AM",
      "commitName": "83770d84c972bd879aa001c491e9a7fea843d209",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/20/10 1:06 AM",
      "commitNameOld": "4d2c8a22d1e1831858029b8ef225a07f4445a221",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 130,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,34 @@\n public void testPrintOptions() throws Exception {\r\n     StringBuffer sb \u003d new StringBuffer();\r\n     HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options \u003d null;\r\n     String expected \u003d null;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n-    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n+    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + EOL + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n-    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n-    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + EOL + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + EOL + lpad + \"-b      \" + dpad + \"feeee eeee\" + EOL + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 97,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
      }
    },
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce": {
      "type": "Yformatchange",
      "commitMessage": "Moved the tests related to the HelpFormatter in BugsTest into HelpFormatterTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@712642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/08 12:42 PM",
      "commitName": "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08 2:21 PM",
      "commitNameOld": "b6cfdf9648f6f09f76e9bc686fd79ccfdd1d6102",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 163.97,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 97,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "7d52b84bd4399872c37c6c0fc3936ff7a7415c6a": {
      "type": "Yfilerename",
      "commitMessage": "Renaming TestHelpFormatter to the more obvious HelpFormatterTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/branches/cli-1.0.x@544763 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/6/07 11:02 AM",
      "commitName": "7d52b84bd4399872c37c6c0fc3936ff7a7415c6a",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "6/6/07 11:01 AM",
      "commitNameOld": "6f972cf56d7a3054bac902fecb6d3dd5ee310dea",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 105,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/TestHelpFormatter.java",
        "newPath": "src/test/org/apache/commons/cli/HelpFormatterTest.java"
      }
    },
    "9b2b8038b52be022e42c8c7fdf26e236888f94c5": {
      "type": "Ybodychange",
      "commitMessage": "checkstyle fixes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/02 1:47 AM",
      "commitName": "9b2b8038b52be022e42c8c7fdf26e236888f94c5",
      "commitAuthor": "John Keyes",
      "commitDateOld": "10/4/02 2:06 PM",
      "commitNameOld": "f577183054dd835d31a3f40026fe63831c140791",
      "commitAuthorOld": "James Strachan",
      "daysBetweenCommits": 66.53,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/TestHelpFormatter.java",
      "functionStartLine": 95,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,34 @@\n public void testPrintOptions() throws Exception {\r\n     StringBuffer sb \u003d new StringBuffer();\r\n     HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options \u003d null;\r\n     String expected \u003d null;\r\n     options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n-    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n+    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n-    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n     options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n-    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.getNewLine() + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.getNewLine() + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c7127329dad2c5d6284532da09ddc0fdefd67436": {
      "type": "Yformatchange",
      "commitMessage": "added automatic usage generation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/23/02 1:49 AM",
      "commitName": "c7127329dad2c5d6284532da09ddc0fdefd67436",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/17/02 2:00 AM",
      "commitNameOld": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 35.99,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/TestHelpFormatter.java",
      "functionStartLine": 95,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8": {
      "type": "Ybodychange",
      "commitMessage": "configurable parser support added, PosixParser added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/02 2:00 AM",
      "commitName": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/10/02 9:01 PM",
      "commitNameOld": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthorOld": "James Strachan",
      "daysBetweenCommits": 6.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/TestHelpFormatter.java",
      "functionStartLine": 102,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,34 +1,34 @@\n public void testPrintOptions() throws Exception {\r\n     StringBuffer sb \u003d new StringBuffer();\r\n     HelpFormatter hf \u003d new HelpFormatter();\r\n     final int leftPad \u003d 1;\r\n     final int descPad \u003d 3;\r\n     final String lpad \u003d hf.createPadding(leftPad);\r\n     final String dpad \u003d hf.createPadding(descPad);\r\n     Options options \u003d null;\r\n     String expected \u003d null;\r\n-    options \u003d new Options().addOption(\u0027a\u0027, false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n+    options \u003d new Options().addOption(\"a\", false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n     int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n     expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n     assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n-    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\");\r\n+    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n     assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n     nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"long wrapped option\", expected, sb.toString());\r\n-    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\u0027b\u0027, false, \"feeee eeee eeee eeee\");\r\n+    options \u003d new Options().addOption(\"a\", \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\"b\", false, \"feeee eeee eeee eeee\");\r\n     expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n     sb.setLength(0);\r\n     hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n     assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,34 @@\n+public void testPrintOptions() throws Exception {\r\n+    StringBuffer sb \u003d new StringBuffer();\r\n+    HelpFormatter hf \u003d new HelpFormatter();\r\n+    final int leftPad \u003d 1;\r\n+    final int descPad \u003d 3;\r\n+    final String lpad \u003d hf.createPadding(leftPad);\r\n+    final String dpad \u003d hf.createPadding(descPad);\r\n+    Options options \u003d null;\r\n+    String expected \u003d null;\r\n+    options \u003d new Options().addOption(\u0027a\u0027, false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n+    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n+    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n+    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n+    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n+    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n+    sb.setLength(0);\r\n+    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n+    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n+    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\");\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n+    sb.setLength(0);\r\n+    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n+    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n+    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n+    sb.setLength(0);\r\n+    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n+    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n+    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\u0027b\u0027, false, \"feeee eeee eeee eeee\");\r\n+    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n+    sb.setLength(0);\r\n+    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n+    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testPrintOptions() throws Exception {\r\n    StringBuffer sb \u003d new StringBuffer();\r\n    HelpFormatter hf \u003d new HelpFormatter();\r\n    final int leftPad \u003d 1;\r\n    final int descPad \u003d 3;\r\n    final String lpad \u003d hf.createPadding(leftPad);\r\n    final String dpad \u003d hf.createPadding(descPad);\r\n    Options options \u003d null;\r\n    String expected \u003d null;\r\n    options \u003d new Options().addOption(\u0027a\u0027, false, \"aaaa aaaa aaaa aaaa aaaa\");\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa aaaa aaaa\";\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"simple non-wrapped option\", expected, sb.toString());\r\n    int nextLineTabStop \u003d leftPad + descPad + \"-a\".length();\r\n    expected \u003d lpad + \"-a\" + dpad + \"aaaa aaaa aaaa\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"aaaa aaaa\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, nextLineTabStop + 17, options, leftPad, descPad);\r\n    assertEquals(\"simple wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 60, options, leftPad, descPad);\r\n    assertEquals(\"long non-wrapped option\", expected, sb.toString());\r\n    nextLineTabStop \u003d leftPad + descPad + \"-a,--aaa\".length();\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"long wrapped option\", expected, sb.toString());\r\n    options \u003d new Options().addOption(\u0027a\u0027, \"aaa\", false, \"dddd dddd dddd dddd\").addOption(\u0027b\u0027, false, \"feeee eeee eeee eeee\");\r\n    expected \u003d lpad + \"-a,--aaa\" + dpad + \"dddd dddd\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"dddd dddd\" + hf.defaultNewLine + lpad + \"-b      \" + dpad + \"feeee eeee\" + hf.defaultNewLine + hf.createPadding(nextLineTabStop) + \"eeee eeee\";\r\n    sb.setLength(0);\r\n    hf.renderOptions(sb, 25, options, leftPad, descPad);\r\n    assertEquals(\"multiple wrapped options\", expected, sb.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/TestHelpFormatter.java",
      "functionStartLine": 102,
      "functionName": "testPrintOptions",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}