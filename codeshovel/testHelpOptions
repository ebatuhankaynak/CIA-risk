{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OptionsTest.java",
  "functionName": "testHelpOptions",
  "functionId": "testHelpOptions",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/OptionsTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 80,
  "functionEndLine": 108,
  "numCommitsSeen": 25,
  "timeTaken": 182,
  "changeHistory": [
    "02aba6c78d451376053478e4d627ba6f2fd6ba21",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "4d49ed355c081eb0d8878841e849d9dd7aed2570",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "0158f772b3ea94000054cd5b1fc0d0cda2f29a1b",
    "05e7cd0a3266cb9d1a425be5107beb27fe171c2a",
    "0f52eff086c74ad246c23a82f01b39a39c107ffa"
  ],
  "changeHistoryShort": {
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "4d49ed355c081eb0d8878841e849d9dd7aed2570": "Ybodychange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "0158f772b3ea94000054cd5b1fc0d0cda2f29a1b": "Yformatchange",
    "05e7cd0a3266cb9d1a425be5107beb27fe171c2a": "Yformatchange",
    "0f52eff086c74ad246c23a82f01b39a39c107ffa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "02aba6c78d451376053478e4d627ba6f2fd6ba21": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant generic type arguments.\n",
      "commitDate": "5/24/20 6:44 PM",
      "commitName": "02aba6c78d451376053478e4d627ba6f2fd6ba21",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/18/19 11:28 PM",
      "commitNameOld": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 157.8,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testHelpOptions() {\r\n    final Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    final Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    final Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    final Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    final Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    final Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    final Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003c\u003e();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    final Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 77,
      "functionName": "testHelpOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,26 @@\n @Test\r\n public void testHelpOptions() {\r\n     final Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n     final Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n     final Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n     final Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n     final Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n     final Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n     final Options options \u003d new Options();\r\n     options.addOption(longOnly1);\r\n     options.addOption(longOnly2);\r\n     options.addOption(shortOnly1);\r\n     options.addOption(shortOnly2);\r\n     options.addOption(bothA);\r\n     options.addOption(bothB);\r\n-    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n+    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003c\u003e();\r\n     allOptions.add(longOnly1);\r\n     allOptions.add(longOnly2);\r\n     allOptions.add(shortOnly1);\r\n     allOptions.add(shortOnly2);\r\n     allOptions.add(bothA);\r\n     allOptions.add(bothB);\r\n     final Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n     assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n     assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 926.16,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testHelpOptions() {\r\n    final Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    final Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    final Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    final Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    final Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    final Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    final Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    final Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 77,
      "functionName": "testHelpOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/28/15 8:11 PM",
      "commitNameOld": "ce1b4d824ab36e8823819e277153d33c080ada95",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 799.94,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testHelpOptions() {\r\n    final Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    final Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    final Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    final Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    final Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    final Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    final Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    final Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 77,
      "functionName": "testHelpOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,26 @@\n @Test\r\n public void testHelpOptions() {\r\n-    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n-    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n-    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n-    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n-    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n-    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n-    Options options \u003d new Options();\r\n+    final Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n+    final Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n+    final Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n+    final Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n+    final Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n+    final Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n+    final Options options \u003d new Options();\r\n     options.addOption(longOnly1);\r\n     options.addOption(longOnly2);\r\n     options.addOption(shortOnly1);\r\n     options.addOption(shortOnly2);\r\n     options.addOption(bothA);\r\n     options.addOption(bothB);\r\n-    Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n+    final Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n     allOptions.add(longOnly1);\r\n     allOptions.add(longOnly2);\r\n     allOptions.add(shortOnly1);\r\n     allOptions.add(shortOnly2);\r\n     allOptions.add(bothA);\r\n     allOptions.add(bothB);\r\n-    Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n+    final Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n     assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n     assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:20 PM",
      "commitNameOld": "0cbe33506c92b790fd4dc866237d7e430a6c91dd",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.73,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 77,
      "functionName": "testHelpOptions",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,26 @@\n+@Test\r\n public void testHelpOptions() {\r\n     Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n     Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n     Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n     Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n     Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n     Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n     Options options \u003d new Options();\r\n     options.addOption(longOnly1);\r\n     options.addOption(longOnly2);\r\n     options.addOption(shortOnly1);\r\n     options.addOption(shortOnly2);\r\n     options.addOption(bothA);\r\n     options.addOption(bothB);\r\n     Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n     allOptions.add(longOnly1);\r\n     allOptions.add(longOnly2);\r\n     allOptions.add(shortOnly1);\r\n     allOptions.add(shortOnly2);\r\n     allOptions.add(bothA);\r\n     allOptions.add(bothB);\r\n     Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n     assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n     assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "4d49ed355c081eb0d8878841e849d9dd7aed2570": {
      "type": "Ybodychange",
      "commitMessage": "Raw types\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1440529 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/30/13 7:12 PM",
      "commitName": "4d49ed355c081eb0d8878841e849d9dd7aed2570",
      "commitAuthor": "Sebastian Bazley",
      "commitDateOld": "6/16/10 12:41 PM",
      "commitNameOld": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 959.31,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 70,
      "functionName": "testHelpOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,25 +1,25 @@\n public void testHelpOptions() {\r\n     Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n     Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n     Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n     Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n     Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n     Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n     Options options \u003d new Options();\r\n     options.addOption(longOnly1);\r\n     options.addOption(longOnly2);\r\n     options.addOption(shortOnly1);\r\n     options.addOption(shortOnly2);\r\n     options.addOption(bothA);\r\n     options.addOption(bothB);\r\n-    Collection allOptions \u003d new ArrayList();\r\n+    Collection\u003cOption\u003e allOptions \u003d new ArrayList\u003cOption\u003e();\r\n     allOptions.add(longOnly1);\r\n     allOptions.add(longOnly2);\r\n     allOptions.add(shortOnly1);\r\n     allOptions.add(shortOnly2);\r\n     allOptions.add(bothA);\r\n     allOptions.add(bothB);\r\n-    Collection helpOptions \u003d options.helpOptions();\r\n+    Collection\u003cOption\u003e helpOptions \u003d options.helpOptions();\r\n     assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n     assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection allOptions \u003d new ArrayList();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/java/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 70,
      "functionName": "testHelpOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/OptionsTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/OptionsTest.java"
      }
    },
    "0158f772b3ea94000054cd5b1fc0d0cda2f29a1b": {
      "type": "Yformatchange",
      "commitMessage": "Merged BuildTest into OptionsTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/08 9:42 PM",
      "commitName": "0158f772b3ea94000054cd5b1fc0d0cda2f29a1b",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08 3:57 PM",
      "commitNameOld": "05e7cd0a3266cb9d1a425be5107beb27fe171c2a",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection allOptions \u003d new ArrayList();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 70,
      "functionName": "testHelpOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "05e7cd0a3266cb9d1a425be5107beb27fe171c2a": {
      "type": "Yformatchange",
      "commitMessage": "Simplified Options.helpOptions(), the loop looking into the lonOpts wasn\u0027t necessary since all options are already in shortOpts\nMinor style \u0026 doc improvements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@661699 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/30/08 3:57 PM",
      "commitName": "05e7cd0a3266cb9d1a425be5107beb27fe171c2a",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/30/08 12:11 PM",
      "commitNameOld": "5f8a5705f94be11bbaaf6f6845d11814b02400c2",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection allOptions \u003d new ArrayList();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 31,
      "functionName": "testHelpOptions",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "0f52eff086c74ad246c23a82f01b39a39c107ffa": {
      "type": "Yintroduced",
      "commitMessage": "some bug fixes submitted by Rob, removed duff println, add new OptionsTest submitted by Rob\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129847 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/19/02 2:16 AM",
      "commitName": "0f52eff086c74ad246c23a82f01b39a39c107ffa",
      "commitAuthor": "John Keyes",
      "diff": "@@ -0,0 +1,25 @@\n+public void testHelpOptions() {\r\n+    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n+    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n+    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n+    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n+    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n+    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n+    Options options \u003d new Options();\r\n+    options.addOption(longOnly1);\r\n+    options.addOption(longOnly2);\r\n+    options.addOption(shortOnly1);\r\n+    options.addOption(shortOnly2);\r\n+    options.addOption(bothA);\r\n+    options.addOption(bothB);\r\n+    Collection allOptions \u003d new ArrayList();\r\n+    allOptions.add(longOnly1);\r\n+    allOptions.add(longOnly2);\r\n+    allOptions.add(shortOnly1);\r\n+    allOptions.add(shortOnly2);\r\n+    allOptions.add(bothA);\r\n+    allOptions.add(bothB);\r\n+    Collection helpOptions \u003d options.helpOptions();\r\n+    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n+    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testHelpOptions() {\r\n    Option longOnly1 \u003d OptionBuilder.withLongOpt(\"long-only1\").create();\r\n    Option longOnly2 \u003d OptionBuilder.withLongOpt(\"long-only2\").create();\r\n    Option shortOnly1 \u003d OptionBuilder.create(\"1\");\r\n    Option shortOnly2 \u003d OptionBuilder.create(\"2\");\r\n    Option bothA \u003d OptionBuilder.withLongOpt(\"bothA\").create(\"a\");\r\n    Option bothB \u003d OptionBuilder.withLongOpt(\"bothB\").create(\"b\");\r\n    Options options \u003d new Options();\r\n    options.addOption(longOnly1);\r\n    options.addOption(longOnly2);\r\n    options.addOption(shortOnly1);\r\n    options.addOption(shortOnly2);\r\n    options.addOption(bothA);\r\n    options.addOption(bothB);\r\n    Collection allOptions \u003d new ArrayList();\r\n    allOptions.add(longOnly1);\r\n    allOptions.add(longOnly2);\r\n    allOptions.add(shortOnly1);\r\n    allOptions.add(shortOnly2);\r\n    allOptions.add(bothA);\r\n    allOptions.add(bothB);\r\n    Collection helpOptions \u003d options.helpOptions();\r\n    assertTrue(\"Everything in all should be in help\", helpOptions.containsAll(allOptions));\r\n    assertTrue(\"Everything in help should be in all\", allOptions.containsAll(helpOptions));\r\n}",
      "path": "src/test/org/apache/commons/cli/OptionsTest.java",
      "functionStartLine": 95,
      "functionName": "testHelpOptions",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}