{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HelpFormatterTest.java",
  "functionName": "testOptionWithoutShortFormat2",
  "functionId": "testOptionWithoutShortFormat2",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 221,
  "functionEndLine": 293,
  "numCommitsSeen": 40,
  "timeTaken": 192,
  "changeHistory": [
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8",
    "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "38ab386d9d86c6cacea817954064bb25fba312aa",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce"
  ],
  "changeHistoryShort": {
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8": "Ybodychange",
    "4e8b3a2584ddac7411e20cdaca75b160787d7fa9": "Yformatchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "38ab386d9d86c6cacea817954064bb25fba312aa": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce": "Yintroduced"
  },
  "changeHistoryDetails": {
    "53972781993e79eb48f17cb67ac463ba7f1bc4c8": {
      "type": "Ybodychange",
      "commitMessage": "Use better JRE API\n",
      "commitDate": "9/16/23 12:45 AM",
      "commitName": "53972781993e79eb48f17cb67ac463ba7f1bc4c8",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/23/21 3:53 PM",
      "commitNameOld": "62b510f93283fee7225b56c95b6d017b8546367f",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 692.37,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    final Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    final HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String eol \u003d System.lineSeparator();\r\n    final StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + eol + \"       [-s \u003carg\u003e] [-t] [-v]\" + eol + \"header\" + eol + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + eol + \"     --config \u003carg\u003e   Use the specified configuration file\" + eol + \"  -h,--help           print this message\" + eol + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + eol + \"  -n,--new            Create NLT cache entries only for new items\" + eol + \"  -r,--results \u003carg\u003e  Number of results per item\" + eol + \"  -s,--server \u003carg\u003e   The NLT server address\" + eol + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + eol + \"  -v,--version        print version information\" + eol + \"footer\" + eol, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 221,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,27 @@\n @Test\r\n public void testOptionWithoutShortFormat2() {\r\n     final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n     final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n     final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n     final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n     final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n     final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n     final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n     final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n     final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n     final Options mOptions \u003d new Options();\r\n     mOptions.addOption(help);\r\n     mOptions.addOption(version);\r\n     mOptions.addOption(newRun);\r\n     mOptions.addOption(trackerRun);\r\n     mOptions.addOption(timeLimit);\r\n     mOptions.addOption(age);\r\n     mOptions.addOption(server);\r\n     mOptions.addOption(numResults);\r\n     mOptions.addOption(configFile);\r\n     final HelpFormatter formatter \u003d new HelpFormatter();\r\n-    final String eol \u003d System.getProperty(\"line.separator\");\r\n+    final String eol \u003d System.lineSeparator();\r\n     final StringWriter out \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n     assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + eol + \"       [-s \u003carg\u003e] [-t] [-v]\" + eol + \"header\" + eol + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + eol + \"     --config \u003carg\u003e   Use the specified configuration file\" + eol + \"  -h,--help           print this message\" + eol + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + eol + \"  -n,--new            Create NLT cache entries only for new items\" + eol + \"  -r,--results \u003carg\u003e  Number of results per item\" + eol + \"  -s,--server \u003carg\u003e   The NLT server address\" + eol + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + eol + \"  -v,--version        print version information\" + eol + \"footer\" + eol, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "4e8b3a2584ddac7411e20cdaca75b160787d7fa9": {
      "type": "Yformatchange",
      "commitMessage": "Sort members.\n",
      "commitDate": "10/2/21 11:07 PM",
      "commitName": "4e8b3a2584ddac7411e20cdaca75b160787d7fa9",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/2/21 11:04 PM",
      "commitNameOld": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    final Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    final HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String eol \u003d System.getProperty(\"line.separator\");\r\n    final StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + eol + \"       [-s \u003carg\u003e] [-t] [-v]\" + eol + \"header\" + eol + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + eol + \"     --config \u003carg\u003e   Use the specified configuration file\" + eol + \"  -h,--help           print this message\" + eol + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + eol + \"  -n,--new            Create NLT cache entries only for new items\" + eol + \"  -r,--results \u003carg\u003e  Number of results per item\" + eol + \"  -s,--server \u003carg\u003e   The NLT server address\" + eol + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + eol + \"  -v,--version        print version information\" + eol + \"footer\" + eol, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 221,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "12/28/20 6:44 PM",
      "commitNameOld": "c67275279176504a6f5fc556cfa247e1df02a580",
      "commitAuthorOld": "Arturo Bernal",
      "daysBetweenCommits": 278.18,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    final Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    final HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String eol \u003d System.getProperty(\"line.separator\");\r\n    final StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + eol + \"       [-s \u003carg\u003e] [-t] [-v]\" + eol + \"header\" + eol + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + eol + \"     --config \u003carg\u003e   Use the specified configuration file\" + eol + \"  -h,--help           print this message\" + eol + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + eol + \"  -n,--new            Create NLT cache entries only for new items\" + eol + \"  -r,--results \u003carg\u003e  Number of results per item\" + eol + \"  -s,--server \u003carg\u003e   The NLT server address\" + eol + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + eol + \"  -v,--version        print version information\" + eol + \"footer\" + eol, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 465,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,27 @@\n @Test\r\n public void testOptionWithoutShortFormat2() {\r\n     final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n     final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n     final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n     final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n     final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n     final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n     final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n     final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n     final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n     final Options mOptions \u003d new Options();\r\n     mOptions.addOption(help);\r\n     mOptions.addOption(version);\r\n     mOptions.addOption(newRun);\r\n     mOptions.addOption(trackerRun);\r\n     mOptions.addOption(timeLimit);\r\n     mOptions.addOption(age);\r\n     mOptions.addOption(server);\r\n     mOptions.addOption(numResults);\r\n     mOptions.addOption(configFile);\r\n     final HelpFormatter formatter \u003d new HelpFormatter();\r\n-    final String EOL \u003d System.getProperty(\"line.separator\");\r\n+    final String eol \u003d System.getProperty(\"line.separator\");\r\n     final StringWriter out \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n-    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n+    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + eol + \"       [-s \u003carg\u003e] [-t] [-v]\" + eol + \"header\" + eol + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + eol + \"     --config \u003carg\u003e   Use the specified configuration file\" + eol + \"  -h,--help           print this message\" + eol + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + eol + \"  -n,--new            Create NLT cache entries only for new items\" + eol + \"  -r,--results \u003carg\u003e  Number of results per item\" + eol + \"  -s,--server \u003carg\u003e   The NLT server address\" + eol + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + eol + \"  -v,--version        print version information\" + eol + \"footer\" + eol, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:38 PM",
      "commitNameOld": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 926.16,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    final Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    final HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    final StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 495,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "3/28/15 8:06 PM",
      "commitNameOld": "ec363cc653aaaa2c10b19e0ae880ede6084dd420",
      "commitAuthorOld": "Benedikt Ritter",
      "daysBetweenCommits": 799.94,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    final Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    final HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    final StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 495,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,27 @@\n @Test\r\n public void testOptionWithoutShortFormat2() {\r\n-    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n-    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n-    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n-    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n-    Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n-    Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n-    Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n-    Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n-    Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n-    Options mOptions \u003d new Options();\r\n+    final Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n+    final Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n+    final Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n+    final Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n+    final Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n+    final Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n+    final Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n+    final Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n+    final Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n+    final Options mOptions \u003d new Options();\r\n     mOptions.addOption(help);\r\n     mOptions.addOption(version);\r\n     mOptions.addOption(newRun);\r\n     mOptions.addOption(trackerRun);\r\n     mOptions.addOption(timeLimit);\r\n     mOptions.addOption(age);\r\n     mOptions.addOption(server);\r\n     mOptions.addOption(numResults);\r\n     mOptions.addOption(configFile);\r\n-    HelpFormatter formatter \u003d new HelpFormatter();\r\n+    final HelpFormatter formatter \u003d new HelpFormatter();\r\n     final String EOL \u003d System.getProperty(\"line.separator\");\r\n-    StringWriter out \u003d new StringWriter();\r\n+    final StringWriter out \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n     assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "38ab386d9d86c6cacea817954064bb25fba312aa": {
      "type": "Ybodychange",
      "commitMessage": "Add more descriptive methods to Option.Builder, adapt unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1447094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/18/13 12:32 AM",
      "commitName": "38ab386d9d86c6cacea817954064bb25fba312aa",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/6/13 12:57 PM",
      "commitNameOld": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 11.48,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n    Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n    Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n    Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n    Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n    Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 496,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,27 +1,27 @@\n @Test\r\n public void testOptionWithoutShortFormat2() {\r\n     Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n     Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n     Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n     Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n-    Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n-    Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n-    Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n-    Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n-    Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n+    Option timeLimit \u003d Option.builder(\"l\").longOpt(\"limit\").hasArg().valueSeparator().desc(\"Set time limit for execution, in mintues\").build();\r\n+    Option age \u003d Option.builder(\"a\").longOpt(\"age\").hasArg().valueSeparator().desc(\"Age (in days) of cache item before being recomputed\").build();\r\n+    Option server \u003d Option.builder(\"s\").longOpt(\"server\").hasArg().valueSeparator().desc(\"The NLT server address\").build();\r\n+    Option numResults \u003d Option.builder(\"r\").longOpt(\"results\").hasArg().valueSeparator().desc(\"Number of results per item\").build();\r\n+    Option configFile \u003d Option.builder().longOpt(\"config\").hasArg().valueSeparator().desc(\"Use the specified configuration file\").build();\r\n     Options mOptions \u003d new Options();\r\n     mOptions.addOption(help);\r\n     mOptions.addOption(version);\r\n     mOptions.addOption(newRun);\r\n     mOptions.addOption(trackerRun);\r\n     mOptions.addOption(timeLimit);\r\n     mOptions.addOption(age);\r\n     mOptions.addOption(server);\r\n     mOptions.addOption(numResults);\r\n     mOptions.addOption(configFile);\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     final String EOL \u003d System.getProperty(\"line.separator\");\r\n     StringWriter out \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n     assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/29/13 6:58 PM",
      "commitNameOld": "6ba1a28a39f42d411689d71bc11932c820cb4265",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 7.75,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testOptionWithoutShortFormat2() {\r\n    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n    Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n    Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n    Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n    Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n    Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 496,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,26 +1,27 @@\n+@Test\r\n public void testOptionWithoutShortFormat2() {\r\n     Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n     Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n     Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n     Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n     Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n     Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n     Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n     Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n     Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n     Options mOptions \u003d new Options();\r\n     mOptions.addOption(help);\r\n     mOptions.addOption(version);\r\n     mOptions.addOption(newRun);\r\n     mOptions.addOption(trackerRun);\r\n     mOptions.addOption(timeLimit);\r\n     mOptions.addOption(age);\r\n     mOptions.addOption(server);\r\n     mOptions.addOption(numResults);\r\n     mOptions.addOption(configFile);\r\n     HelpFormatter formatter \u003d new HelpFormatter();\r\n     final String EOL \u003d System.getProperty(\"line.separator\");\r\n     StringWriter out \u003d new StringWriter();\r\n     formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n     assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testOptionWithoutShortFormat2() {\r\n    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n    Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n    Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n    Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n    Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n    Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 384,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
        "newPath": "src/test/java/org/apache/commons/cli/HelpFormatterTest.java"
      }
    },
    "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce": {
      "type": "Yintroduced",
      "commitMessage": "Moved the tests related to the HelpFormatter in BugsTest into HelpFormatterTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@712642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/08 12:42 PM",
      "commitName": "1042ba35258c9fcfa9f14ccd240d0d1212a2e3ce",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,26 @@\n+public void testOptionWithoutShortFormat2() {\r\n+    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n+    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n+    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n+    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n+    Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n+    Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n+    Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n+    Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n+    Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n+    Options mOptions \u003d new Options();\r\n+    mOptions.addOption(help);\r\n+    mOptions.addOption(version);\r\n+    mOptions.addOption(newRun);\r\n+    mOptions.addOption(trackerRun);\r\n+    mOptions.addOption(timeLimit);\r\n+    mOptions.addOption(age);\r\n+    mOptions.addOption(server);\r\n+    mOptions.addOption(numResults);\r\n+    mOptions.addOption(configFile);\r\n+    HelpFormatter formatter \u003d new HelpFormatter();\r\n+    final String EOL \u003d System.getProperty(\"line.separator\");\r\n+    StringWriter out \u003d new StringWriter();\r\n+    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n+    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testOptionWithoutShortFormat2() {\r\n    Option help \u003d new Option(\"h\", \"help\", false, \"print this message\");\r\n    Option version \u003d new Option(\"v\", \"version\", false, \"print version information\");\r\n    Option newRun \u003d new Option(\"n\", \"new\", false, \"Create NLT cache entries only for new items\");\r\n    Option trackerRun \u003d new Option(\"t\", \"tracker\", false, \"Create NLT cache entries only for tracker items\");\r\n    Option timeLimit \u003d OptionBuilder.withLongOpt(\"limit\").hasArg().withValueSeparator().withDescription(\"Set time limit for execution, in mintues\").create(\"l\");\r\n    Option age \u003d OptionBuilder.withLongOpt(\"age\").hasArg().withValueSeparator().withDescription(\"Age (in days) of cache item before being recomputed\").create(\"a\");\r\n    Option server \u003d OptionBuilder.withLongOpt(\"server\").hasArg().withValueSeparator().withDescription(\"The NLT server address\").create(\"s\");\r\n    Option numResults \u003d OptionBuilder.withLongOpt(\"results\").hasArg().withValueSeparator().withDescription(\"Number of results per item\").create(\"r\");\r\n    Option configFile \u003d OptionBuilder.withLongOpt(\"config\").hasArg().withValueSeparator().withDescription(\"Use the specified configuration file\").create();\r\n    Options mOptions \u003d new Options();\r\n    mOptions.addOption(help);\r\n    mOptions.addOption(version);\r\n    mOptions.addOption(newRun);\r\n    mOptions.addOption(trackerRun);\r\n    mOptions.addOption(timeLimit);\r\n    mOptions.addOption(age);\r\n    mOptions.addOption(server);\r\n    mOptions.addOption(numResults);\r\n    mOptions.addOption(configFile);\r\n    HelpFormatter formatter \u003d new HelpFormatter();\r\n    final String EOL \u003d System.getProperty(\"line.separator\");\r\n    StringWriter out \u003d new StringWriter();\r\n    formatter.printHelp(new PrintWriter(out), 80, \"commandline\", \"header\", mOptions, 2, 2, \"footer\", true);\r\n    assertEquals(\"usage: commandline [-a \u003carg\u003e] [--config \u003carg\u003e] [-h] [-l \u003carg\u003e] [-n] [-r \u003carg\u003e]\" + EOL + \"       [-s \u003carg\u003e] [-t] [-v]\" + EOL + \"header\" + EOL + \"  -a,--age \u003carg\u003e      Age (in days) of cache item before being recomputed\" + EOL + \"     --config \u003carg\u003e   Use the specified configuration file\" + EOL + \"  -h,--help           print this message\" + EOL + \"  -l,--limit \u003carg\u003e    Set time limit for execution, in mintues\" + EOL + \"  -n,--new            Create NLT cache entries only for new items\" + EOL + \"  -r,--results \u003carg\u003e  Number of results per item\" + EOL + \"  -s,--server \u003carg\u003e   The NLT server address\" + EOL + \"  -t,--tracker        Create NLT cache entries only for tracker items\" + EOL + \"  -v,--version        print version information\" + EOL + \"footer\" + EOL, out.toString());\r\n}",
      "path": "src/test/org/apache/commons/cli/HelpFormatterTest.java",
      "functionStartLine": 384,
      "functionName": "testOptionWithoutShortFormat2",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}