{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractParserTestCase.java",
  "functionName": "testMissingRequiredOption",
  "functionId": "testMissingRequiredOption",
  "sourceFilePath": "src/test/java/org/apache/commons/cli/AbstractParserTestCase.java",
  "functionAnnotation": "@Test",
  "functionDoc": "",
  "functionStartLine": 391,
  "functionEndLine": 407,
  "numCommitsSeen": 48,
  "timeTaken": 278,
  "changeHistory": [
    "4891e50c9c0f4c12be552420343e581f3cf17426",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "c12260c05ebcd27558265395df79b8b049534fbd",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "60835e2f29d4ec09eead7789405d99f92c36a29e",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
    "0e45f911c8269f0888596fe62be35a18e6e3fb82",
    "28a8c187f1423b5f10654aba41dc2e8ad4719c81",
    "fea35870b69c0d37ab36ab6783edbc7aacc0842c",
    "66d0ae6216730abd8bd736e210be73229c8e807b",
    "aae50c585ec3ac33c6a9af792e80378904a73195"
  ],
  "changeHistoryShort": {
    "4891e50c9c0f4c12be552420343e581f3cf17426": "Yfilerename",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ybodychange",
    "c12260c05ebcd27558265395df79b8b049534fbd": "Yformatchange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "60835e2f29d4ec09eead7789405d99f92c36a29e": "Yannotationchange",
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": "Yfilerename",
    "0e45f911c8269f0888596fe62be35a18e6e3fb82": "Ymultichange(Ymovefromfile,Ybodychange)",
    "28a8c187f1423b5f10654aba41dc2e8ad4719c81": "Ybodychange",
    "fea35870b69c0d37ab36ab6783edbc7aacc0842c": "Ybodychange",
    "66d0ae6216730abd8bd736e210be73229c8e807b": "Ybodychange",
    "aae50c585ec3ac33c6a9af792e80378904a73195": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4891e50c9c0f4c12be552420343e581f3cf17426": {
      "type": "Yfilerename",
      "commitMessage": "Better class name\n",
      "commitDate": "8/18/23 5:45 PM",
      "commitName": "4891e50c9c0f4c12be552420343e581f3cf17426",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "8/18/23 12:35 PM",
      "commitNameOld": "16ccfbd55b63f200141ddf8abc3f6704927e5cd3",
      "commitAuthorOld": "dependabot[bot]",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testMissingRequiredOption() {\r\n    final String[] args \u003d { \"-a\" };\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (final MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (final ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/AbstractParserTestCase.java",
      "functionStartLine": 382,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
        "newPath": "src/test/java/org/apache/commons/cli/AbstractParserTestCase.java"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ybodychange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "3/5/21 4:39 AM",
      "commitNameOld": "98d06d37bc7058bbfb2704c9620669c66e279f4a",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 211.77,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testMissingRequiredOption() {\r\n    final String[] args \u003d { \"-a\" };\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (final MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (final ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
      "functionStartLine": 611,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n @Test\r\n public void testMissingRequiredOption() {\r\n-    final String[] args \u003d new String[] { \"-a\" };\r\n+    final String[] args \u003d { \"-a\" };\r\n     final Options options \u003d new Options();\r\n     options.addOption(\"a\", \"enable-a\", false, null);\r\n     options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n     try {\r\n         parser.parse(options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (final MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n         assertTrue(e.getMissingOptions().contains(\"b\"));\r\n     } catch (final ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "c12260c05ebcd27558265395df79b8b049534fbd": {
      "type": "Yformatchange",
      "commitMessage": "Remove trailing white spaces on all lines.\n",
      "commitDate": "12/18/19 11:28 PM",
      "commitName": "c12260c05ebcd27558265395df79b8b049534fbd",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "6/5/17 7:38 PM",
      "commitNameOld": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 926.16,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testMissingRequiredOption() {\r\n    final String[] args \u003d new String[] { \"-a\" };\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (final MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (final ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
      "functionStartLine": 700,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {}
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "2/6/13 12:57 PM",
      "commitNameOld": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 1580.24,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testMissingRequiredOption() {\r\n    final String[] args \u003d new String[] { \"-a\" };\r\n    final Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (final MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (final ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
      "functionStartLine": 700,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,16 +1,16 @@\n @Test\r\n public void testMissingRequiredOption() {\r\n-    String[] args \u003d new String[] { \"-a\" };\r\n-    Options options \u003d new Options();\r\n+    final String[] args \u003d new String[] { \"-a\" };\r\n+    final Options options \u003d new Options();\r\n     options.addOption(\"a\", \"enable-a\", false, null);\r\n     options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n     try {\r\n         parser.parse(options, args);\r\n         fail(\"exception should have been thrown\");\r\n-    } catch (MissingOptionException e) {\r\n+    } catch (final MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n         assertTrue(e.getMissingOptions().contains(\"b\"));\r\n-    } catch (ParseException e) {\r\n+    } catch (final ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "60835e2f29d4ec09eead7789405d99f92c36a29e": {
      "type": "Yannotationchange",
      "commitMessage": "[CLI-227] Convert unit tests to junit 4, upgrade junit to 4.11, move authors to pom.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1442904 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/6/13 12:57 PM",
      "commitName": "60835e2f29d4ec09eead7789405d99f92c36a29e",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "1/30/13 7:39 PM",
      "commitNameOld": "9d05157309c890b678bd615dce47911350d0dd91",
      "commitAuthorOld": "Sebastian Bazley",
      "daysBetweenCommits": 6.72,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "@Test\r\npublic void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
      "functionStartLine": 700,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "@Test",
      "functionDoc": "",
      "diff": "@@ -1,15 +1,16 @@\n+@Test\r\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n     Options options \u003d new Options();\r\n     options.addOption(\"a\", \"enable-a\", false, null);\r\n     options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n     try {\r\n         parser.parse(options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n         assertTrue(e.getMissingOptions().contains(\"b\"));\r\n     } catch (ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "",
        "newValue": "@Test"
      }
    },
    "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:41 PM",
      "commitName": "cd745ecf52fb2fe8fed1c67fc9149e4be11a73f0",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:36 PM",
      "commitNameOld": "106f3b8dd48d32cbfcba4a42e1161505c2e3cac6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/java/org/apache/commons/cli/ParserTestCase.java",
      "functionStartLine": 655,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/test/org/apache/commons/cli/ParserTestCase.java",
        "newPath": "src/test/java/org/apache/commons/cli/ParserTestCase.java"
      }
    },
    "0e45f911c8269f0888596fe62be35a18e6e3fb82": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Merged ParseRequiredTest into ParserTestCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@778920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/27/09 1:58 AM",
      "commitName": "0e45f911c8269f0888596fe62be35a18e6e3fb82",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Merged ParseRequiredTest into ParserTestCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@778920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/27/09 1:58 AM",
          "commitName": "0e45f911c8269f0888596fe62be35a18e6e3fb82",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/27/09 12:39 AM",
          "commitNameOld": "58d89c0a5b5eb446cae4c494eeb6180b9ac965ae",
          "commitAuthorOld": "Jim Jagielski",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
          "path": "src/test/org/apache/commons/cli/ParserTestCase.java",
          "functionStartLine": 429,
          "functionName": "testMissingRequiredOption",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,15 @@\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n+    Options options \u003d new Options();\r\n+    options.addOption(\"a\", \"enable-a\", false, null);\r\n+    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n     try {\r\n-        CommandLine cl \u003d parser.parse(_options, args);\r\n+        parser.parse(options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n         assertTrue(e.getMissingOptions().contains(\"b\"));\r\n     } catch (ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldPath": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
            "newPath": "src/test/org/apache/commons/cli/ParserTestCase.java",
            "oldMethodName": "testMissingRequiredOption",
            "newMethodName": "testMissingRequiredOption"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Merged ParseRequiredTest into ParserTestCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@778920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "5/27/09 1:58 AM",
          "commitName": "0e45f911c8269f0888596fe62be35a18e6e3fb82",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "5/27/09 12:39 AM",
          "commitNameOld": "58d89c0a5b5eb446cae4c494eeb6180b9ac965ae",
          "commitAuthorOld": "Jim Jagielski",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    Options options \u003d new Options();\r\n    options.addOption(\"a\", \"enable-a\", false, null);\r\n    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n    try {\r\n        parser.parse(options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
          "path": "src/test/org/apache/commons/cli/ParserTestCase.java",
          "functionStartLine": 429,
          "functionName": "testMissingRequiredOption",
          "functionAnnotation": "",
          "functionDoc": "",
          "diff": "@@ -1,12 +1,15 @@\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n+    Options options \u003d new Options();\r\n+    options.addOption(\"a\", \"enable-a\", false, null);\r\n+    options.addOption(OptionBuilder.withLongOpt(\"bfile\").hasArg().isRequired().create(\u0027b\u0027));\r\n     try {\r\n-        CommandLine cl \u003d parser.parse(_options, args);\r\n+        parser.parse(options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n         assertTrue(e.getMissingOptions().contains(\"b\"));\r\n     } catch (ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "28a8c187f1423b5f10654aba41dc2e8ad4719c81": {
      "type": "Ybodychange",
      "commitMessage": "Changed MissingOptionException to include the list of missing options and build itself the exception message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@678662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/22/08 10:30 AM",
      "commitName": "28a8c187f1423b5f10654aba41dc2e8ad4719c81",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "5/29/08 7:11 PM",
      "commitNameOld": "f887e8b6e2ebb519c6d0e51b1ddae6bd356dc3c0",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 53.64,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    try {\r\n        CommandLine cl \u003d parser.parse(_options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
      "functionStartLine": 69,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,12 @@\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n     try {\r\n         CommandLine cl \u003d parser.parse(_options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (MissingOptionException e) {\r\n         assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n+        assertTrue(e.getMissingOptions().contains(\"b\"));\r\n     } catch (ParseException e) {\r\n         fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "fea35870b69c0d37ab36ab6783edbc7aacc0842c": {
      "type": "Ybodychange",
      "commitMessage": "Adding comma delimited whitespace to the exception message that lists missing required options as requested in CLI-149. I didn\u0027t add the requested -, as it could be -- or some other prefix. Unit tests also added. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/branches/cli-1.x@654431 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "5/8/08 9:56 AM",
      "commitName": "fea35870b69c0d37ab36ab6783edbc7aacc0842c",
      "commitAuthor": "Henri Yandell",
      "commitDateOld": "5/28/07 11:01 AM",
      "commitNameOld": "79a1091bd0a2dba7decacd23beac8104f3b5a5cb",
      "commitAuthorOld": "Henri Yandell",
      "daysBetweenCommits": 345.95,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    try {\r\n        CommandLine cl \u003d parser.parse(_options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (MissingOptionException e) {\r\n        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n    } catch (ParseException e) {\r\n        fail(\"expected to catch MissingOptionException\");\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
      "functionStartLine": 99,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n     try {\r\n         CommandLine cl \u003d parser.parse(_options, args);\r\n         fail(\"exception should have been thrown\");\r\n+    } catch (MissingOptionException e) {\r\n+        assertEquals(\"Incorrect exception message\", \"Missing required option: b\", e.getMessage());\r\n     } catch (ParseException e) {\r\n-        if (!(e instanceof MissingOptionException)) {\r\n-            fail(\"expected to catch MissingOptionException\");\r\n-        }\r\n+        fail(\"expected to catch MissingOptionException\");\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "66d0ae6216730abd8bd736e210be73229c8e807b": {
      "type": "Ybodychange",
      "commitMessage": "implemented the parser factory, added new unit tests for the GnuParser, a good deal of refactoring for both parsers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129778 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "7/5/02 1:32 AM",
      "commitName": "66d0ae6216730abd8bd736e210be73229c8e807b",
      "commitAuthor": "John Keyes",
      "commitDateOld": "6/17/02 2:00 AM",
      "commitNameOld": "4cca25d72b216bfc8f2e75e4a99afb608ceb6df8",
      "commitAuthorOld": "John Keyes",
      "daysBetweenCommits": 17.98,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    try {\r\n        CommandLine cl \u003d parser.parse(_options, args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (ParseException e) {\r\n        if (!(e instanceof MissingOptionException)) {\r\n            fail(\"expected to catch MissingOptionException\");\r\n        }\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
      "functionStartLine": 93,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "",
      "functionDoc": "",
      "diff": "@@ -1,11 +1,11 @@\n public void testMissingRequiredOption() {\r\n     String[] args \u003d new String[] { \"-a\" };\r\n     try {\r\n-        CommandLine cl \u003d _options.parse(args);\r\n+        CommandLine cl \u003d parser.parse(_options, args);\r\n         fail(\"exception should have been thrown\");\r\n     } catch (ParseException e) {\r\n         if (!(e instanceof MissingOptionException)) {\r\n             fail(\"expected to catch MissingOptionException\");\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "aae50c585ec3ac33c6a9af792e80378904a73195": {
      "type": "Yintroduced",
      "commitMessage": "moved cli over from the sandbox to commons proper\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/cli/trunk@129767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/10/02 9:01 PM",
      "commitName": "aae50c585ec3ac33c6a9af792e80378904a73195",
      "commitAuthor": "James Strachan",
      "diff": "@@ -0,0 +1,11 @@\n+public void testMissingRequiredOption() {\r\n+    String[] args \u003d new String[] { \"-a\" };\r\n+    try {\r\n+        CommandLine cl \u003d _options.parse(args);\r\n+        fail(\"exception should have been thrown\");\r\n+    } catch (ParseException e) {\r\n+        if (!(e instanceof MissingOptionException)) {\r\n+            fail(\"expected to catch MissingOptionException\");\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public void testMissingRequiredOption() {\r\n    String[] args \u003d new String[] { \"-a\" };\r\n    try {\r\n        CommandLine cl \u003d _options.parse(args);\r\n        fail(\"exception should have been thrown\");\r\n    } catch (ParseException e) {\r\n        if (!(e instanceof MissingOptionException)) {\r\n            fail(\"expected to catch MissingOptionException\");\r\n        }\r\n    }\r\n}",
      "path": "src/test/org/apache/commons/cli/ParseRequiredTest.java",
      "functionStartLine": 92,
      "functionName": "testMissingRequiredOption",
      "functionAnnotation": "",
      "functionDoc": ""
    }
  }
}