{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Option.java",
  "functionName": "valueSeparator",
  "functionId": "$valueSeparator___valueSeparator-char(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/Option.java",
  "functionAnnotation": "",
  "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param valueSeparator The value separator.\r\n@return this builder, to allow method chaining\r\n",
  "functionStartLine": 269,
  "functionEndLine": 272,
  "numCommitsSeen": 124,
  "timeTaken": 272,
  "changeHistory": [
    "f0d54de5fceedd46331870f22c57d159e784218b",
    "8dcf11911ab73ddb5455853a31149a00549261b5",
    "cfd100d631d2c960a2d109fdddb2bf8e9db44c27",
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "8c14cb4b115b3bbb13f9702ddd3c13d66e073817",
    "38ab386d9d86c6cacea817954064bb25fba312aa",
    "df52eee396b1e8ce24fd1ec34752e1049618255a"
  ],
  "changeHistoryShort": {
    "f0d54de5fceedd46331870f22c57d159e784218b": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
    "8dcf11911ab73ddb5455853a31149a00549261b5": "Ydocchange",
    "cfd100d631d2c960a2d109fdddb2bf8e9db44c27": "Ybodychange",
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Ydocchange",
    "8c14cb4b115b3bbb13f9702ddd3c13d66e073817": "Ydocchange",
    "38ab386d9d86c6cacea817954064bb25fba312aa": "Ydocchange",
    "df52eee396b1e8ce24fd1ec34752e1049618255a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0d54de5fceedd46331870f22c57d159e784218b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Ydocchange)",
      "commitMessage": "Better parameter names\n",
      "commitDate": "8/16/23 2:16 PM",
      "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
      "commitAuthor": "Gary Gregory",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder valueSeparator(final char valueSeparator) {\r\n    this.valueSeparator \u003d valueSeparator;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 268,
          "functionName": "valueSeparator",
          "functionAnnotation": "",
          "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param valueSeparator The value separator.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder valueSeparator(final char sep) {\r\n-    valueSeparator \u003d sep;\r\n+public Builder valueSeparator(final char valueSeparator) {\r\n+    this.valueSeparator \u003d valueSeparator;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[sep-char(modifiers-final)]",
            "newValue": "[valueSeparator-char(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder valueSeparator(final char valueSeparator) {\r\n    this.valueSeparator \u003d valueSeparator;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 268,
          "functionName": "valueSeparator",
          "functionAnnotation": "",
          "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param valueSeparator The value separator.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder valueSeparator(final char sep) {\r\n-    valueSeparator \u003d sep;\r\n+public Builder valueSeparator(final char valueSeparator) {\r\n+    this.valueSeparator \u003d valueSeparator;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        },
        {
          "type": "Ydocchange",
          "commitMessage": "Better parameter names\n",
          "commitDate": "8/16/23 2:16 PM",
          "commitName": "f0d54de5fceedd46331870f22c57d159e784218b",
          "commitAuthor": "Gary Gregory",
          "commitDateOld": "7/6/23 10:35 PM",
          "commitNameOld": "ab9a0f92ff10ad16af0045976f99692beea9081d",
          "commitAuthorOld": "Gary Gregory",
          "daysBetweenCommits": 40.65,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "actualSource": "public Builder valueSeparator(final char valueSeparator) {\r\n    this.valueSeparator \u003d valueSeparator;\r\n    return this;\r\n}",
          "path": "src/main/java/org/apache/commons/cli/Option.java",
          "functionStartLine": 268,
          "functionName": "valueSeparator",
          "functionAnnotation": "",
          "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param valueSeparator The value separator.\r\n@return this builder, to allow method chaining\r\n",
          "diff": "@@ -1,4 +1,4 @@\n-public Builder valueSeparator(final char sep) {\r\n-    valueSeparator \u003d sep;\r\n+public Builder valueSeparator(final char valueSeparator) {\r\n+    this.valueSeparator \u003d valueSeparator;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
            "newValue": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param valueSeparator The value separator.\r\n@return this builder, to allow method chaining\r\n"
          }
        }
      ]
    },
    "8dcf11911ab73ddb5455853a31149a00549261b5": {
      "type": "Ydocchange",
      "commitMessage": "Deduplicate; better param name; close HTML tags in Javadoc.\n",
      "commitDate": "10/22/21 3:56 PM",
      "commitName": "8dcf11911ab73ddb5455853a31149a00549261b5",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/20/21 3:11 PM",
      "commitNameOld": "591af95e0a51d067f69f0ddf1a0ac54ef5c04842",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valueSeparator \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 266,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "cfd100d631d2c960a2d109fdddb2bf8e9db44c27": {
      "type": "Ybodychange",
      "commitMessage": "Better internal names.\n",
      "commitDate": "10/4/21 9:53 PM",
      "commitName": "cfd100d631d2c960a2d109fdddb2bf8e9db44c27",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/4/21 8:41 PM",
      "commitNameOld": "47231757c0e1c5b201889e8f3607470321b60e48",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valueSeparator \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 248,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "@@ -1,4 +1,4 @@\n public Builder valueSeparator(final char sep) {\r\n-    valuesep \u003d sep;\r\n+    valueSeparator \u003d sep;\r\n     return this;\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/3/21 2:39 AM",
      "commitNameOld": "3d83402d6fa39224ab6650f6a011322e7ac4ab5a",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valuesep \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 247,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "The Option will use {@code sep} as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Ydocchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "1/17/21 5:38 PM",
      "commitNameOld": "e20023d55962858ec6cd3d786686a00192959a9b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 258.23,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valuesep \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 838,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs()\r\n                                .valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0];  // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to separate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs().valueSeparator(\u0027\u003d\u0027).build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0]; // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "8c14cb4b115b3bbb13f9702ddd3c13d66e073817": {
      "type": "Ydocchange",
      "commitMessage": "[CLI-234] Fixed javadoc example of Option.Builder.valueSeparator(char). Thanks to Greg Thomas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1544827 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/23/13 6:16 PM",
      "commitName": "8c14cb4b115b3bbb13f9702ddd3c13d66e073817",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "11/23/13 4:03 PM",
      "commitNameOld": "ce5ebdf348d9b1d2e9c45d22c0d9cf582dcd059c",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valuesep \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 951,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs()\r\n                                .valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0];  // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\n\r\nString args \u003d \"-Dkey\u003dvalue\";\r\nCommandLine line \u003d parser.parse(args);\r\nString propertyName \u003d opt.getValue(0);  // will be \"key\"\r\nString propertyValue \u003d opt.getValue(1); // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").hasArgs()\r\n                                .valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\nOptions options \u003d new Options();\r\noptions.addOption(opt);\r\nString[] args \u003d {\"-Dkey\u003dvalue\"};\r\nCommandLineParser parser \u003d new DefaultParser();\r\nCommandLine line \u003d parser.parse(options, args);\r\nString propertyName \u003d line.getOptionValues(\"D\")[0];  // will be \"key\"\r\nString propertyValue \u003d line.getOptionValues(\"D\")[1]; // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "38ab386d9d86c6cacea817954064bb25fba312aa": {
      "type": "Ydocchange",
      "commitMessage": "Add more descriptive methods to Option.Builder, adapt unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1447094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/18/13 12:32 AM",
      "commitName": "38ab386d9d86c6cacea817954064bb25fba312aa",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "2/18/13 12:12 AM",
      "commitNameOld": "639e070cfe87ea05f3aa618553e7971ccfaec0b7",
      "commitAuthorOld": "Thomas Neidhart",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valuesep \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 959,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\n\r\nString args \u003d \"-Dkey\u003dvalue\";\r\nCommandLine line \u003d parser.parse(args);\r\nString propertyName \u003d opt.getValue(0);  // will be \"key\"\r\nString propertyValue \u003d opt.getValue(1); // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the value separator. For example if the argument value\r\nwas a Java property, the value separator would be \u0027\u003d\u0027.\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n",
        "newValue": "The Option will use \u003ccode\u003esep\u003c/code\u003e as a means to\r\nseparate argument values.\r\n\u003cp\u003e\r\n\u003cb\u003eExample:\u003c/b\u003e\r\n\u003cpre\u003e\r\nOption opt \u003d Option.builder(\"D\").valueSeparator(\u0027\u003d\u0027)\r\n                                .build();\r\n\r\nString args \u003d \"-Dkey\u003dvalue\";\r\nCommandLine line \u003d parser.parse(args);\r\nString propertyName \u003d opt.getValue(0);  // will be \"key\"\r\nString propertyValue \u003d opt.getValue(1); // will be \"value\"\r\n\u003c/pre\u003e\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
      }
    },
    "df52eee396b1e8ce24fd1ec34752e1049618255a": {
      "type": "Yintroduced",
      "commitMessage": "[CLI-224] Added new fluent builder API to Option, deprecating OptionBuilder, adapting the PatternOptionBuilder to use the new API, thanks to Duncan Jones.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1444720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "2/11/13 12:14 PM",
      "commitName": "df52eee396b1e8ce24fd1ec34752e1049618255a",
      "commitAuthor": "Thomas Neidhart",
      "diff": "@@ -0,0 +1,4 @@\n+public Builder valueSeparator(final char sep) {\r\n+    valuesep \u003d sep;\r\n+    return this;\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "public Builder valueSeparator(final char sep) {\r\n    valuesep \u003d sep;\r\n    return this;\r\n}",
      "path": "src/main/java/org/apache/commons/cli/Option.java",
      "functionStartLine": 889,
      "functionName": "valueSeparator",
      "functionAnnotation": "",
      "functionDoc": "Sets the value separator. For example if the argument value\r\nwas a Java property, the value separator would be \u0027\u003d\u0027.\r\n\r\n@param sep The value separator.\r\n@return this builder, to allow method chaining\r\n"
    }
  }
}