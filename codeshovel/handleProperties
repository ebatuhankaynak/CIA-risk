{
  "origin": "codeshovel",
  "repositoryName": "commons-cli",
  "repositoryPath": "D:/_SELEN/_2022-2023/CS588/GitHub_Dataset/commons-cli/commons-cli/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultParser.java",
  "functionName": "handleProperties",
  "functionId": "handleProperties___properties-Properties(modifiers-final)",
  "sourceFilePath": "src/main/java/org/apache/commons/cli/DefaultParser.java",
  "functionAnnotation": "",
  "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n",
  "functionStartLine": 414,
  "functionEndLine": 448,
  "numCommitsSeen": 47,
  "timeTaken": 373,
  "changeHistory": [
    "44173949e8165537b201d4efd024e31e6e8b06eb",
    "9539506e87648d753c44b68b3dfbdd1938c09315",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
    "357a8b0b8f1090db29e0d541a9419f570a78457b",
    "ea85e69e93ba4661412aecb80d22b9de60885307",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4",
    "324b7f901b91614927926a5bab1d9e0e2325f018",
    "5560a086886c4d6dba2c30eb75e57e3167765c6e",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df",
    "a2cf820dd69e55050a8db004c305a6133c3feb2e"
  ],
  "changeHistoryShort": {
    "44173949e8165537b201d4efd024e31e6e8b06eb": "Ybodychange",
    "9539506e87648d753c44b68b3dfbdd1938c09315": "Ydocchange",
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": "Yformatchange",
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": "Yparametermetachange",
    "357a8b0b8f1090db29e0d541a9419f570a78457b": "Ybodychange",
    "ea85e69e93ba4661412aecb80d22b9de60885307": "Ybodychange",
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": "Yformatchange",
    "324b7f901b91614927926a5bab1d9e0e2325f018": "Ybodychange",
    "5560a086886c4d6dba2c30eb75e57e3167765c6e": "Ymultichange(Yexceptionschange,Ybodychange)",
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": "Yfilerename",
    "a2cf820dd69e55050a8db004c305a6133c3feb2e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "44173949e8165537b201d4efd024e31e6e8b06eb": {
      "type": "Ybodychange",
      "commitMessage": "CLI-254: \"test\" gets parsed as test, quotes die :-( (#58)\n\n* CLI-254 \"test\" gets parsed as test, quotes die :-(\r\n\r\n* address review comments, improve backwards compatibility",
      "commitDate": "10/17/21 5:37 PM",
      "commitName": "44173949e8165537b201d4efd024e31e6e8b06eb",
      "commitAuthor": "Istvan Toth",
      "commitDateOld": "10/4/21 12:41 AM",
      "commitNameOld": "cbb7227c1f19e9b72e9ab65230d3fce570bf9f8b",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 13.71,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(value));\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 313,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,26 +1,26 @@\n private void handleProperties(final Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         final String option \u003d e.nextElement().toString();\r\n         final Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n         final OptionGroup group \u003d options.getOptionGroup(opt);\r\n         final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             final String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n-                    opt.addValueForProcessing(value);\r\n+                    opt.addValueForProcessing(stripLeadingAndTrailingQuotesDefaultOff(value));\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             handleOption(opt);\r\n             currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "9539506e87648d753c44b68b3dfbdd1938c09315": {
      "type": "Ydocchange",
      "commitMessage": "Javadoc: Use @code instead of HTML tags.\n",
      "commitDate": "10/4/21 12:32 AM",
      "commitName": "9539506e87648d753c44b68b3dfbdd1938c09315",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "10/3/21 2:32 AM",
      "commitNameOld": "b805e90dd082b4549ef4d565d13c6db8fdb96a5e",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 0.92,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 294,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldValue": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
        "newValue": "Sets the values of Options using the values in {@code properties}.\r\n\r\n@param properties The value properties to be processed.\r\n"
      }
    },
    "bc0edc47dbf47cdaa3485cfb724982f377c900df": {
      "type": "Yformatchange",
      "commitMessage": "Clean ups.\n\n- maven-checkstyle-plugin 3.1.1 -\u003e 3.1.2.\n- checkstyle -\u003e 9.0\n- Updates for 21st century.\n- No need to nest else clause.\n- Use simple array declarations.\n- Use valueOf instead of new for Numbers.\n- Consistent formatting.\n- Remove some inline comments //-----...\n",
      "commitDate": "10/2/21 11:04 PM",
      "commitName": "bc0edc47dbf47cdaa3485cfb724982f377c900df",
      "commitAuthor": "Gary Gregory",
      "commitDateOld": "7/29/21 10:49 PM",
      "commitNameOld": "81cf67387da844052aaa4c6feb4c8b290308e0eb",
      "commitAuthorOld": "Gary Gregory",
      "daysBetweenCommits": 65.01,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 180,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c": {
      "type": "Yparametermetachange",
      "commitMessage": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797674 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:38 PM",
      "commitName": "5fb9e5009a8cdc7366b7a762f0e43dc47decf67c",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "6/5/17 7:37 PM",
      "commitNameOld": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(final Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 140,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,26 +1,26 @@\n-private void handleProperties(Properties properties) throws ParseException {\r\n+private void handleProperties(final Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         final String option \u003d e.nextElement().toString();\r\n         final Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n         final OptionGroup group \u003d options.getOptionGroup(opt);\r\n         final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             final String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             handleOption(opt);\r\n             currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {
        "oldValue": "[properties-Properties]",
        "newValue": "[properties-Properties(modifiers-final)]"
      }
    },
    "357a8b0b8f1090db29e0d541a9419f570a78457b": {
      "type": "Ybodychange",
      "commitMessage": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1797673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/5/17 7:37 PM",
      "commitName": "357a8b0b8f1090db29e0d541a9419f570a78457b",
      "commitAuthor": "Gary D. Gregory",
      "commitDateOld": "5/27/17 4:54 AM",
      "commitNameOld": "89080e24891985d691e271fdd33734e493072bd9",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 9.61,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        final String option \u003d e.nextElement().toString();\r\n        final Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            final String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 140,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,26 +1,26 @@\n private void handleProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n-    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n-        String option \u003d e.nextElement().toString();\r\n-        Option opt \u003d options.getOption(option);\r\n+    for (final Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+        final String option \u003d e.nextElement().toString();\r\n+        final Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n-        OptionGroup group \u003d options.getOptionGroup(opt);\r\n-        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n+        final OptionGroup group \u003d options.getOptionGroup(opt);\r\n+        final boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n-            String value \u003d properties.getProperty(option);\r\n+            final String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             handleOption(opt);\r\n             currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "ea85e69e93ba4661412aecb80d22b9de60885307": {
      "type": "Ybodychange",
      "commitMessage": "Added javadoc for member fields, formatting, fix eclipse warning wrt raw types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1439421 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "1/28/13 4:24 PM",
      "commitName": "ea85e69e93ba4661412aecb80d22b9de60885307",
      "commitAuthor": "Thomas Neidhart",
      "commitDateOld": "5/28/12 4:19 PM",
      "commitNameOld": "10418707f3dd7819180bd3e9977f902f535bf347",
      "commitAuthorOld": "Gary D. Gregory",
      "daysBetweenCommits": 245.05,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 141,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,26 +1,26 @@\n private void handleProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n-    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+    for (Enumeration\u003c?\u003e e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         Option opt \u003d options.getOption(option);\r\n         if (opt \u003d\u003d null) {\r\n             throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n         }\r\n         OptionGroup group \u003d options.getOptionGroup(opt);\r\n         boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n         if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             handleOption(opt);\r\n             currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5b098dec44567a760c220c1e0cd6bee29262c2c4": {
      "type": "Yformatchange",
      "commitMessage": "trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@1095657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "4/21/11 2:13 PM",
      "commitName": "5b098dec44567a760c220c1e0cd6bee29262c2c4",
      "commitAuthor": "Simone Tripodi",
      "commitDateOld": "4/12/11 9:57 PM",
      "commitNameOld": "a1b5d44432c057cf675f051bb20379937565f4ef",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 8.68,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 137,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {}
    },
    "324b7f901b91614927926a5bab1d9e0e2325f018": {
      "type": "Ybodychange",
      "commitMessage": "Fixed the bugs with the default options and the option groups (CLI-203 and CLI-204)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/10 10:57 AM",
      "commitName": "324b7f901b91614927926a5bab1d9e0e2325f018",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/17/10 1:59 AM",
      "commitNameOld": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.37,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        Option opt \u003d options.getOption(option);\r\n        if (opt \u003d\u003d null) {\r\n            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n        }\r\n        OptionGroup group \u003d options.getOptionGroup(opt);\r\n        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 139,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "@@ -1,21 +1,26 @@\n private void handleProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n-        if (!cmd.hasOption(option)) {\r\n-            Option opt \u003d options.getOption(option);\r\n+        Option opt \u003d options.getOption(option);\r\n+        if (opt \u003d\u003d null) {\r\n+            throw new UnrecognizedOptionException(\"Default option wasn\u0027t defined\", option);\r\n+        }\r\n+        OptionGroup group \u003d options.getOptionGroup(opt);\r\n+        boolean selected \u003d group !\u003d null \u0026\u0026 group.getSelected() !\u003d null;\r\n+        if (!cmd.hasOption(option) \u0026\u0026 !selected) {\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n             handleOption(opt);\r\n             currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
      "extendedDetails": {}
    },
    "5560a086886c4d6dba2c30eb75e57e3167765c6e": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/17/10 1:59 AM",
      "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
      "commitAuthor": "Emmanuel Bourg",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/17/10 1:59 AM",
          "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "6/16/10 12:45 PM",
          "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 139,
          "functionName": "handleProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,20 +1,21 @@\n-private void handleProperties(Properties properties) {\r\n+private void handleProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n-            cmd.addOption(opt);\r\n+            handleOption(opt);\r\n+            currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ParseException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Default options are now taken into account for the required options (CLI-202)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955420 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "6/17/10 1:59 AM",
          "commitName": "5560a086886c4d6dba2c30eb75e57e3167765c6e",
          "commitAuthor": "Emmanuel Bourg",
          "commitDateOld": "6/16/10 12:45 PM",
          "commitNameOld": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
          "commitAuthorOld": "Emmanuel Bourg",
          "daysBetweenCommits": 0.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "actualSource": "private void handleProperties(Properties properties) throws ParseException {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            handleOption(opt);\r\n            currentOption \u003d null;\r\n        }\r\n    }\r\n}",
          "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
          "functionStartLine": 139,
          "functionName": "handleProperties",
          "functionAnnotation": "",
          "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
          "diff": "@@ -1,20 +1,21 @@\n-private void handleProperties(Properties properties) {\r\n+private void handleProperties(Properties properties) throws ParseException {\r\n     if (properties \u003d\u003d null) {\r\n         return;\r\n     }\r\n     for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n         String option \u003d e.nextElement().toString();\r\n         if (!cmd.hasOption(option)) {\r\n             Option opt \u003d options.getOption(option);\r\n             String value \u003d properties.getProperty(option);\r\n             if (opt.hasArg()) {\r\n                 if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                     opt.addValueForProcessing(value);\r\n                 }\r\n             } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                 continue;\r\n             }\r\n-            cmd.addOption(opt);\r\n+            handleOption(opt);\r\n+            currentOption \u003d null;\r\n         }\r\n     }\r\n }\n\\ No newline at end of file\n",
          "extendedDetails": {}
        }
      ]
    },
    "1596f3bbe57986361da4ac1a23634dd5b00d10df": {
      "type": "Yfilerename",
      "commitMessage": "Switched to the Maven 2 default directory layout (part 3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 12:45 PM",
      "commitName": "1596f3bbe57986361da4ac1a23634dd5b00d10df",
      "commitAuthor": "Emmanuel Bourg",
      "commitDateOld": "6/16/10 12:42 PM",
      "commitNameOld": "406a35f1a128944b7c51dcbc4a1f04c3f8bec3e6",
      "commitAuthorOld": "Emmanuel Bourg",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "actualSource": "private void handleProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/main/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 139,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n",
      "diff": "",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/commons/cli/DefaultParser.java",
        "newPath": "src/main/java/org/apache/commons/cli/DefaultParser.java"
      }
    },
    "a2cf820dd69e55050a8db004c305a6133c3feb2e": {
      "type": "Yintroduced",
      "commitMessage": "Added the missing parse methods accepting a map with the default options to DefaultParser\nMoved the related tests from ValueTest to ParserTestCase\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/cli/trunk@955099 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "6/16/10 3:14 AM",
      "commitName": "a2cf820dd69e55050a8db004c305a6133c3feb2e",
      "commitAuthor": "Emmanuel Bourg",
      "diff": "@@ -0,0 +1,20 @@\n+private void handleProperties(Properties properties) {\r\n+    if (properties \u003d\u003d null) {\r\n+        return;\r\n+    }\r\n+    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n+        String option \u003d e.nextElement().toString();\r\n+        if (!cmd.hasOption(option)) {\r\n+            Option opt \u003d options.getOption(option);\r\n+            String value \u003d properties.getProperty(option);\r\n+            if (opt.hasArg()) {\r\n+                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n+                    opt.addValueForProcessing(value);\r\n+                }\r\n+            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n+                continue;\r\n+            }\r\n+            cmd.addOption(opt);\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n",
      "actualSource": "private void handleProperties(Properties properties) {\r\n    if (properties \u003d\u003d null) {\r\n        return;\r\n    }\r\n    for (Enumeration e \u003d properties.propertyNames(); e.hasMoreElements(); ) {\r\n        String option \u003d e.nextElement().toString();\r\n        if (!cmd.hasOption(option)) {\r\n            Option opt \u003d options.getOption(option);\r\n            String value \u003d properties.getProperty(option);\r\n            if (opt.hasArg()) {\r\n                if (opt.getValues() \u003d\u003d null || opt.getValues().length \u003d\u003d 0) {\r\n                    opt.addValueForProcessing(value);\r\n                }\r\n            } else if (!(\"yes\".equalsIgnoreCase(value) || \"true\".equalsIgnoreCase(value) || \"1\".equalsIgnoreCase(value))) {\r\n                continue;\r\n            }\r\n            cmd.addOption(opt);\r\n        }\r\n    }\r\n}",
      "path": "src/java/org/apache/commons/cli/DefaultParser.java",
      "functionStartLine": 139,
      "functionName": "handleProperties",
      "functionAnnotation": "",
      "functionDoc": "Sets the values of Options using the values in \u003ccode\u003eproperties\u003c/code\u003e.\r\n\r\n@param properties The value properties to be processed.\r\n"
    }
  }
}